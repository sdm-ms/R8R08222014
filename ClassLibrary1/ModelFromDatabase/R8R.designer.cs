#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClassLibrary1.OldModel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Norm0001")]
	public partial class R8RDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAddressField(AddressField instance);
    partial void UpdateAddressField(AddressField instance);
    partial void DeleteAddressField(AddressField instance);
    partial void Insertaspnet_Application(aspnet_Application instance);
    partial void Updateaspnet_Application(aspnet_Application instance);
    partial void Deleteaspnet_Application(aspnet_Application instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertaspnet_Path(aspnet_Path instance);
    partial void Updateaspnet_Path(aspnet_Path instance);
    partial void Deleteaspnet_Path(aspnet_Path instance);
    partial void Insertaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Updateaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Deleteaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Insertaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Updateaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Deleteaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Insertaspnet_Profile(aspnet_Profile instance);
    partial void Updateaspnet_Profile(aspnet_Profile instance);
    partial void Deleteaspnet_Profile(aspnet_Profile instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void Insertaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Updateaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Deleteaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Insertaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Updateaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Deleteaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void InsertChangesGroup(ChangesGroup instance);
    partial void UpdateChangesGroup(ChangesGroup instance);
    partial void DeleteChangesGroup(ChangesGroup instance);
    partial void InsertChangesStatusOfObject(ChangesStatusOfObject instance);
    partial void UpdateChangesStatusOfObject(ChangesStatusOfObject instance);
    partial void DeleteChangesStatusOfObject(ChangesStatusOfObject instance);
    partial void InsertChoiceField(ChoiceField instance);
    partial void UpdateChoiceField(ChoiceField instance);
    partial void DeleteChoiceField(ChoiceField instance);
    partial void InsertChoiceGroup(ChoiceGroup instance);
    partial void UpdateChoiceGroup(ChoiceGroup instance);
    partial void DeleteChoiceGroup(ChoiceGroup instance);
    partial void InsertChoiceInField(ChoiceInField instance);
    partial void UpdateChoiceInField(ChoiceInField instance);
    partial void DeleteChoiceInField(ChoiceInField instance);
    partial void InsertChoiceInGroup(ChoiceInGroup instance);
    partial void UpdateChoiceInGroup(ChoiceInGroup instance);
    partial void DeleteChoiceInGroup(ChoiceInGroup instance);
    partial void InsertDateTimeFieldDefinition(DateTimeFieldDefinition instance);
    partial void UpdateDateTimeFieldDefinition(DateTimeFieldDefinition instance);
    partial void DeleteDateTimeFieldDefinition(DateTimeFieldDefinition instance);
    partial void InsertDateTimeField(DateTimeField instance);
    partial void UpdateDateTimeField(DateTimeField instance);
    partial void DeleteDateTimeField(DateTimeField instance);
    partial void InsertDomain(Domain instance);
    partial void UpdateDomain(Domain instance);
    partial void DeleteDomain(Domain instance);
    partial void InsertField(Field instance);
    partial void UpdateField(Field instance);
    partial void DeleteField(Field instance);
    partial void InsertForumAdministrator(ForumAdministrator instance);
    partial void UpdateForumAdministrator(ForumAdministrator instance);
    partial void DeleteForumAdministrator(ForumAdministrator instance);
    partial void InsertForumGroupPermission(ForumGroupPermission instance);
    partial void UpdateForumGroupPermission(ForumGroupPermission instance);
    partial void DeleteForumGroupPermission(ForumGroupPermission instance);
    partial void InsertForumGroup(ForumGroup instance);
    partial void UpdateForumGroup(ForumGroup instance);
    partial void DeleteForumGroup(ForumGroup instance);
    partial void InsertForumMessage(ForumMessage instance);
    partial void UpdateForumMessage(ForumMessage instance);
    partial void DeleteForumMessage(ForumMessage instance);
    partial void InsertForumModerator(ForumModerator instance);
    partial void UpdateForumModerator(ForumModerator instance);
    partial void DeleteForumModerator(ForumModerator instance);
    partial void InsertForumNewTopicSubscription(ForumNewTopicSubscription instance);
    partial void UpdateForumNewTopicSubscription(ForumNewTopicSubscription instance);
    partial void DeleteForumNewTopicSubscription(ForumNewTopicSubscription instance);
    partial void InsertForumPersonalMessage(ForumPersonalMessage instance);
    partial void UpdateForumPersonalMessage(ForumPersonalMessage instance);
    partial void DeleteForumPersonalMessage(ForumPersonalMessage instance);
    partial void InsertForumPollAnswer(ForumPollAnswer instance);
    partial void UpdateForumPollAnswer(ForumPollAnswer instance);
    partial void DeleteForumPollAnswer(ForumPollAnswer instance);
    partial void InsertForumPollOption(ForumPollOption instance);
    partial void UpdateForumPollOption(ForumPollOption instance);
    partial void DeleteForumPollOption(ForumPollOption instance);
    partial void InsertForumPoll(ForumPoll instance);
    partial void UpdateForumPoll(ForumPoll instance);
    partial void DeleteForumPoll(ForumPoll instance);
    partial void InsertForum(Forum instance);
    partial void UpdateForum(Forum instance);
    partial void DeleteForum(Forum instance);
    partial void InsertForumSubforum(ForumSubforum instance);
    partial void UpdateForumSubforum(ForumSubforum instance);
    partial void DeleteForumSubforum(ForumSubforum instance);
    partial void InsertForumSubscription(ForumSubscription instance);
    partial void UpdateForumSubscription(ForumSubscription instance);
    partial void DeleteForumSubscription(ForumSubscription instance);
    partial void InsertForumTopic(ForumTopic instance);
    partial void UpdateForumTopic(ForumTopic instance);
    partial void DeleteForumTopic(ForumTopic instance);
    partial void InsertForumUploadedFile(ForumUploadedFile instance);
    partial void UpdateForumUploadedFile(ForumUploadedFile instance);
    partial void DeleteForumUploadedFile(ForumUploadedFile instance);
    partial void InsertForumUploadedPersonalFile(ForumUploadedPersonalFile instance);
    partial void UpdateForumUploadedPersonalFile(ForumUploadedPersonalFile instance);
    partial void DeleteForumUploadedPersonalFile(ForumUploadedPersonalFile instance);
    partial void InsertForumUserGroup(ForumUserGroup instance);
    partial void UpdateForumUserGroup(ForumUserGroup instance);
    partial void DeleteForumUserGroup(ForumUserGroup instance);
    partial void InsertForumUser(ForumUser instance);
    partial void UpdateForumUser(ForumUser instance);
    partial void DeleteForumUser(ForumUser instance);
    partial void InsertForumUsersInGroup(ForumUsersInGroup instance);
    partial void UpdateForumUsersInGroup(ForumUsersInGroup instance);
    partial void DeleteForumUsersInGroup(ForumUsersInGroup instance);
    partial void InsertHierarchyItem(HierarchyItem instance);
    partial void UpdateHierarchyItem(HierarchyItem instance);
    partial void DeleteHierarchyItem(HierarchyItem instance);
    partial void InsertInsertableContent(InsertableContent instance);
    partial void UpdateInsertableContent(InsertableContent instance);
    partial void DeleteInsertableContent(InsertableContent instance);
    partial void InsertLongProcess(LongProcess instance);
    partial void UpdateLongProcess(LongProcess instance);
    partial void DeleteLongProcess(LongProcess instance);
    partial void InsertNumberFieldDefinition(NumberFieldDefinition instance);
    partial void UpdateNumberFieldDefinition(NumberFieldDefinition instance);
    partial void DeleteNumberFieldDefinition(NumberFieldDefinition instance);
    partial void InsertNumberField(NumberField instance);
    partial void UpdateNumberField(NumberField instance);
    partial void DeleteNumberField(NumberField instance);
    partial void InsertOverrideCharacteristic(OverrideCharacteristic instance);
    partial void UpdateOverrideCharacteristic(OverrideCharacteristic instance);
    partial void DeleteOverrideCharacteristic(OverrideCharacteristic instance);
    partial void InsertPointsAdjustment(PointsAdjustment instance);
    partial void UpdatePointsAdjustment(PointsAdjustment instance);
    partial void DeletePointsAdjustment(PointsAdjustment instance);
    partial void InsertProposalEvaluationRatingSetting(ProposalEvaluationRatingSetting instance);
    partial void UpdateProposalEvaluationRatingSetting(ProposalEvaluationRatingSetting instance);
    partial void DeleteProposalEvaluationRatingSetting(ProposalEvaluationRatingSetting instance);
    partial void InsertRatingCharacteristic(RatingCharacteristic instance);
    partial void UpdateRatingCharacteristic(RatingCharacteristic instance);
    partial void DeleteRatingCharacteristic(RatingCharacteristic instance);
    partial void InsertRatingGroupResolution(RatingGroupResolution instance);
    partial void UpdateRatingGroupResolution(RatingGroupResolution instance);
    partial void DeleteRatingGroupResolution(RatingGroupResolution instance);
    partial void InsertRatingGroupStatusRecord(RatingGroupStatusRecord instance);
    partial void UpdateRatingGroupStatusRecord(RatingGroupStatusRecord instance);
    partial void DeleteRatingGroupStatusRecord(RatingGroupStatusRecord instance);
    partial void InsertRatingPhaseGroup(RatingPhaseGroup instance);
    partial void UpdateRatingPhaseGroup(RatingPhaseGroup instance);
    partial void DeleteRatingPhaseGroup(RatingPhaseGroup instance);
    partial void InsertRatingPhase(RatingPhase instance);
    partial void UpdateRatingPhase(RatingPhase instance);
    partial void DeleteRatingPhase(RatingPhase instance);
    partial void InsertRatingPlan(RatingPlan instance);
    partial void UpdateRatingPlan(RatingPlan instance);
    partial void DeleteRatingPlan(RatingPlan instance);
    partial void InsertRewardPendingPointsTracker(RewardPendingPointsTracker instance);
    partial void UpdateRewardPendingPointsTracker(RewardPendingPointsTracker instance);
    partial void DeleteRewardPendingPointsTracker(RewardPendingPointsTracker instance);
    partial void InsertRewardRatingSetting(RewardRatingSetting instance);
    partial void UpdateRewardRatingSetting(RewardRatingSetting instance);
    partial void DeleteRewardRatingSetting(RewardRatingSetting instance);
    partial void InsertSearchWordChoice(SearchWordChoice instance);
    partial void UpdateSearchWordChoice(SearchWordChoice instance);
    partial void DeleteSearchWordChoice(SearchWordChoice instance);
    partial void InsertSearchWordTblRowName(SearchWordTblRowName instance);
    partial void UpdateSearchWordTblRowName(SearchWordTblRowName instance);
    partial void DeleteSearchWordTblRowName(SearchWordTblRowName instance);
    partial void InsertSearchWordTextField(SearchWordTextField instance);
    partial void UpdateSearchWordTextField(SearchWordTextField instance);
    partial void DeleteSearchWordTextField(SearchWordTextField instance);
    partial void InsertSubsidyAdjustment(SubsidyAdjustment instance);
    partial void UpdateSubsidyAdjustment(SubsidyAdjustment instance);
    partial void DeleteSubsidyAdjustment(SubsidyAdjustment instance);
    partial void InsertSubsidyDensityRangeGroup(SubsidyDensityRangeGroup instance);
    partial void UpdateSubsidyDensityRangeGroup(SubsidyDensityRangeGroup instance);
    partial void DeleteSubsidyDensityRangeGroup(SubsidyDensityRangeGroup instance);
    partial void InsertSubsidyDensityRange(SubsidyDensityRange instance);
    partial void UpdateSubsidyDensityRange(SubsidyDensityRange instance);
    partial void DeleteSubsidyDensityRange(SubsidyDensityRange instance);
    partial void InsertTblColumnFormatting(TblColumnFormatting instance);
    partial void UpdateTblColumnFormatting(TblColumnFormatting instance);
    partial void DeleteTblColumnFormatting(TblColumnFormatting instance);
    partial void InsertTblRowFieldDisplay(TblRowFieldDisplay instance);
    partial void UpdateTblRowFieldDisplay(TblRowFieldDisplay instance);
    partial void DeleteTblRowFieldDisplay(TblRowFieldDisplay instance);
    partial void InsertTblRowStatusRecord(TblRowStatusRecord instance);
    partial void UpdateTblRowStatusRecord(TblRowStatusRecord instance);
    partial void DeleteTblRowStatusRecord(TblRowStatusRecord instance);
    partial void InsertTextFieldDefinition(TextFieldDefinition instance);
    partial void UpdateTextFieldDefinition(TextFieldDefinition instance);
    partial void DeleteTextFieldDefinition(TextFieldDefinition instance);
    partial void InsertTextField(TextField instance);
    partial void UpdateTextField(TextField instance);
    partial void DeleteTextField(TextField instance);
    partial void InsertUserRatingGroup(UserRatingGroup instance);
    partial void UpdateUserRatingGroup(UserRatingGroup instance);
    partial void DeleteUserRatingGroup(UserRatingGroup instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUsersAdministrationRightsGroup(UsersAdministrationRightsGroup instance);
    partial void UpdateUsersAdministrationRightsGroup(UsersAdministrationRightsGroup instance);
    partial void DeleteUsersAdministrationRightsGroup(UsersAdministrationRightsGroup instance);
    partial void InsertUsersRight(UsersRight instance);
    partial void UpdateUsersRight(UsersRight instance);
    partial void DeleteUsersRight(UsersRight instance);
    partial void InsertSearchWordHierarchyItem(SearchWordHierarchyItem instance);
    partial void UpdateSearchWordHierarchyItem(SearchWordHierarchyItem instance);
    partial void DeleteSearchWordHierarchyItem(SearchWordHierarchyItem instance);
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertRatingGroup(RatingGroup instance);
    partial void UpdateRatingGroup(RatingGroup instance);
    partial void DeleteRatingGroup(RatingGroup instance);
    partial void InsertDatabaseStatus(DatabaseStatus instance);
    partial void UpdateDatabaseStatus(DatabaseStatus instance);
    partial void DeleteDatabaseStatus(DatabaseStatus instance);
    partial void InsertRoleStatus(RoleStatus instance);
    partial void UpdateRoleStatus(RoleStatus instance);
    partial void DeleteRoleStatus(RoleStatus instance);
    partial void InsertUserCheckIn(UserCheckIn instance);
    partial void UpdateUserCheckIn(UserCheckIn instance);
    partial void DeleteUserCheckIn(UserCheckIn instance);
    partial void InsertRatingCondition(RatingCondition instance);
    partial void UpdateRatingCondition(RatingCondition instance);
    partial void DeleteRatingCondition(RatingCondition instance);
    partial void InsertUserRatingsToAdd(UserRatingsToAdd instance);
    partial void UpdateUserRatingsToAdd(UserRatingsToAdd instance);
    partial void DeleteUserRatingsToAdd(UserRatingsToAdd instance);
    partial void InsertTblTab(TblTab instance);
    partial void UpdateTblTab(TblTab instance);
    partial void DeleteTblTab(TblTab instance);
    partial void InsertUserAction(UserAction instance);
    partial void UpdateUserAction(UserAction instance);
    partial void DeleteUserAction(UserAction instance);
    partial void InsertChoiceGroupFieldDefinition(ChoiceGroupFieldDefinition instance);
    partial void UpdateChoiceGroupFieldDefinition(ChoiceGroupFieldDefinition instance);
    partial void DeleteChoiceGroupFieldDefinition(ChoiceGroupFieldDefinition instance);
    partial void InsertAdministrationRight(AdministrationRight instance);
    partial void UpdateAdministrationRight(AdministrationRight instance);
    partial void DeleteAdministrationRight(AdministrationRight instance);
    partial void InsertAdministrationRightsGroup(AdministrationRightsGroup instance);
    partial void UpdateAdministrationRightsGroup(AdministrationRightsGroup instance);
    partial void DeleteAdministrationRightsGroup(AdministrationRightsGroup instance);
    partial void InsertUserInfo(UserInfo instance);
    partial void UpdateUserInfo(UserInfo instance);
    partial void DeleteUserInfo(UserInfo instance);
    partial void InsertTrustTrackerUnit(TrustTrackerUnit instance);
    partial void UpdateTrustTrackerUnit(TrustTrackerUnit instance);
    partial void DeleteTrustTrackerUnit(TrustTrackerUnit instance);
    partial void InsertTrustTrackerForChoiceInGroupsUserRatingLink(TrustTrackerForChoiceInGroupsUserRatingLink instance);
    partial void UpdateTrustTrackerForChoiceInGroupsUserRatingLink(TrustTrackerForChoiceInGroupsUserRatingLink instance);
    partial void DeleteTrustTrackerForChoiceInGroupsUserRatingLink(TrustTrackerForChoiceInGroupsUserRatingLink instance);
    partial void InsertTrustTrackerForChoiceInGroup(TrustTrackerForChoiceInGroup instance);
    partial void UpdateTrustTrackerForChoiceInGroup(TrustTrackerForChoiceInGroup instance);
    partial void DeleteTrustTrackerForChoiceInGroup(TrustTrackerForChoiceInGroup instance);
    partial void InsertPointsManager(PointsManager instance);
    partial void UpdatePointsManager(PointsManager instance);
    partial void DeletePointsManager(PointsManager instance);
    partial void InsertRatingPhaseStatus(RatingPhaseStatus instance);
    partial void UpdateRatingPhaseStatus(RatingPhaseStatus instance);
    partial void DeleteRatingPhaseStatus(RatingPhaseStatus instance);
    partial void InsertRating(Rating instance);
    partial void UpdateRating(Rating instance);
    partial void DeleteRating(Rating instance);
    partial void InsertRatingGroupAttribute(RatingGroupAttribute instance);
    partial void UpdateRatingGroupAttribute(RatingGroupAttribute instance);
    partial void DeleteRatingGroupAttribute(RatingGroupAttribute instance);
    partial void InsertVolatilityTblRowTracker(VolatilityTblRowTracker instance);
    partial void UpdateVolatilityTblRowTracker(VolatilityTblRowTracker instance);
    partial void DeleteVolatilityTblRowTracker(VolatilityTblRowTracker instance);
    partial void InsertVolatilityTracker(VolatilityTracker instance);
    partial void UpdateVolatilityTracker(VolatilityTracker instance);
    partial void DeleteVolatilityTracker(VolatilityTracker instance);
    partial void InsertUserRating(UserRating instance);
    partial void UpdateUserRating(UserRating instance);
    partial void DeleteUserRating(UserRating instance);
    partial void InsertPointsTotal(PointsTotal instance);
    partial void UpdatePointsTotal(PointsTotal instance);
    partial void DeletePointsTotal(PointsTotal instance);
    partial void InsertTrustTracker(TrustTracker instance);
    partial void UpdateTrustTracker(TrustTracker instance);
    partial void DeleteTrustTracker(TrustTracker instance);
    partial void InsertUserInteractionStat(UserInteractionStat instance);
    partial void UpdateUserInteractionStat(UserInteractionStat instance);
    partial void DeleteUserInteractionStat(UserInteractionStat instance);
    partial void InsertTrustTrackerStat(TrustTrackerStat instance);
    partial void UpdateTrustTrackerStat(TrustTrackerStat instance);
    partial void DeleteTrustTrackerStat(TrustTrackerStat instance);
    partial void InsertUserInteraction(UserInteraction instance);
    partial void UpdateUserInteraction(UserInteraction instance);
    partial void DeleteUserInteraction(UserInteraction instance);
    partial void InsertTblRow(TblRow instance);
    partial void UpdateTblRow(TblRow instance);
    partial void DeleteTblRow(TblRow instance);
    partial void InsertUniquenessLock(UniquenessLock instance);
    partial void UpdateUniquenessLock(UniquenessLock instance);
    partial void DeleteUniquenessLock(UniquenessLock instance);
    partial void InsertTbl(Tbl instance);
    partial void UpdateTbl(Tbl instance);
    partial void DeleteTbl(Tbl instance);
    partial void InsertRatingGroupPhaseStatus(RatingGroupPhaseStatus instance);
    partial void UpdateRatingGroupPhaseStatus(RatingGroupPhaseStatus instance);
    partial void DeleteRatingGroupPhaseStatus(RatingGroupPhaseStatus instance);
    partial void InsertTblDimension(TblDimension instance);
    partial void UpdateTblDimension(TblDimension instance);
    partial void DeleteTblDimension(TblDimension instance);
    partial void InsertTblColumn(TblColumn instance);
    partial void UpdateTblColumn(TblColumn instance);
    partial void DeleteTblColumn(TblColumn instance);
    partial void InsertFieldDefinition(FieldDefinition instance);
    partial void UpdateFieldDefinition(FieldDefinition instance);
    partial void DeleteFieldDefinition(FieldDefinition instance);
    partial void InsertUniquenessLockReference(UniquenessLockReference instance);
    partial void UpdateUniquenessLockReference(UniquenessLockReference instance);
    partial void DeleteUniquenessLockReference(UniquenessLockReference instance);
    partial void InsertInvitedUser(InvitedUser instance);
    partial void UpdateInvitedUser(InvitedUser instance);
    partial void DeleteInvitedUser(InvitedUser instance);
    partial void InsertProposalSetting(ProposalSetting instance);
    partial void UpdateProposalSetting(ProposalSetting instance);
    partial void DeleteProposalSetting(ProposalSetting instance);
    #endregion
		
		public R8RDataContext() : 
				base(global::ClassLibrary1.Properties.Settings.Default.Norm0001ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public R8RDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public R8RDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public R8RDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public R8RDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AddressField> AddressFields
		{
			get
			{
				return this.GetTable<AddressField>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Application> aspnet_Applications
		{
			get
			{
				return this.GetTable<aspnet_Application>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this.GetTable<aspnet_Path>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationAllUser> aspnet_PersonalizationAllUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationAllUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationPerUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Profile> aspnet_Profiles
		{
			get
			{
				return this.GetTable<aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_SchemaVersion> aspnet_SchemaVersions
		{
			get
			{
				return this.GetTable<aspnet_SchemaVersion>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_WebEvent_Event> aspnet_WebEvent_Events
		{
			get
			{
				return this.GetTable<aspnet_WebEvent_Event>();
			}
		}
		
		public System.Data.Linq.Table<ChangesGroup> ChangesGroups
		{
			get
			{
				return this.GetTable<ChangesGroup>();
			}
		}
		
		public System.Data.Linq.Table<ChangesStatusOfObject> ChangesStatusOfObjects
		{
			get
			{
				return this.GetTable<ChangesStatusOfObject>();
			}
		}
		
		public System.Data.Linq.Table<ChoiceField> ChoiceFields
		{
			get
			{
				return this.GetTable<ChoiceField>();
			}
		}
		
		public System.Data.Linq.Table<ChoiceGroup> ChoiceGroups
		{
			get
			{
				return this.GetTable<ChoiceGroup>();
			}
		}
		
		public System.Data.Linq.Table<ChoiceInField> ChoiceInFields
		{
			get
			{
				return this.GetTable<ChoiceInField>();
			}
		}
		
		public System.Data.Linq.Table<ChoiceInGroup> ChoiceInGroups
		{
			get
			{
				return this.GetTable<ChoiceInGroup>();
			}
		}
		
		public System.Data.Linq.Table<DateTimeFieldDefinition> DateTimeFieldDefinitions
		{
			get
			{
				return this.GetTable<DateTimeFieldDefinition>();
			}
		}
		
		public System.Data.Linq.Table<DateTimeField> DateTimeFields
		{
			get
			{
				return this.GetTable<DateTimeField>();
			}
		}
		
		public System.Data.Linq.Table<Domain> Domains
		{
			get
			{
				return this.GetTable<Domain>();
			}
		}
		
		public System.Data.Linq.Table<Field> Fields
		{
			get
			{
				return this.GetTable<Field>();
			}
		}
		
		public System.Data.Linq.Table<ForumAdministrator> ForumAdministrators
		{
			get
			{
				return this.GetTable<ForumAdministrator>();
			}
		}
		
		public System.Data.Linq.Table<ForumComplaint> ForumComplaints
		{
			get
			{
				return this.GetTable<ForumComplaint>();
			}
		}
		
		public System.Data.Linq.Table<ForumGroupPermission> ForumGroupPermissions
		{
			get
			{
				return this.GetTable<ForumGroupPermission>();
			}
		}
		
		public System.Data.Linq.Table<ForumGroup> ForumGroups
		{
			get
			{
				return this.GetTable<ForumGroup>();
			}
		}
		
		public System.Data.Linq.Table<ForumMessage> ForumMessages
		{
			get
			{
				return this.GetTable<ForumMessage>();
			}
		}
		
		public System.Data.Linq.Table<ForumModerator> ForumModerators
		{
			get
			{
				return this.GetTable<ForumModerator>();
			}
		}
		
		public System.Data.Linq.Table<ForumNewTopicSubscription> ForumNewTopicSubscriptions
		{
			get
			{
				return this.GetTable<ForumNewTopicSubscription>();
			}
		}
		
		public System.Data.Linq.Table<ForumPersonalMessage> ForumPersonalMessages
		{
			get
			{
				return this.GetTable<ForumPersonalMessage>();
			}
		}
		
		public System.Data.Linq.Table<ForumPollAnswer> ForumPollAnswers
		{
			get
			{
				return this.GetTable<ForumPollAnswer>();
			}
		}
		
		public System.Data.Linq.Table<ForumPollOption> ForumPollOptions
		{
			get
			{
				return this.GetTable<ForumPollOption>();
			}
		}
		
		public System.Data.Linq.Table<ForumPoll> ForumPolls
		{
			get
			{
				return this.GetTable<ForumPoll>();
			}
		}
		
		public System.Data.Linq.Table<Forum> Forums
		{
			get
			{
				return this.GetTable<Forum>();
			}
		}
		
		public System.Data.Linq.Table<ForumSubforum> ForumSubforums
		{
			get
			{
				return this.GetTable<ForumSubforum>();
			}
		}
		
		public System.Data.Linq.Table<ForumSubscription> ForumSubscriptions
		{
			get
			{
				return this.GetTable<ForumSubscription>();
			}
		}
		
		public System.Data.Linq.Table<ForumTopic> ForumTopics
		{
			get
			{
				return this.GetTable<ForumTopic>();
			}
		}
		
		public System.Data.Linq.Table<ForumUploadedFile> ForumUploadedFiles
		{
			get
			{
				return this.GetTable<ForumUploadedFile>();
			}
		}
		
		public System.Data.Linq.Table<ForumUploadedPersonalFile> ForumUploadedPersonalFiles
		{
			get
			{
				return this.GetTable<ForumUploadedPersonalFile>();
			}
		}
		
		public System.Data.Linq.Table<ForumUserGroup> ForumUserGroups
		{
			get
			{
				return this.GetTable<ForumUserGroup>();
			}
		}
		
		public System.Data.Linq.Table<ForumUser> ForumUsers
		{
			get
			{
				return this.GetTable<ForumUser>();
			}
		}
		
		public System.Data.Linq.Table<ForumUsersInGroup> ForumUsersInGroups
		{
			get
			{
				return this.GetTable<ForumUsersInGroup>();
			}
		}
		
		public System.Data.Linq.Table<HierarchyItem> HierarchyItems
		{
			get
			{
				return this.GetTable<HierarchyItem>();
			}
		}
		
		public System.Data.Linq.Table<InsertableContent> InsertableContents
		{
			get
			{
				return this.GetTable<InsertableContent>();
			}
		}
		
		public System.Data.Linq.Table<LongProcess> LongProcesses
		{
			get
			{
				return this.GetTable<LongProcess>();
			}
		}
		
		public System.Data.Linq.Table<NumberFieldDefinition> NumberFieldDefinitions
		{
			get
			{
				return this.GetTable<NumberFieldDefinition>();
			}
		}
		
		public System.Data.Linq.Table<NumberField> NumberFields
		{
			get
			{
				return this.GetTable<NumberField>();
			}
		}
		
		public System.Data.Linq.Table<OverrideCharacteristic> OverrideCharacteristics
		{
			get
			{
				return this.GetTable<OverrideCharacteristic>();
			}
		}
		
		public System.Data.Linq.Table<PointsAdjustment> PointsAdjustments
		{
			get
			{
				return this.GetTable<PointsAdjustment>();
			}
		}
		
		public System.Data.Linq.Table<ProposalEvaluationRatingSetting> ProposalEvaluationRatingSettings
		{
			get
			{
				return this.GetTable<ProposalEvaluationRatingSetting>();
			}
		}
		
		public System.Data.Linq.Table<RatingCharacteristic> RatingCharacteristics
		{
			get
			{
				return this.GetTable<RatingCharacteristic>();
			}
		}
		
		public System.Data.Linq.Table<RatingGroupResolution> RatingGroupResolutions
		{
			get
			{
				return this.GetTable<RatingGroupResolution>();
			}
		}
		
		public System.Data.Linq.Table<RatingGroupStatusRecord> RatingGroupStatusRecords
		{
			get
			{
				return this.GetTable<RatingGroupStatusRecord>();
			}
		}
		
		public System.Data.Linq.Table<RatingPhaseGroup> RatingPhaseGroups
		{
			get
			{
				return this.GetTable<RatingPhaseGroup>();
			}
		}
		
		public System.Data.Linq.Table<RatingPhase> RatingPhases
		{
			get
			{
				return this.GetTable<RatingPhase>();
			}
		}
		
		public System.Data.Linq.Table<RatingPlan> RatingPlans
		{
			get
			{
				return this.GetTable<RatingPlan>();
			}
		}
		
		public System.Data.Linq.Table<RewardPendingPointsTracker> RewardPendingPointsTrackers
		{
			get
			{
				return this.GetTable<RewardPendingPointsTracker>();
			}
		}
		
		public System.Data.Linq.Table<RewardRatingSetting> RewardRatingSettings
		{
			get
			{
				return this.GetTable<RewardRatingSetting>();
			}
		}
		
		public System.Data.Linq.Table<SearchWordChoice> SearchWordChoices
		{
			get
			{
				return this.GetTable<SearchWordChoice>();
			}
		}
		
		public System.Data.Linq.Table<SearchWordTblRowName> SearchWordTblRowNames
		{
			get
			{
				return this.GetTable<SearchWordTblRowName>();
			}
		}
		
		public System.Data.Linq.Table<SearchWordTextField> SearchWordTextFields
		{
			get
			{
				return this.GetTable<SearchWordTextField>();
			}
		}
		
		public System.Data.Linq.Table<SubsidyAdjustment> SubsidyAdjustments
		{
			get
			{
				return this.GetTable<SubsidyAdjustment>();
			}
		}
		
		public System.Data.Linq.Table<SubsidyDensityRangeGroup> SubsidyDensityRangeGroups
		{
			get
			{
				return this.GetTable<SubsidyDensityRangeGroup>();
			}
		}
		
		public System.Data.Linq.Table<SubsidyDensityRange> SubsidyDensityRanges
		{
			get
			{
				return this.GetTable<SubsidyDensityRange>();
			}
		}
		
		public System.Data.Linq.Table<TblColumnFormatting> TblColumnFormattings
		{
			get
			{
				return this.GetTable<TblColumnFormatting>();
			}
		}
		
		public System.Data.Linq.Table<TblRowFieldDisplay> TblRowFieldDisplays
		{
			get
			{
				return this.GetTable<TblRowFieldDisplay>();
			}
		}
		
		public System.Data.Linq.Table<TblRowStatusRecord> TblRowStatusRecords
		{
			get
			{
				return this.GetTable<TblRowStatusRecord>();
			}
		}
		
		public System.Data.Linq.Table<TextFieldDefinition> TextFieldDefinitions
		{
			get
			{
				return this.GetTable<TextFieldDefinition>();
			}
		}
		
		public System.Data.Linq.Table<TextField> TextFields
		{
			get
			{
				return this.GetTable<TextField>();
			}
		}
		
		public System.Data.Linq.Table<UserRatingGroup> UserRatingGroups
		{
			get
			{
				return this.GetTable<UserRatingGroup>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UsersAdministrationRightsGroup> UsersAdministrationRightsGroups
		{
			get
			{
				return this.GetTable<UsersAdministrationRightsGroup>();
			}
		}
		
		public System.Data.Linq.Table<UsersRight> UsersRights
		{
			get
			{
				return this.GetTable<UsersRight>();
			}
		}
		
		public System.Data.Linq.Table<SearchWordHierarchyItem> SearchWordHierarchyItems
		{
			get
			{
				return this.GetTable<SearchWordHierarchyItem>();
			}
		}
		
		public System.Data.Linq.Table<Comment> Comments
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<RatingGroup> RatingGroups
		{
			get
			{
				return this.GetTable<RatingGroup>();
			}
		}
		
		public System.Data.Linq.Table<DatabaseStatus> DatabaseStatus
		{
			get
			{
				return this.GetTable<DatabaseStatus>();
			}
		}
		
		public System.Data.Linq.Table<RoleStatus> RoleStatus
		{
			get
			{
				return this.GetTable<RoleStatus>();
			}
		}
		
		public System.Data.Linq.Table<UserCheckIn> UserCheckIns
		{
			get
			{
				return this.GetTable<UserCheckIn>();
			}
		}
		
		public System.Data.Linq.Table<RatingCondition> RatingConditions
		{
			get
			{
				return this.GetTable<RatingCondition>();
			}
		}
		
		public System.Data.Linq.Table<UserRatingsToAdd> UserRatingsToAdds
		{
			get
			{
				return this.GetTable<UserRatingsToAdd>();
			}
		}
		
		public System.Data.Linq.Table<TblTab> TblTabs
		{
			get
			{
				return this.GetTable<TblTab>();
			}
		}
		
		public System.Data.Linq.Table<UserAction> UserActions
		{
			get
			{
				return this.GetTable<UserAction>();
			}
		}
		
		public System.Data.Linq.Table<ChoiceGroupFieldDefinition> ChoiceGroupFieldDefinitions
		{
			get
			{
				return this.GetTable<ChoiceGroupFieldDefinition>();
			}
		}
		
		public System.Data.Linq.Table<AdministrationRight> AdministrationRights
		{
			get
			{
				return this.GetTable<AdministrationRight>();
			}
		}
		
		public System.Data.Linq.Table<AdministrationRightsGroup> AdministrationRightsGroups
		{
			get
			{
				return this.GetTable<AdministrationRightsGroup>();
			}
		}
		
		public System.Data.Linq.Table<UserInfo> UserInfos
		{
			get
			{
				return this.GetTable<UserInfo>();
			}
		}
		
		public System.Data.Linq.Table<TrustTrackerUnit> TrustTrackerUnits
		{
			get
			{
				return this.GetTable<TrustTrackerUnit>();
			}
		}
		
		public System.Data.Linq.Table<TrustTrackerForChoiceInGroupsUserRatingLink> TrustTrackerForChoiceInGroupsUserRatingLinks
		{
			get
			{
				return this.GetTable<TrustTrackerForChoiceInGroupsUserRatingLink>();
			}
		}
		
		public System.Data.Linq.Table<TrustTrackerForChoiceInGroup> TrustTrackerForChoiceInGroups
		{
			get
			{
				return this.GetTable<TrustTrackerForChoiceInGroup>();
			}
		}
		
		public System.Data.Linq.Table<PointsManager> PointsManagers
		{
			get
			{
				return this.GetTable<PointsManager>();
			}
		}
		
		public System.Data.Linq.Table<RatingPhaseStatus> RatingPhaseStatus
		{
			get
			{
				return this.GetTable<RatingPhaseStatus>();
			}
		}
		
		public System.Data.Linq.Table<Rating> Ratings
		{
			get
			{
				return this.GetTable<Rating>();
			}
		}
		
		public System.Data.Linq.Table<RatingGroupAttribute> RatingGroupAttributes
		{
			get
			{
				return this.GetTable<RatingGroupAttribute>();
			}
		}
		
		public System.Data.Linq.Table<VolatilityTblRowTracker> VolatilityTblRowTrackers
		{
			get
			{
				return this.GetTable<VolatilityTblRowTracker>();
			}
		}
		
		public System.Data.Linq.Table<VolatilityTracker> VolatilityTrackers
		{
			get
			{
				return this.GetTable<VolatilityTracker>();
			}
		}
		
		public System.Data.Linq.Table<UserRating> UserRatings
		{
			get
			{
				return this.GetTable<UserRating>();
			}
		}
		
		public System.Data.Linq.Table<PointsTotal> PointsTotals
		{
			get
			{
				return this.GetTable<PointsTotal>();
			}
		}
		
		public System.Data.Linq.Table<TrustTracker> TrustTrackers
		{
			get
			{
				return this.GetTable<TrustTracker>();
			}
		}
		
		public System.Data.Linq.Table<UserInteractionStat> UserInteractionStats
		{
			get
			{
				return this.GetTable<UserInteractionStat>();
			}
		}
		
		public System.Data.Linq.Table<TrustTrackerStat> TrustTrackerStats
		{
			get
			{
				return this.GetTable<TrustTrackerStat>();
			}
		}
		
		public System.Data.Linq.Table<UserInteraction> UserInteractions
		{
			get
			{
				return this.GetTable<UserInteraction>();
			}
		}
		
		public System.Data.Linq.Table<TblRow> TblRows
		{
			get
			{
				return this.GetTable<TblRow>();
			}
		}
		
		public System.Data.Linq.Table<UniquenessLock> UniquenessLocks
		{
			get
			{
				return this.GetTable<UniquenessLock>();
			}
		}
		
		public System.Data.Linq.Table<Tbl> Tbls
		{
			get
			{
				return this.GetTable<Tbl>();
			}
		}
		
		public System.Data.Linq.Table<RatingGroupPhaseStatus> RatingGroupPhaseStatus
		{
			get
			{
				return this.GetTable<RatingGroupPhaseStatus>();
			}
		}
		
		public System.Data.Linq.Table<TblDimension> TblDimensions
		{
			get
			{
				return this.GetTable<TblDimension>();
			}
		}
		
		public System.Data.Linq.Table<TblColumn> TblColumns
		{
			get
			{
				return this.GetTable<TblColumn>();
			}
		}
		
		public System.Data.Linq.Table<FieldDefinition> FieldDefinitions
		{
			get
			{
				return this.GetTable<FieldDefinition>();
			}
		}
		
		public System.Data.Linq.Table<UniquenessLockReference> UniquenessLockReferences
		{
			get
			{
				return this.GetTable<UniquenessLockReference>();
			}
		}
		
		public System.Data.Linq.Table<InvitedUser> InvitedUsers
		{
			get
			{
				return this.GetTable<InvitedUser>();
			}
		}
		
		public System.Data.Linq.Table<ProposalSetting> ProposalSettings
		{
			get
			{
				return this.GetTable<ProposalSetting>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DistanceBetween", IsComposable=true)]
		public System.Nullable<float> DistanceBetween([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Lat1", DbType="Real")] System.Nullable<float> lat1, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Long1", DbType="Real")] System.Nullable<float> long1, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Lat2", DbType="Real")] System.Nullable<float> lat2, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Long2", DbType="Real")] System.Nullable<float> long2)
		{
			return ((System.Nullable<float>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lat1, long1, lat2, long2).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DistanceBetween2", IsComposable=true)]
		public System.Nullable<float> DistanceBetween2([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AddressFieldID", DbType="Int")] System.Nullable<int> addressFieldID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Lat1", DbType="Real")] System.Nullable<float> lat1, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Long1", DbType="Real")] System.Nullable<float> long1)
		{
			return ((System.Nullable<float>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), addressFieldID, lat1, long1).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UDFDistanceWithin", IsComposable=true)]
		public IQueryable<UDFDistanceWithinResult> UDFDistanceWithin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Real")] System.Nullable<float> lat, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="long", DbType="Real")] System.Nullable<float> @long, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Real")] System.Nullable<float> distance)
		{
			return this.CreateMethodCallQuery<UDFDistanceWithinResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lat, @long, distance);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UDFNearestNeighbors", IsComposable=true)]
		public IQueryable<UDFNearestNeighborsResult> UDFNearestNeighbors([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Real")] System.Nullable<float> lat, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="long", DbType="Real")] System.Nullable<float> @long, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> neighbors)
		{
			return this.CreateMethodCallQuery<UDFNearestNeighborsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lat, @long, neighbors);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UDFNearestNeighborsForTbl", IsComposable=true)]
		public IQueryable<UDFNearestNeighborsForTblResult> UDFNearestNeighborsForTbl([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Real")] System.Nullable<float> lat, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="long", DbType="Real")] System.Nullable<float> @long, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> neighbors, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TblID", DbType="Int")] System.Nullable<int> tblID)
		{
			return this.CreateMethodCallQuery<UDFNearestNeighborsForTblResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lat, @long, neighbors, tblID);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AddressFields")]
	public partial class AddressField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AddressFieldID;
		
		private int _FieldID;
		
		private string _AddressString;
		
		private System.Nullable<decimal> _Latitude;
		
		private System.Nullable<decimal> _Longitude;
		
		private System.Nullable<System.DateTime> _LastGeocode;
		
		private byte _Status;
		
		private EntityRef<Field> _Field;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressFieldIDChanging(int value);
    partial void OnAddressFieldIDChanged();
    partial void OnFieldIDChanging(int value);
    partial void OnFieldIDChanged();
    partial void OnAddressStringChanging(string value);
    partial void OnAddressStringChanged();
    partial void OnLatitudeChanging(System.Nullable<decimal> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<decimal> value);
    partial void OnLongitudeChanged();
    partial void OnLastGeocodeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastGeocodeChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public AddressField()
		{
			this._Field = default(EntityRef<Field>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressFieldID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AddressFieldID
		{
			get
			{
				return this._AddressFieldID;
			}
			set
			{
				if ((this._AddressFieldID != value))
				{
					this.OnAddressFieldIDChanging(value);
					this.SendPropertyChanging();
					this._AddressFieldID = value;
					this.SendPropertyChanged("AddressFieldID");
					this.OnAddressFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldID", DbType="Int NOT NULL")]
		public int FieldID
		{
			get
			{
				return this._FieldID;
			}
			set
			{
				if ((this._FieldID != value))
				{
					if (this._Field.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFieldIDChanging(value);
					this.SendPropertyChanging();
					this._FieldID = value;
					this.SendPropertyChanged("FieldID");
					this.OnFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressString", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string AddressString
		{
			get
			{
				return this._AddressString;
			}
			set
			{
				if ((this._AddressString != value))
				{
					this.OnAddressStringChanging(value);
					this.SendPropertyChanging();
					this._AddressString = value;
					this.SendPropertyChanged("AddressString");
					this.OnAddressStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(18,8)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(18,8)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastGeocode", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastGeocode
		{
			get
			{
				return this._LastGeocode;
			}
			set
			{
				if ((this._LastGeocode != value))
				{
					this.OnLastGeocodeChanging(value);
					this.SendPropertyChanging();
					this._LastGeocode = value;
					this.SendPropertyChanged("LastGeocode");
					this.OnLastGeocodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Field_AddressField", Storage="_Field", ThisKey="FieldID", OtherKey="FieldID", IsForeignKey=true)]
		public Field Field
		{
			get
			{
				return this._Field.Entity;
			}
			set
			{
				Field previousValue = this._Field.Entity;
				if (((previousValue != value) 
							|| (this._Field.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Field.Entity = null;
						previousValue.AddressFields.Remove(this);
					}
					this._Field.Entity = value;
					if ((value != null))
					{
						value.AddressFields.Add(this);
						this._FieldID = value.FieldID;
					}
					else
					{
						this._FieldID = default(int);
					}
					this.SendPropertyChanged("Field");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
	public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<aspnet_Membership> _aspnet_Memberships;
		
		private EntitySet<aspnet_Path> _aspnet_Paths;
		
		private EntitySet<aspnet_Role> _aspnet_Roles;
		
		private EntitySet<aspnet_User> _aspnet_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Application()
		{
			this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
			this._aspnet_Paths = new EntitySet<aspnet_Path>(new Action<aspnet_Path>(this.attach_aspnet_Paths), new Action<aspnet_Path>(this.detach_aspnet_Paths));
			this._aspnet_Roles = new EntitySet<aspnet_Role>(new Action<aspnet_Role>(this.attach_aspnet_Roles), new Action<aspnet_Role>(this.detach_aspnet_Roles));
			this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this._aspnet_Memberships;
			}
			set
			{
				this._aspnet_Memberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Paths", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this._aspnet_Paths;
			}
			set
			{
				this._aspnet_Paths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this._aspnet_Roles;
			}
			set
			{
				this._aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_User> aspnet_Users
		{
			get
			{
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Memberships.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Paths")]
	public partial class aspnet_Path : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _PathId;
		
		private string _Path;
		
		private string _LoweredPath;
		
		private EntityRef<aspnet_PersonalizationAllUser> _aspnet_PersonalizationAllUser;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnLoweredPathChanging(string value);
    partial void OnLoweredPathChanged();
    #endregion
		
		public aspnet_Path()
		{
			this._aspnet_PersonalizationAllUser = default(EntityRef<aspnet_PersonalizationAllUser>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredPath
		{
			get
			{
				return this._LoweredPath;
			}
			set
			{
				if ((this._LoweredPath != value))
				{
					this.OnLoweredPathChanging(value);
					this.SendPropertyChanging();
					this._LoweredPath = value;
					this.SendPropertyChanged("LoweredPath");
					this.OnLoweredPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_PersonalizationAllUser", ThisKey="PathId", OtherKey="PathId", IsUnique=true, IsForeignKey=false)]
		public aspnet_PersonalizationAllUser aspnet_PersonalizationAllUser
		{
			get
			{
				return this._aspnet_PersonalizationAllUser.Entity;
			}
			set
			{
				aspnet_PersonalizationAllUser previousValue = this._aspnet_PersonalizationAllUser.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_PersonalizationAllUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_PersonalizationAllUser.Entity = null;
						previousValue.aspnet_Path = null;
					}
					this._aspnet_PersonalizationAllUser.Entity = value;
					if ((value != null))
					{
						value.aspnet_Path = this;
					}
					this.SendPropertyChanged("aspnet_PersonalizationAllUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="PathId", OtherKey="PathId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Paths.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Paths.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationAllUsers")]
	public partial class aspnet_PersonalizationAllUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PathId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationAllUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationAllUser = null;
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationAllUser = this;
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationPerUser")]
	public partial class aspnet_PersonalizationPerUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _PathId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPathIdChanging(System.Nullable<System.Guid> value);
    partial void OnPathIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationPerUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
	public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_Profile()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyValuesString
		{
			get
			{
				return this._PropertyValuesString;
			}
			set
			{
				if ((this._PropertyValuesString != value))
				{
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValuesBinary
		{
			get
			{
				return this._PropertyValuesBinary;
			}
			set
			{
				if ((this._PropertyValuesBinary != value))
				{
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Profile = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Roles.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_SchemaVersions")]
	public partial class aspnet_SchemaVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Feature;
		
		private string _CompatibleSchemaVersion;
		
		private bool _IsCurrentVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
		
		public aspnet_SchemaVersion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Feature
		{
			get
			{
				return this._Feature;
			}
			set
			{
				if ((this._Feature != value))
				{
					this.OnFeatureChanging(value);
					this.SendPropertyChanging();
					this._Feature = value;
					this.SendPropertyChanged("Feature");
					this.OnFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompatibleSchemaVersion
		{
			get
			{
				return this._CompatibleSchemaVersion;
			}
			set
			{
				if ((this._CompatibleSchemaVersion != value))
				{
					this.OnCompatibleSchemaVersionChanging(value);
					this.SendPropertyChanging();
					this._CompatibleSchemaVersion = value;
					this.SendPropertyChanged("CompatibleSchemaVersion");
					this.OnCompatibleSchemaVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
		public bool IsCurrentVersion
		{
			get
			{
				return this._IsCurrentVersion;
			}
			set
			{
				if ((this._IsCurrentVersion != value))
				{
					this.OnIsCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._IsCurrentVersion = value;
					this.SendPropertyChanged("IsCurrentVersion");
					this.OnIsCurrentVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Profile> _aspnet_Profile;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Profile aspnet_Profile
		{
			get
			{
				return this._aspnet_Profile.Entity;
			}
			set
			{
				aspnet_Profile previousValue = this._aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Profile.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Profile.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_WebEvent_Events")]
	public partial class aspnet_WebEvent_Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventId;
		
		private System.DateTime _EventTimeUtc;
		
		private System.DateTime _EventTime;
		
		private string _EventType;
		
		private decimal _EventSequence;
		
		private decimal _EventOccurrence;
		
		private int _EventCode;
		
		private int _EventDetailCode;
		
		private string _Message;
		
		private string _ApplicationPath;
		
		private string _ApplicationVirtualPath;
		
		private string _MachineName;
		
		private string _RequestUrl;
		
		private string _ExceptionType;
		
		private string _Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public aspnet_WebEvent_Event()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
		public System.DateTime EventTimeUtc
		{
			get
			{
				return this._EventTimeUtc;
			}
			set
			{
				if ((this._EventTimeUtc != value))
				{
					this.OnEventTimeUtcChanging(value);
					this.SendPropertyChanging();
					this._EventTimeUtc = value;
					this.SendPropertyChanged("EventTimeUtc");
					this.OnEventTimeUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime NOT NULL")]
		public System.DateTime EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventSequence
		{
			get
			{
				return this._EventSequence;
			}
			set
			{
				if ((this._EventSequence != value))
				{
					this.OnEventSequenceChanging(value);
					this.SendPropertyChanging();
					this._EventSequence = value;
					this.SendPropertyChanged("EventSequence");
					this.OnEventSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventOccurrence
		{
			get
			{
				return this._EventOccurrence;
			}
			set
			{
				if ((this._EventOccurrence != value))
				{
					this.OnEventOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._EventOccurrence = value;
					this.SendPropertyChanged("EventOccurrence");
					this.OnEventOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="Int NOT NULL")]
		public int EventCode
		{
			get
			{
				return this._EventCode;
			}
			set
			{
				if ((this._EventCode != value))
				{
					this.OnEventCodeChanging(value);
					this.SendPropertyChanging();
					this._EventCode = value;
					this.SendPropertyChanged("EventCode");
					this.OnEventCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetailCode", DbType="Int NOT NULL")]
		public int EventDetailCode
		{
			get
			{
				return this._EventDetailCode;
			}
			set
			{
				if ((this._EventDetailCode != value))
				{
					this.OnEventDetailCodeChanging(value);
					this.SendPropertyChanging();
					this._EventDetailCode = value;
					this.SendPropertyChanged("EventDetailCode");
					this.OnEventDetailCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(1024)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationPath", DbType="NVarChar(256)")]
		public string ApplicationPath
		{
			get
			{
				return this._ApplicationPath;
			}
			set
			{
				if ((this._ApplicationPath != value))
				{
					this.OnApplicationPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationPath = value;
					this.SendPropertyChanged("ApplicationPath");
					this.OnApplicationPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
		public string ApplicationVirtualPath
		{
			get
			{
				return this._ApplicationVirtualPath;
			}
			set
			{
				if ((this._ApplicationVirtualPath != value))
				{
					this.OnApplicationVirtualPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationVirtualPath = value;
					this.SendPropertyChanged("ApplicationVirtualPath");
					this.OnApplicationVirtualPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(1024)")]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionType", DbType="NVarChar(256)")]
		public string ExceptionType
		{
			get
			{
				return this._ExceptionType;
			}
			set
			{
				if ((this._ExceptionType != value))
				{
					this.OnExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionType = value;
					this.SendPropertyChanged("ExceptionType");
					this.OnExceptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChangesGroup")]
	public partial class ChangesGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChangesGroupID;
		
		private System.Nullable<int> _PointsManagerID;
		
		private System.Nullable<int> _TblID;
		
		private System.Nullable<int> _Creator;
		
		private System.Nullable<int> _MakeChangeRatingID;
		
		private System.Nullable<int> _RewardRatingID;
		
		private byte _StatusOfChanges;
		
		private System.Nullable<System.DateTime> _ScheduleApprovalOrRejection;
		
		private System.Nullable<System.DateTime> _ScheduleImplementation;
		
		private EntitySet<ChangesStatusOfObject> _ChangesStatusOfObjects;
		
		private EntityRef<User> _User;
		
		private EntityRef<PointsManager> _PointsManager;
		
		private EntityRef<Rating> _Rating;
		
		private EntityRef<Tbl> _Tbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChangesGroupIDChanging(int value);
    partial void OnChangesGroupIDChanged();
    partial void OnPointsManagerIDChanging(System.Nullable<int> value);
    partial void OnPointsManagerIDChanged();
    partial void OnTblIDChanging(System.Nullable<int> value);
    partial void OnTblIDChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnMakeChangeRatingIDChanging(System.Nullable<int> value);
    partial void OnMakeChangeRatingIDChanged();
    partial void OnRewardRatingIDChanging(System.Nullable<int> value);
    partial void OnRewardRatingIDChanged();
    partial void OnStatusOfChangesChanging(byte value);
    partial void OnStatusOfChangesChanged();
    partial void OnScheduleApprovalOrRejectionChanging(System.Nullable<System.DateTime> value);
    partial void OnScheduleApprovalOrRejectionChanged();
    partial void OnScheduleImplementationChanging(System.Nullable<System.DateTime> value);
    partial void OnScheduleImplementationChanged();
    #endregion
		
		public ChangesGroup()
		{
			this._ChangesStatusOfObjects = new EntitySet<ChangesStatusOfObject>(new Action<ChangesStatusOfObject>(this.attach_ChangesStatusOfObjects), new Action<ChangesStatusOfObject>(this.detach_ChangesStatusOfObjects));
			this._User = default(EntityRef<User>);
			this._PointsManager = default(EntityRef<PointsManager>);
			this._Rating = default(EntityRef<Rating>);
			this._Tbl = default(EntityRef<Tbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangesGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChangesGroupID
		{
			get
			{
				return this._ChangesGroupID;
			}
			set
			{
				if ((this._ChangesGroupID != value))
				{
					this.OnChangesGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ChangesGroupID = value;
					this.SendPropertyChanged("ChangesGroupID");
					this.OnChangesGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsManagerID", DbType="Int")]
		public System.Nullable<int> PointsManagerID
		{
			get
			{
				return this._PointsManagerID;
			}
			set
			{
				if ((this._PointsManagerID != value))
				{
					if (this._PointsManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPointsManagerIDChanging(value);
					this.SendPropertyChanging();
					this._PointsManagerID = value;
					this.SendPropertyChanged("PointsManagerID");
					this.OnPointsManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblID", DbType="Int")]
		public System.Nullable<int> TblID
		{
			get
			{
				return this._TblID;
			}
			set
			{
				if ((this._TblID != value))
				{
					if (this._Tbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblIDChanging(value);
					this.SendPropertyChanging();
					this._TblID = value;
					this.SendPropertyChanged("TblID");
					this.OnTblIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakeChangeRatingID", DbType="Int")]
		public System.Nullable<int> MakeChangeRatingID
		{
			get
			{
				return this._MakeChangeRatingID;
			}
			set
			{
				if ((this._MakeChangeRatingID != value))
				{
					this.OnMakeChangeRatingIDChanging(value);
					this.SendPropertyChanging();
					this._MakeChangeRatingID = value;
					this.SendPropertyChanged("MakeChangeRatingID");
					this.OnMakeChangeRatingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RewardRatingID", DbType="Int")]
		public System.Nullable<int> RewardRatingID
		{
			get
			{
				return this._RewardRatingID;
			}
			set
			{
				if ((this._RewardRatingID != value))
				{
					if (this._Rating.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRewardRatingIDChanging(value);
					this.SendPropertyChanging();
					this._RewardRatingID = value;
					this.SendPropertyChanged("RewardRatingID");
					this.OnRewardRatingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusOfChanges", DbType="TinyInt NOT NULL")]
		public byte StatusOfChanges
		{
			get
			{
				return this._StatusOfChanges;
			}
			set
			{
				if ((this._StatusOfChanges != value))
				{
					this.OnStatusOfChangesChanging(value);
					this.SendPropertyChanging();
					this._StatusOfChanges = value;
					this.SendPropertyChanged("StatusOfChanges");
					this.OnStatusOfChangesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleApprovalOrRejection", DbType="DateTime")]
		public System.Nullable<System.DateTime> ScheduleApprovalOrRejection
		{
			get
			{
				return this._ScheduleApprovalOrRejection;
			}
			set
			{
				if ((this._ScheduleApprovalOrRejection != value))
				{
					this.OnScheduleApprovalOrRejectionChanging(value);
					this.SendPropertyChanging();
					this._ScheduleApprovalOrRejection = value;
					this.SendPropertyChanged("ScheduleApprovalOrRejection");
					this.OnScheduleApprovalOrRejectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleImplementation", DbType="DateTime")]
		public System.Nullable<System.DateTime> ScheduleImplementation
		{
			get
			{
				return this._ScheduleImplementation;
			}
			set
			{
				if ((this._ScheduleImplementation != value))
				{
					this.OnScheduleImplementationChanging(value);
					this.SendPropertyChanging();
					this._ScheduleImplementation = value;
					this.SendPropertyChanged("ScheduleImplementation");
					this.OnScheduleImplementationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChangesGroup_ChangesStatusOfObject", Storage="_ChangesStatusOfObjects", ThisKey="ChangesGroupID", OtherKey="ChangesGroupID")]
		public EntitySet<ChangesStatusOfObject> ChangesStatusOfObjects
		{
			get
			{
				return this._ChangesStatusOfObjects;
			}
			set
			{
				this._ChangesStatusOfObjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ChangesGroup", Storage="_User", ThisKey="Creator", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ChangesGroups.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ChangesGroups.Add(this);
						this._Creator = value.UserID;
					}
					else
					{
						this._Creator = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_ChangesGroup", Storage="_PointsManager", ThisKey="PointsManagerID", OtherKey="PointsManagerID", IsForeignKey=true)]
		public PointsManager PointsManager
		{
			get
			{
				return this._PointsManager.Entity;
			}
			set
			{
				PointsManager previousValue = this._PointsManager.Entity;
				if (((previousValue != value) 
							|| (this._PointsManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PointsManager.Entity = null;
						previousValue.ChangesGroups.Remove(this);
					}
					this._PointsManager.Entity = value;
					if ((value != null))
					{
						value.ChangesGroups.Add(this);
						this._PointsManagerID = value.PointsManagerID;
					}
					else
					{
						this._PointsManagerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PointsManager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rating_ChangesGroup", Storage="_Rating", ThisKey="RewardRatingID", OtherKey="RatingID", IsForeignKey=true)]
		public Rating Rating
		{
			get
			{
				return this._Rating.Entity;
			}
			set
			{
				Rating previousValue = this._Rating.Entity;
				if (((previousValue != value) 
							|| (this._Rating.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rating.Entity = null;
						previousValue.ChangesGroups.Remove(this);
					}
					this._Rating.Entity = value;
					if ((value != null))
					{
						value.ChangesGroups.Add(this);
						this._RewardRatingID = value.RatingID;
					}
					else
					{
						this._RewardRatingID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rating");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_ChangesGroup", Storage="_Tbl", ThisKey="TblID", OtherKey="TblID", IsForeignKey=true)]
		public Tbl Tbl
		{
			get
			{
				return this._Tbl.Entity;
			}
			set
			{
				Tbl previousValue = this._Tbl.Entity;
				if (((previousValue != value) 
							|| (this._Tbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl.Entity = null;
						previousValue.ChangesGroups.Remove(this);
					}
					this._Tbl.Entity = value;
					if ((value != null))
					{
						value.ChangesGroups.Add(this);
						this._TblID = value.TblID;
					}
					else
					{
						this._TblID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChangesStatusOfObjects(ChangesStatusOfObject entity)
		{
			this.SendPropertyChanging();
			entity.ChangesGroup = this;
		}
		
		private void detach_ChangesStatusOfObjects(ChangesStatusOfObject entity)
		{
			this.SendPropertyChanging();
			entity.ChangesGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChangesStatusOfObject")]
	public partial class ChangesStatusOfObject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChangesStatusOfObjectID;
		
		private int _ChangesGroupID;
		
		private byte _ObjectType;
		
		private bool _AddObject;
		
		private bool _DeleteObject;
		
		private bool _ReplaceObject;
		
		private bool _ChangeName;
		
		private bool _ChangeOther;
		
		private bool _ChangeSetting1;
		
		private bool _ChangeSetting2;
		
		private bool _MayAffectRunningRating;
		
		private string _NewName;
		
		private System.Nullable<int> _NewObject;
		
		private System.Nullable<int> _ExistingObject;
		
		private System.Nullable<bool> _NewValueBoolean;
		
		private System.Nullable<int> _NewValueInteger;
		
		private System.Nullable<decimal> _NewValueDecimal;
		
		private string _NewValueText;
		
		private System.Nullable<System.DateTime> _NewValueDateTime;
		
		private string _ChangeDescription;
		
		private EntityRef<ChangesGroup> _ChangesGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChangesStatusOfObjectIDChanging(int value);
    partial void OnChangesStatusOfObjectIDChanged();
    partial void OnChangesGroupIDChanging(int value);
    partial void OnChangesGroupIDChanged();
    partial void OnObjectTypeChanging(byte value);
    partial void OnObjectTypeChanged();
    partial void OnAddObjectChanging(bool value);
    partial void OnAddObjectChanged();
    partial void OnDeleteObjectChanging(bool value);
    partial void OnDeleteObjectChanged();
    partial void OnReplaceObjectChanging(bool value);
    partial void OnReplaceObjectChanged();
    partial void OnChangeNameChanging(bool value);
    partial void OnChangeNameChanged();
    partial void OnChangeOtherChanging(bool value);
    partial void OnChangeOtherChanged();
    partial void OnChangeSetting1Changing(bool value);
    partial void OnChangeSetting1Changed();
    partial void OnChangeSetting2Changing(bool value);
    partial void OnChangeSetting2Changed();
    partial void OnMayAffectRunningRatingChanging(bool value);
    partial void OnMayAffectRunningRatingChanged();
    partial void OnNewNameChanging(string value);
    partial void OnNewNameChanged();
    partial void OnNewObjectChanging(System.Nullable<int> value);
    partial void OnNewObjectChanged();
    partial void OnExistingObjectChanging(System.Nullable<int> value);
    partial void OnExistingObjectChanged();
    partial void OnNewValueBooleanChanging(System.Nullable<bool> value);
    partial void OnNewValueBooleanChanged();
    partial void OnNewValueIntegerChanging(System.Nullable<int> value);
    partial void OnNewValueIntegerChanged();
    partial void OnNewValueDecimalChanging(System.Nullable<decimal> value);
    partial void OnNewValueDecimalChanged();
    partial void OnNewValueTextChanging(string value);
    partial void OnNewValueTextChanged();
    partial void OnNewValueDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnNewValueDateTimeChanged();
    partial void OnChangeDescriptionChanging(string value);
    partial void OnChangeDescriptionChanged();
    #endregion
		
		public ChangesStatusOfObject()
		{
			this._ChangesGroup = default(EntityRef<ChangesGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangesStatusOfObjectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChangesStatusOfObjectID
		{
			get
			{
				return this._ChangesStatusOfObjectID;
			}
			set
			{
				if ((this._ChangesStatusOfObjectID != value))
				{
					this.OnChangesStatusOfObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ChangesStatusOfObjectID = value;
					this.SendPropertyChanged("ChangesStatusOfObjectID");
					this.OnChangesStatusOfObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangesGroupID", DbType="Int NOT NULL")]
		public int ChangesGroupID
		{
			get
			{
				return this._ChangesGroupID;
			}
			set
			{
				if ((this._ChangesGroupID != value))
				{
					if (this._ChangesGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChangesGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ChangesGroupID = value;
					this.SendPropertyChanged("ChangesGroupID");
					this.OnChangesGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="TinyInt NOT NULL")]
		public byte ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this.OnObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ObjectType = value;
					this.SendPropertyChanged("ObjectType");
					this.OnObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddObject", DbType="Bit NOT NULL")]
		public bool AddObject
		{
			get
			{
				return this._AddObject;
			}
			set
			{
				if ((this._AddObject != value))
				{
					this.OnAddObjectChanging(value);
					this.SendPropertyChanging();
					this._AddObject = value;
					this.SendPropertyChanged("AddObject");
					this.OnAddObjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteObject", DbType="Bit NOT NULL")]
		public bool DeleteObject
		{
			get
			{
				return this._DeleteObject;
			}
			set
			{
				if ((this._DeleteObject != value))
				{
					this.OnDeleteObjectChanging(value);
					this.SendPropertyChanging();
					this._DeleteObject = value;
					this.SendPropertyChanged("DeleteObject");
					this.OnDeleteObjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplaceObject", DbType="Bit NOT NULL")]
		public bool ReplaceObject
		{
			get
			{
				return this._ReplaceObject;
			}
			set
			{
				if ((this._ReplaceObject != value))
				{
					this.OnReplaceObjectChanging(value);
					this.SendPropertyChanging();
					this._ReplaceObject = value;
					this.SendPropertyChanged("ReplaceObject");
					this.OnReplaceObjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeName", DbType="Bit NOT NULL")]
		public bool ChangeName
		{
			get
			{
				return this._ChangeName;
			}
			set
			{
				if ((this._ChangeName != value))
				{
					this.OnChangeNameChanging(value);
					this.SendPropertyChanging();
					this._ChangeName = value;
					this.SendPropertyChanged("ChangeName");
					this.OnChangeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeOther", DbType="Bit NOT NULL")]
		public bool ChangeOther
		{
			get
			{
				return this._ChangeOther;
			}
			set
			{
				if ((this._ChangeOther != value))
				{
					this.OnChangeOtherChanging(value);
					this.SendPropertyChanging();
					this._ChangeOther = value;
					this.SendPropertyChanged("ChangeOther");
					this.OnChangeOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeSetting1", DbType="Bit NOT NULL")]
		public bool ChangeSetting1
		{
			get
			{
				return this._ChangeSetting1;
			}
			set
			{
				if ((this._ChangeSetting1 != value))
				{
					this.OnChangeSetting1Changing(value);
					this.SendPropertyChanging();
					this._ChangeSetting1 = value;
					this.SendPropertyChanged("ChangeSetting1");
					this.OnChangeSetting1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeSetting2", DbType="Bit NOT NULL")]
		public bool ChangeSetting2
		{
			get
			{
				return this._ChangeSetting2;
			}
			set
			{
				if ((this._ChangeSetting2 != value))
				{
					this.OnChangeSetting2Changing(value);
					this.SendPropertyChanging();
					this._ChangeSetting2 = value;
					this.SendPropertyChanged("ChangeSetting2");
					this.OnChangeSetting2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayAffectRunningRating", DbType="Bit NOT NULL")]
		public bool MayAffectRunningRating
		{
			get
			{
				return this._MayAffectRunningRating;
			}
			set
			{
				if ((this._MayAffectRunningRating != value))
				{
					this.OnMayAffectRunningRatingChanging(value);
					this.SendPropertyChanging();
					this._MayAffectRunningRating = value;
					this.SendPropertyChanged("MayAffectRunningRating");
					this.OnMayAffectRunningRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NewName
		{
			get
			{
				return this._NewName;
			}
			set
			{
				if ((this._NewName != value))
				{
					this.OnNewNameChanging(value);
					this.SendPropertyChanging();
					this._NewName = value;
					this.SendPropertyChanged("NewName");
					this.OnNewNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewObject", DbType="Int")]
		public System.Nullable<int> NewObject
		{
			get
			{
				return this._NewObject;
			}
			set
			{
				if ((this._NewObject != value))
				{
					this.OnNewObjectChanging(value);
					this.SendPropertyChanging();
					this._NewObject = value;
					this.SendPropertyChanged("NewObject");
					this.OnNewObjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExistingObject", DbType="Int")]
		public System.Nullable<int> ExistingObject
		{
			get
			{
				return this._ExistingObject;
			}
			set
			{
				if ((this._ExistingObject != value))
				{
					this.OnExistingObjectChanging(value);
					this.SendPropertyChanging();
					this._ExistingObject = value;
					this.SendPropertyChanged("ExistingObject");
					this.OnExistingObjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValueBoolean", DbType="Bit")]
		public System.Nullable<bool> NewValueBoolean
		{
			get
			{
				return this._NewValueBoolean;
			}
			set
			{
				if ((this._NewValueBoolean != value))
				{
					this.OnNewValueBooleanChanging(value);
					this.SendPropertyChanging();
					this._NewValueBoolean = value;
					this.SendPropertyChanged("NewValueBoolean");
					this.OnNewValueBooleanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValueInteger", DbType="Int")]
		public System.Nullable<int> NewValueInteger
		{
			get
			{
				return this._NewValueInteger;
			}
			set
			{
				if ((this._NewValueInteger != value))
				{
					this.OnNewValueIntegerChanging(value);
					this.SendPropertyChanging();
					this._NewValueInteger = value;
					this.SendPropertyChanged("NewValueInteger");
					this.OnNewValueIntegerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValueDecimal", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> NewValueDecimal
		{
			get
			{
				return this._NewValueDecimal;
			}
			set
			{
				if ((this._NewValueDecimal != value))
				{
					this.OnNewValueDecimalChanging(value);
					this.SendPropertyChanging();
					this._NewValueDecimal = value;
					this.SendPropertyChanged("NewValueDecimal");
					this.OnNewValueDecimalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValueText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NewValueText
		{
			get
			{
				return this._NewValueText;
			}
			set
			{
				if ((this._NewValueText != value))
				{
					this.OnNewValueTextChanging(value);
					this.SendPropertyChanging();
					this._NewValueText = value;
					this.SendPropertyChanged("NewValueText");
					this.OnNewValueTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValueDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> NewValueDateTime
		{
			get
			{
				return this._NewValueDateTime;
			}
			set
			{
				if ((this._NewValueDateTime != value))
				{
					this.OnNewValueDateTimeChanging(value);
					this.SendPropertyChanging();
					this._NewValueDateTime = value;
					this.SendPropertyChanged("NewValueDateTime");
					this.OnNewValueDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ChangeDescription
		{
			get
			{
				return this._ChangeDescription;
			}
			set
			{
				if ((this._ChangeDescription != value))
				{
					this.OnChangeDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ChangeDescription = value;
					this.SendPropertyChanged("ChangeDescription");
					this.OnChangeDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChangesGroup_ChangesStatusOfObject", Storage="_ChangesGroup", ThisKey="ChangesGroupID", OtherKey="ChangesGroupID", IsForeignKey=true)]
		public ChangesGroup ChangesGroup
		{
			get
			{
				return this._ChangesGroup.Entity;
			}
			set
			{
				ChangesGroup previousValue = this._ChangesGroup.Entity;
				if (((previousValue != value) 
							|| (this._ChangesGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChangesGroup.Entity = null;
						previousValue.ChangesStatusOfObjects.Remove(this);
					}
					this._ChangesGroup.Entity = value;
					if ((value != null))
					{
						value.ChangesStatusOfObjects.Add(this);
						this._ChangesGroupID = value.ChangesGroupID;
					}
					else
					{
						this._ChangesGroupID = default(int);
					}
					this.SendPropertyChanged("ChangesGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChoiceFields")]
	public partial class ChoiceField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChoiceFieldID;
		
		private int _FieldID;
		
		private byte _Status;
		
		private EntitySet<ChoiceInField> _ChoiceInFields;
		
		private EntityRef<Field> _Field;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChoiceFieldIDChanging(int value);
    partial void OnChoiceFieldIDChanged();
    partial void OnFieldIDChanging(int value);
    partial void OnFieldIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public ChoiceField()
		{
			this._ChoiceInFields = new EntitySet<ChoiceInField>(new Action<ChoiceInField>(this.attach_ChoiceInFields), new Action<ChoiceInField>(this.detach_ChoiceInFields));
			this._Field = default(EntityRef<Field>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceFieldID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChoiceFieldID
		{
			get
			{
				return this._ChoiceFieldID;
			}
			set
			{
				if ((this._ChoiceFieldID != value))
				{
					this.OnChoiceFieldIDChanging(value);
					this.SendPropertyChanging();
					this._ChoiceFieldID = value;
					this.SendPropertyChanged("ChoiceFieldID");
					this.OnChoiceFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldID", DbType="Int NOT NULL")]
		public int FieldID
		{
			get
			{
				return this._FieldID;
			}
			set
			{
				if ((this._FieldID != value))
				{
					if (this._Field.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFieldIDChanging(value);
					this.SendPropertyChanging();
					this._FieldID = value;
					this.SendPropertyChanged("FieldID");
					this.OnFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChoiceField_ChoiceInField", Storage="_ChoiceInFields", ThisKey="ChoiceFieldID", OtherKey="ChoiceFieldID")]
		public EntitySet<ChoiceInField> ChoiceInFields
		{
			get
			{
				return this._ChoiceInFields;
			}
			set
			{
				this._ChoiceInFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Field_ChoiceField", Storage="_Field", ThisKey="FieldID", OtherKey="FieldID", IsForeignKey=true)]
		public Field Field
		{
			get
			{
				return this._Field.Entity;
			}
			set
			{
				Field previousValue = this._Field.Entity;
				if (((previousValue != value) 
							|| (this._Field.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Field.Entity = null;
						previousValue.ChoiceFields.Remove(this);
					}
					this._Field.Entity = value;
					if ((value != null))
					{
						value.ChoiceFields.Add(this);
						this._FieldID = value.FieldID;
					}
					else
					{
						this._FieldID = default(int);
					}
					this.SendPropertyChanged("Field");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChoiceInFields(ChoiceInField entity)
		{
			this.SendPropertyChanging();
			entity.ChoiceField = this;
		}
		
		private void detach_ChoiceInFields(ChoiceInField entity)
		{
			this.SendPropertyChanging();
			entity.ChoiceField = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChoiceGroups")]
	public partial class ChoiceGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChoiceGroupID;
		
		private int _PointsManagerID;
		
		private bool _AllowMultipleSelections;
		
		private bool _Alphabetize;
		
		private bool _InvisibleWhenEmpty;
		
		private bool _ShowTagCloud;
		
		private bool _PickViaAutoComplete;
		
		private System.Nullable<int> _DependentOnChoiceGroupID;
		
		private bool _ShowAllPossibilitiesIfNoDependentChoice;
		
		private bool _AlphabetizeWhenShowingAllPossibilities;
		
		private bool _AllowAutoAddWhenAddingFields;
		
		private string _Name;
		
		private System.Nullable<int> _Creator;
		
		private byte _Status;
		
		private EntitySet<ChoiceGroup> _ChoiceGroups;
		
		private EntitySet<ChoiceInGroup> _ChoiceInGroups;
		
		private EntitySet<ChoiceGroupFieldDefinition> _ChoiceGroupFieldDefinitions;
		
		private EntityRef<ChoiceGroup> _ChoiceGroup1;
		
		private EntityRef<User> _User;
		
		private EntityRef<PointsManager> _PointsManager;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChoiceGroupIDChanging(int value);
    partial void OnChoiceGroupIDChanged();
    partial void OnPointsManagerIDChanging(int value);
    partial void OnPointsManagerIDChanged();
    partial void OnAllowMultipleSelectionsChanging(bool value);
    partial void OnAllowMultipleSelectionsChanged();
    partial void OnAlphabetizeChanging(bool value);
    partial void OnAlphabetizeChanged();
    partial void OnInvisibleWhenEmptyChanging(bool value);
    partial void OnInvisibleWhenEmptyChanged();
    partial void OnShowTagCloudChanging(bool value);
    partial void OnShowTagCloudChanged();
    partial void OnPickViaAutoCompleteChanging(bool value);
    partial void OnPickViaAutoCompleteChanged();
    partial void OnDependentOnChoiceGroupIDChanging(System.Nullable<int> value);
    partial void OnDependentOnChoiceGroupIDChanged();
    partial void OnShowAllPossibilitiesIfNoDependentChoiceChanging(bool value);
    partial void OnShowAllPossibilitiesIfNoDependentChoiceChanged();
    partial void OnAlphabetizeWhenShowingAllPossibilitiesChanging(bool value);
    partial void OnAlphabetizeWhenShowingAllPossibilitiesChanged();
    partial void OnAllowAutoAddWhenAddingFieldsChanging(bool value);
    partial void OnAllowAutoAddWhenAddingFieldsChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public ChoiceGroup()
		{
			this._ChoiceGroups = new EntitySet<ChoiceGroup>(new Action<ChoiceGroup>(this.attach_ChoiceGroups), new Action<ChoiceGroup>(this.detach_ChoiceGroups));
			this._ChoiceInGroups = new EntitySet<ChoiceInGroup>(new Action<ChoiceInGroup>(this.attach_ChoiceInGroups), new Action<ChoiceInGroup>(this.detach_ChoiceInGroups));
			this._ChoiceGroupFieldDefinitions = new EntitySet<ChoiceGroupFieldDefinition>(new Action<ChoiceGroupFieldDefinition>(this.attach_ChoiceGroupFieldDefinitions), new Action<ChoiceGroupFieldDefinition>(this.detach_ChoiceGroupFieldDefinitions));
			this._ChoiceGroup1 = default(EntityRef<ChoiceGroup>);
			this._User = default(EntityRef<User>);
			this._PointsManager = default(EntityRef<PointsManager>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChoiceGroupID
		{
			get
			{
				return this._ChoiceGroupID;
			}
			set
			{
				if ((this._ChoiceGroupID != value))
				{
					this.OnChoiceGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ChoiceGroupID = value;
					this.SendPropertyChanged("ChoiceGroupID");
					this.OnChoiceGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsManagerID", DbType="Int NOT NULL")]
		public int PointsManagerID
		{
			get
			{
				return this._PointsManagerID;
			}
			set
			{
				if ((this._PointsManagerID != value))
				{
					if (this._PointsManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPointsManagerIDChanging(value);
					this.SendPropertyChanging();
					this._PointsManagerID = value;
					this.SendPropertyChanged("PointsManagerID");
					this.OnPointsManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowMultipleSelections", DbType="Bit NOT NULL")]
		public bool AllowMultipleSelections
		{
			get
			{
				return this._AllowMultipleSelections;
			}
			set
			{
				if ((this._AllowMultipleSelections != value))
				{
					this.OnAllowMultipleSelectionsChanging(value);
					this.SendPropertyChanging();
					this._AllowMultipleSelections = value;
					this.SendPropertyChanged("AllowMultipleSelections");
					this.OnAllowMultipleSelectionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alphabetize", DbType="Bit NOT NULL")]
		public bool Alphabetize
		{
			get
			{
				return this._Alphabetize;
			}
			set
			{
				if ((this._Alphabetize != value))
				{
					this.OnAlphabetizeChanging(value);
					this.SendPropertyChanging();
					this._Alphabetize = value;
					this.SendPropertyChanged("Alphabetize");
					this.OnAlphabetizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvisibleWhenEmpty", DbType="Bit NOT NULL")]
		public bool InvisibleWhenEmpty
		{
			get
			{
				return this._InvisibleWhenEmpty;
			}
			set
			{
				if ((this._InvisibleWhenEmpty != value))
				{
					this.OnInvisibleWhenEmptyChanging(value);
					this.SendPropertyChanging();
					this._InvisibleWhenEmpty = value;
					this.SendPropertyChanged("InvisibleWhenEmpty");
					this.OnInvisibleWhenEmptyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowTagCloud", DbType="Bit NOT NULL")]
		public bool ShowTagCloud
		{
			get
			{
				return this._ShowTagCloud;
			}
			set
			{
				if ((this._ShowTagCloud != value))
				{
					this.OnShowTagCloudChanging(value);
					this.SendPropertyChanging();
					this._ShowTagCloud = value;
					this.SendPropertyChanged("ShowTagCloud");
					this.OnShowTagCloudChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickViaAutoComplete", DbType="Bit NOT NULL")]
		public bool PickViaAutoComplete
		{
			get
			{
				return this._PickViaAutoComplete;
			}
			set
			{
				if ((this._PickViaAutoComplete != value))
				{
					this.OnPickViaAutoCompleteChanging(value);
					this.SendPropertyChanging();
					this._PickViaAutoComplete = value;
					this.SendPropertyChanged("PickViaAutoComplete");
					this.OnPickViaAutoCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DependentOnChoiceGroupID", DbType="Int")]
		public System.Nullable<int> DependentOnChoiceGroupID
		{
			get
			{
				return this._DependentOnChoiceGroupID;
			}
			set
			{
				if ((this._DependentOnChoiceGroupID != value))
				{
					if (this._ChoiceGroup1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDependentOnChoiceGroupIDChanging(value);
					this.SendPropertyChanging();
					this._DependentOnChoiceGroupID = value;
					this.SendPropertyChanged("DependentOnChoiceGroupID");
					this.OnDependentOnChoiceGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowAllPossibilitiesIfNoDependentChoice", DbType="Bit NOT NULL")]
		public bool ShowAllPossibilitiesIfNoDependentChoice
		{
			get
			{
				return this._ShowAllPossibilitiesIfNoDependentChoice;
			}
			set
			{
				if ((this._ShowAllPossibilitiesIfNoDependentChoice != value))
				{
					this.OnShowAllPossibilitiesIfNoDependentChoiceChanging(value);
					this.SendPropertyChanging();
					this._ShowAllPossibilitiesIfNoDependentChoice = value;
					this.SendPropertyChanged("ShowAllPossibilitiesIfNoDependentChoice");
					this.OnShowAllPossibilitiesIfNoDependentChoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlphabetizeWhenShowingAllPossibilities", DbType="Bit NOT NULL")]
		public bool AlphabetizeWhenShowingAllPossibilities
		{
			get
			{
				return this._AlphabetizeWhenShowingAllPossibilities;
			}
			set
			{
				if ((this._AlphabetizeWhenShowingAllPossibilities != value))
				{
					this.OnAlphabetizeWhenShowingAllPossibilitiesChanging(value);
					this.SendPropertyChanging();
					this._AlphabetizeWhenShowingAllPossibilities = value;
					this.SendPropertyChanged("AlphabetizeWhenShowingAllPossibilities");
					this.OnAlphabetizeWhenShowingAllPossibilitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowAutoAddWhenAddingFields", DbType="Bit NOT NULL")]
		public bool AllowAutoAddWhenAddingFields
		{
			get
			{
				return this._AllowAutoAddWhenAddingFields;
			}
			set
			{
				if ((this._AllowAutoAddWhenAddingFields != value))
				{
					this.OnAllowAutoAddWhenAddingFieldsChanging(value);
					this.SendPropertyChanging();
					this._AllowAutoAddWhenAddingFields = value;
					this.SendPropertyChanged("AllowAutoAddWhenAddingFields");
					this.OnAllowAutoAddWhenAddingFieldsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChoiceGroup_ChoiceGroup", Storage="_ChoiceGroups", ThisKey="ChoiceGroupID", OtherKey="DependentOnChoiceGroupID")]
		public EntitySet<ChoiceGroup> ChoiceGroups
		{
			get
			{
				return this._ChoiceGroups;
			}
			set
			{
				this._ChoiceGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChoiceGroup_ChoiceInGroup", Storage="_ChoiceInGroups", ThisKey="ChoiceGroupID", OtherKey="ChoiceGroupID")]
		public EntitySet<ChoiceInGroup> ChoiceInGroups
		{
			get
			{
				return this._ChoiceInGroups;
			}
			set
			{
				this._ChoiceInGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChoiceGroup_ChoiceGroupFieldDefinition", Storage="_ChoiceGroupFieldDefinitions", ThisKey="ChoiceGroupID", OtherKey="ChoiceGroupID")]
		public EntitySet<ChoiceGroupFieldDefinition> ChoiceGroupFieldDefinitions
		{
			get
			{
				return this._ChoiceGroupFieldDefinitions;
			}
			set
			{
				this._ChoiceGroupFieldDefinitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChoiceGroup_ChoiceGroup", Storage="_ChoiceGroup1", ThisKey="DependentOnChoiceGroupID", OtherKey="ChoiceGroupID", IsForeignKey=true)]
		public ChoiceGroup ChoiceGroup1
		{
			get
			{
				return this._ChoiceGroup1.Entity;
			}
			set
			{
				ChoiceGroup previousValue = this._ChoiceGroup1.Entity;
				if (((previousValue != value) 
							|| (this._ChoiceGroup1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChoiceGroup1.Entity = null;
						previousValue.ChoiceGroups.Remove(this);
					}
					this._ChoiceGroup1.Entity = value;
					if ((value != null))
					{
						value.ChoiceGroups.Add(this);
						this._DependentOnChoiceGroupID = value.ChoiceGroupID;
					}
					else
					{
						this._DependentOnChoiceGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChoiceGroup1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ChoiceGroup", Storage="_User", ThisKey="Creator", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ChoiceGroups.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ChoiceGroups.Add(this);
						this._Creator = value.UserID;
					}
					else
					{
						this._Creator = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_ChoiceGroup", Storage="_PointsManager", ThisKey="PointsManagerID", OtherKey="PointsManagerID", IsForeignKey=true)]
		public PointsManager PointsManager
		{
			get
			{
				return this._PointsManager.Entity;
			}
			set
			{
				PointsManager previousValue = this._PointsManager.Entity;
				if (((previousValue != value) 
							|| (this._PointsManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PointsManager.Entity = null;
						previousValue.ChoiceGroups.Remove(this);
					}
					this._PointsManager.Entity = value;
					if ((value != null))
					{
						value.ChoiceGroups.Add(this);
						this._PointsManagerID = value.PointsManagerID;
					}
					else
					{
						this._PointsManagerID = default(int);
					}
					this.SendPropertyChanged("PointsManager");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChoiceGroups(ChoiceGroup entity)
		{
			this.SendPropertyChanging();
			entity.ChoiceGroup1 = this;
		}
		
		private void detach_ChoiceGroups(ChoiceGroup entity)
		{
			this.SendPropertyChanging();
			entity.ChoiceGroup1 = null;
		}
		
		private void attach_ChoiceInGroups(ChoiceInGroup entity)
		{
			this.SendPropertyChanging();
			entity.ChoiceGroup = this;
		}
		
		private void detach_ChoiceInGroups(ChoiceInGroup entity)
		{
			this.SendPropertyChanging();
			entity.ChoiceGroup = null;
		}
		
		private void attach_ChoiceGroupFieldDefinitions(ChoiceGroupFieldDefinition entity)
		{
			this.SendPropertyChanging();
			entity.ChoiceGroup = this;
		}
		
		private void detach_ChoiceGroupFieldDefinitions(ChoiceGroupFieldDefinition entity)
		{
			this.SendPropertyChanging();
			entity.ChoiceGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChoiceInFields")]
	public partial class ChoiceInField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChoiceInFieldID;
		
		private int _ChoiceFieldID;
		
		private int _ChoiceInGroupID;
		
		private byte _Status;
		
		private EntityRef<ChoiceField> _ChoiceField;
		
		private EntityRef<ChoiceInGroup> _ChoiceInGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChoiceInFieldIDChanging(int value);
    partial void OnChoiceInFieldIDChanged();
    partial void OnChoiceFieldIDChanging(int value);
    partial void OnChoiceFieldIDChanged();
    partial void OnChoiceInGroupIDChanging(int value);
    partial void OnChoiceInGroupIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public ChoiceInField()
		{
			this._ChoiceField = default(EntityRef<ChoiceField>);
			this._ChoiceInGroup = default(EntityRef<ChoiceInGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceInFieldID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChoiceInFieldID
		{
			get
			{
				return this._ChoiceInFieldID;
			}
			set
			{
				if ((this._ChoiceInFieldID != value))
				{
					this.OnChoiceInFieldIDChanging(value);
					this.SendPropertyChanging();
					this._ChoiceInFieldID = value;
					this.SendPropertyChanged("ChoiceInFieldID");
					this.OnChoiceInFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceFieldID", DbType="Int NOT NULL")]
		public int ChoiceFieldID
		{
			get
			{
				return this._ChoiceFieldID;
			}
			set
			{
				if ((this._ChoiceFieldID != value))
				{
					if (this._ChoiceField.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChoiceFieldIDChanging(value);
					this.SendPropertyChanging();
					this._ChoiceFieldID = value;
					this.SendPropertyChanged("ChoiceFieldID");
					this.OnChoiceFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceInGroupID", DbType="Int NOT NULL")]
		public int ChoiceInGroupID
		{
			get
			{
				return this._ChoiceInGroupID;
			}
			set
			{
				if ((this._ChoiceInGroupID != value))
				{
					if (this._ChoiceInGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChoiceInGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ChoiceInGroupID = value;
					this.SendPropertyChanged("ChoiceInGroupID");
					this.OnChoiceInGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChoiceField_ChoiceInField", Storage="_ChoiceField", ThisKey="ChoiceFieldID", OtherKey="ChoiceFieldID", IsForeignKey=true)]
		public ChoiceField ChoiceField
		{
			get
			{
				return this._ChoiceField.Entity;
			}
			set
			{
				ChoiceField previousValue = this._ChoiceField.Entity;
				if (((previousValue != value) 
							|| (this._ChoiceField.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChoiceField.Entity = null;
						previousValue.ChoiceInFields.Remove(this);
					}
					this._ChoiceField.Entity = value;
					if ((value != null))
					{
						value.ChoiceInFields.Add(this);
						this._ChoiceFieldID = value.ChoiceFieldID;
					}
					else
					{
						this._ChoiceFieldID = default(int);
					}
					this.SendPropertyChanged("ChoiceField");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChoiceInGroup_ChoiceInField", Storage="_ChoiceInGroup", ThisKey="ChoiceInGroupID", OtherKey="ChoiceInGroupID", IsForeignKey=true)]
		public ChoiceInGroup ChoiceInGroup
		{
			get
			{
				return this._ChoiceInGroup.Entity;
			}
			set
			{
				ChoiceInGroup previousValue = this._ChoiceInGroup.Entity;
				if (((previousValue != value) 
							|| (this._ChoiceInGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChoiceInGroup.Entity = null;
						previousValue.ChoiceInFields.Remove(this);
					}
					this._ChoiceInGroup.Entity = value;
					if ((value != null))
					{
						value.ChoiceInFields.Add(this);
						this._ChoiceInGroupID = value.ChoiceInGroupID;
					}
					else
					{
						this._ChoiceInGroupID = default(int);
					}
					this.SendPropertyChanged("ChoiceInGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChoiceInGroups")]
	public partial class ChoiceInGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChoiceInGroupID;
		
		private int _ChoiceGroupID;
		
		private int _ChoiceNum;
		
		private string _ChoiceText;
		
		private System.Nullable<int> _ActiveOnDeterminingGroupChoiceInGroupID;
		
		private byte _Status;
		
		private EntitySet<ChoiceInField> _ChoiceInFields;
		
		private EntitySet<ChoiceInGroup> _ChoiceInGroups;
		
		private EntitySet<SearchWordChoice> _SearchWordChoices;
		
		private EntitySet<TrustTrackerForChoiceInGroup> _TrustTrackerForChoiceInGroups;
		
		private EntityRef<ChoiceGroup> _ChoiceGroup;
		
		private EntityRef<ChoiceInGroup> _ChoiceInGroup1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChoiceInGroupIDChanging(int value);
    partial void OnChoiceInGroupIDChanged();
    partial void OnChoiceGroupIDChanging(int value);
    partial void OnChoiceGroupIDChanged();
    partial void OnChoiceNumChanging(int value);
    partial void OnChoiceNumChanged();
    partial void OnChoiceTextChanging(string value);
    partial void OnChoiceTextChanged();
    partial void OnActiveOnDeterminingGroupChoiceInGroupIDChanging(System.Nullable<int> value);
    partial void OnActiveOnDeterminingGroupChoiceInGroupIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public ChoiceInGroup()
		{
			this._ChoiceInFields = new EntitySet<ChoiceInField>(new Action<ChoiceInField>(this.attach_ChoiceInFields), new Action<ChoiceInField>(this.detach_ChoiceInFields));
			this._ChoiceInGroups = new EntitySet<ChoiceInGroup>(new Action<ChoiceInGroup>(this.attach_ChoiceInGroups), new Action<ChoiceInGroup>(this.detach_ChoiceInGroups));
			this._SearchWordChoices = new EntitySet<SearchWordChoice>(new Action<SearchWordChoice>(this.attach_SearchWordChoices), new Action<SearchWordChoice>(this.detach_SearchWordChoices));
			this._TrustTrackerForChoiceInGroups = new EntitySet<TrustTrackerForChoiceInGroup>(new Action<TrustTrackerForChoiceInGroup>(this.attach_TrustTrackerForChoiceInGroups), new Action<TrustTrackerForChoiceInGroup>(this.detach_TrustTrackerForChoiceInGroups));
			this._ChoiceGroup = default(EntityRef<ChoiceGroup>);
			this._ChoiceInGroup1 = default(EntityRef<ChoiceInGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceInGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChoiceInGroupID
		{
			get
			{
				return this._ChoiceInGroupID;
			}
			set
			{
				if ((this._ChoiceInGroupID != value))
				{
					this.OnChoiceInGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ChoiceInGroupID = value;
					this.SendPropertyChanged("ChoiceInGroupID");
					this.OnChoiceInGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceGroupID", DbType="Int NOT NULL")]
		public int ChoiceGroupID
		{
			get
			{
				return this._ChoiceGroupID;
			}
			set
			{
				if ((this._ChoiceGroupID != value))
				{
					if (this._ChoiceGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChoiceGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ChoiceGroupID = value;
					this.SendPropertyChanged("ChoiceGroupID");
					this.OnChoiceGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceNum", DbType="Int NOT NULL")]
		public int ChoiceNum
		{
			get
			{
				return this._ChoiceNum;
			}
			set
			{
				if ((this._ChoiceNum != value))
				{
					this.OnChoiceNumChanging(value);
					this.SendPropertyChanging();
					this._ChoiceNum = value;
					this.SendPropertyChanged("ChoiceNum");
					this.OnChoiceNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceText", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ChoiceText
		{
			get
			{
				return this._ChoiceText;
			}
			set
			{
				if ((this._ChoiceText != value))
				{
					this.OnChoiceTextChanging(value);
					this.SendPropertyChanging();
					this._ChoiceText = value;
					this.SendPropertyChanged("ChoiceText");
					this.OnChoiceTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveOnDeterminingGroupChoiceInGroupID", DbType="Int")]
		public System.Nullable<int> ActiveOnDeterminingGroupChoiceInGroupID
		{
			get
			{
				return this._ActiveOnDeterminingGroupChoiceInGroupID;
			}
			set
			{
				if ((this._ActiveOnDeterminingGroupChoiceInGroupID != value))
				{
					if (this._ChoiceInGroup1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActiveOnDeterminingGroupChoiceInGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ActiveOnDeterminingGroupChoiceInGroupID = value;
					this.SendPropertyChanged("ActiveOnDeterminingGroupChoiceInGroupID");
					this.OnActiveOnDeterminingGroupChoiceInGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChoiceInGroup_ChoiceInField", Storage="_ChoiceInFields", ThisKey="ChoiceInGroupID", OtherKey="ChoiceInGroupID")]
		public EntitySet<ChoiceInField> ChoiceInFields
		{
			get
			{
				return this._ChoiceInFields;
			}
			set
			{
				this._ChoiceInFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChoiceInGroup_ChoiceInGroup", Storage="_ChoiceInGroups", ThisKey="ChoiceInGroupID", OtherKey="ActiveOnDeterminingGroupChoiceInGroupID")]
		public EntitySet<ChoiceInGroup> ChoiceInGroups
		{
			get
			{
				return this._ChoiceInGroups;
			}
			set
			{
				this._ChoiceInGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChoiceInGroup_SearchWordChoice", Storage="_SearchWordChoices", ThisKey="ChoiceInGroupID", OtherKey="ChoiceInGroupID")]
		public EntitySet<SearchWordChoice> SearchWordChoices
		{
			get
			{
				return this._SearchWordChoices;
			}
			set
			{
				this._SearchWordChoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChoiceInGroup_TrustTrackerForChoiceInGroup", Storage="_TrustTrackerForChoiceInGroups", ThisKey="ChoiceInGroupID", OtherKey="ChoiceInGroupID")]
		public EntitySet<TrustTrackerForChoiceInGroup> TrustTrackerForChoiceInGroups
		{
			get
			{
				return this._TrustTrackerForChoiceInGroups;
			}
			set
			{
				this._TrustTrackerForChoiceInGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChoiceGroup_ChoiceInGroup", Storage="_ChoiceGroup", ThisKey="ChoiceGroupID", OtherKey="ChoiceGroupID", IsForeignKey=true)]
		public ChoiceGroup ChoiceGroup
		{
			get
			{
				return this._ChoiceGroup.Entity;
			}
			set
			{
				ChoiceGroup previousValue = this._ChoiceGroup.Entity;
				if (((previousValue != value) 
							|| (this._ChoiceGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChoiceGroup.Entity = null;
						previousValue.ChoiceInGroups.Remove(this);
					}
					this._ChoiceGroup.Entity = value;
					if ((value != null))
					{
						value.ChoiceInGroups.Add(this);
						this._ChoiceGroupID = value.ChoiceGroupID;
					}
					else
					{
						this._ChoiceGroupID = default(int);
					}
					this.SendPropertyChanged("ChoiceGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChoiceInGroup_ChoiceInGroup", Storage="_ChoiceInGroup1", ThisKey="ActiveOnDeterminingGroupChoiceInGroupID", OtherKey="ChoiceInGroupID", IsForeignKey=true)]
		public ChoiceInGroup ChoiceInGroup1
		{
			get
			{
				return this._ChoiceInGroup1.Entity;
			}
			set
			{
				ChoiceInGroup previousValue = this._ChoiceInGroup1.Entity;
				if (((previousValue != value) 
							|| (this._ChoiceInGroup1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChoiceInGroup1.Entity = null;
						previousValue.ChoiceInGroups.Remove(this);
					}
					this._ChoiceInGroup1.Entity = value;
					if ((value != null))
					{
						value.ChoiceInGroups.Add(this);
						this._ActiveOnDeterminingGroupChoiceInGroupID = value.ChoiceInGroupID;
					}
					else
					{
						this._ActiveOnDeterminingGroupChoiceInGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChoiceInGroup1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChoiceInFields(ChoiceInField entity)
		{
			this.SendPropertyChanging();
			entity.ChoiceInGroup = this;
		}
		
		private void detach_ChoiceInFields(ChoiceInField entity)
		{
			this.SendPropertyChanging();
			entity.ChoiceInGroup = null;
		}
		
		private void attach_ChoiceInGroups(ChoiceInGroup entity)
		{
			this.SendPropertyChanging();
			entity.ChoiceInGroup1 = this;
		}
		
		private void detach_ChoiceInGroups(ChoiceInGroup entity)
		{
			this.SendPropertyChanging();
			entity.ChoiceInGroup1 = null;
		}
		
		private void attach_SearchWordChoices(SearchWordChoice entity)
		{
			this.SendPropertyChanging();
			entity.ChoiceInGroup = this;
		}
		
		private void detach_SearchWordChoices(SearchWordChoice entity)
		{
			this.SendPropertyChanging();
			entity.ChoiceInGroup = null;
		}
		
		private void attach_TrustTrackerForChoiceInGroups(TrustTrackerForChoiceInGroup entity)
		{
			this.SendPropertyChanging();
			entity.ChoiceInGroup = this;
		}
		
		private void detach_TrustTrackerForChoiceInGroups(TrustTrackerForChoiceInGroup entity)
		{
			this.SendPropertyChanging();
			entity.ChoiceInGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DateTimeFieldDefinitions")]
	public partial class DateTimeFieldDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DateTimeFieldDefinitionID;
		
		private int _FieldDefinitionID;
		
		private bool _IncludeDate;
		
		private bool _IncludeTime;
		
		private byte _Status;
		
		private EntityRef<FieldDefinition> _FieldDefinition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateTimeFieldDefinitionIDChanging(int value);
    partial void OnDateTimeFieldDefinitionIDChanged();
    partial void OnFieldDefinitionIDChanging(int value);
    partial void OnFieldDefinitionIDChanged();
    partial void OnIncludeDateChanging(bool value);
    partial void OnIncludeDateChanged();
    partial void OnIncludeTimeChanging(bool value);
    partial void OnIncludeTimeChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public DateTimeFieldDefinition()
		{
			this._FieldDefinition = default(EntityRef<FieldDefinition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeFieldDefinitionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DateTimeFieldDefinitionID
		{
			get
			{
				return this._DateTimeFieldDefinitionID;
			}
			set
			{
				if ((this._DateTimeFieldDefinitionID != value))
				{
					this.OnDateTimeFieldDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._DateTimeFieldDefinitionID = value;
					this.SendPropertyChanged("DateTimeFieldDefinitionID");
					this.OnDateTimeFieldDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldDefinitionID", DbType="Int NOT NULL")]
		public int FieldDefinitionID
		{
			get
			{
				return this._FieldDefinitionID;
			}
			set
			{
				if ((this._FieldDefinitionID != value))
				{
					if (this._FieldDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFieldDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._FieldDefinitionID = value;
					this.SendPropertyChanged("FieldDefinitionID");
					this.OnFieldDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeDate", DbType="Bit NOT NULL")]
		public bool IncludeDate
		{
			get
			{
				return this._IncludeDate;
			}
			set
			{
				if ((this._IncludeDate != value))
				{
					this.OnIncludeDateChanging(value);
					this.SendPropertyChanging();
					this._IncludeDate = value;
					this.SendPropertyChanged("IncludeDate");
					this.OnIncludeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeTime", DbType="Bit NOT NULL")]
		public bool IncludeTime
		{
			get
			{
				return this._IncludeTime;
			}
			set
			{
				if ((this._IncludeTime != value))
				{
					this.OnIncludeTimeChanging(value);
					this.SendPropertyChanging();
					this._IncludeTime = value;
					this.SendPropertyChanged("IncludeTime");
					this.OnIncludeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FieldDefinition_DateTimeFieldDefinition", Storage="_FieldDefinition", ThisKey="FieldDefinitionID", OtherKey="FieldDefinitionID", IsForeignKey=true)]
		public FieldDefinition FieldDefinition
		{
			get
			{
				return this._FieldDefinition.Entity;
			}
			set
			{
				FieldDefinition previousValue = this._FieldDefinition.Entity;
				if (((previousValue != value) 
							|| (this._FieldDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FieldDefinition.Entity = null;
						previousValue.DateTimeFieldDefinitions.Remove(this);
					}
					this._FieldDefinition.Entity = value;
					if ((value != null))
					{
						value.DateTimeFieldDefinitions.Add(this);
						this._FieldDefinitionID = value.FieldDefinitionID;
					}
					else
					{
						this._FieldDefinitionID = default(int);
					}
					this.SendPropertyChanged("FieldDefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DateTimeFields")]
	public partial class DateTimeField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DateTimeFieldID;
		
		private int _FieldID;
		
		private System.Nullable<System.DateTime> _DateTime;
		
		private byte _Status;
		
		private EntityRef<Field> _Field;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateTimeFieldIDChanging(int value);
    partial void OnDateTimeFieldIDChanged();
    partial void OnFieldIDChanging(int value);
    partial void OnFieldIDChanged();
    partial void OnDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public DateTimeField()
		{
			this._Field = default(EntityRef<Field>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeFieldID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DateTimeFieldID
		{
			get
			{
				return this._DateTimeFieldID;
			}
			set
			{
				if ((this._DateTimeFieldID != value))
				{
					this.OnDateTimeFieldIDChanging(value);
					this.SendPropertyChanging();
					this._DateTimeFieldID = value;
					this.SendPropertyChanged("DateTimeFieldID");
					this.OnDateTimeFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldID", DbType="Int NOT NULL")]
		public int FieldID
		{
			get
			{
				return this._FieldID;
			}
			set
			{
				if ((this._FieldID != value))
				{
					if (this._Field.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFieldIDChanging(value);
					this.SendPropertyChanging();
					this._FieldID = value;
					this.SendPropertyChanged("FieldID");
					this.OnFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Field_DateTimeField", Storage="_Field", ThisKey="FieldID", OtherKey="FieldID", IsForeignKey=true)]
		public Field Field
		{
			get
			{
				return this._Field.Entity;
			}
			set
			{
				Field previousValue = this._Field.Entity;
				if (((previousValue != value) 
							|| (this._Field.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Field.Entity = null;
						previousValue.DateTimeFields.Remove(this);
					}
					this._Field.Entity = value;
					if ((value != null))
					{
						value.DateTimeFields.Add(this);
						this._FieldID = value.FieldID;
					}
					else
					{
						this._FieldID = default(int);
					}
					this.SendPropertyChanged("Field");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Domains")]
	public partial class Domain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DomainID;
		
		private bool _ActiveRatingWebsite;
		
		private string _Name;
		
		private System.Nullable<int> _TblDimensionsID;
		
		private System.Nullable<int> _Creator;
		
		private byte _Status;
		
		private EntitySet<InsertableContent> _InsertableContents;
		
		private EntitySet<PointsManager> _PointsManagers;
		
		private EntityRef<TblDimension> _TblDimension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnActiveRatingWebsiteChanging(bool value);
    partial void OnActiveRatingWebsiteChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTblDimensionsIDChanging(System.Nullable<int> value);
    partial void OnTblDimensionsIDChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public Domain()
		{
			this._InsertableContents = new EntitySet<InsertableContent>(new Action<InsertableContent>(this.attach_InsertableContents), new Action<InsertableContent>(this.detach_InsertableContents));
			this._PointsManagers = new EntitySet<PointsManager>(new Action<PointsManager>(this.attach_PointsManagers), new Action<PointsManager>(this.detach_PointsManagers));
			this._TblDimension = default(EntityRef<TblDimension>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveRatingWebsite", DbType="Bit NOT NULL")]
		public bool ActiveRatingWebsite
		{
			get
			{
				return this._ActiveRatingWebsite;
			}
			set
			{
				if ((this._ActiveRatingWebsite != value))
				{
					this.OnActiveRatingWebsiteChanging(value);
					this.SendPropertyChanging();
					this._ActiveRatingWebsite = value;
					this.SendPropertyChanged("ActiveRatingWebsite");
					this.OnActiveRatingWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblDimensionsID", DbType="Int")]
		public System.Nullable<int> TblDimensionsID
		{
			get
			{
				return this._TblDimensionsID;
			}
			set
			{
				if ((this._TblDimensionsID != value))
				{
					if (this._TblDimension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblDimensionsIDChanging(value);
					this.SendPropertyChanging();
					this._TblDimensionsID = value;
					this.SendPropertyChanged("TblDimensionsID");
					this.OnTblDimensionsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Domain_InsertableContent", Storage="_InsertableContents", ThisKey="DomainID", OtherKey="DomainID")]
		public EntitySet<InsertableContent> InsertableContents
		{
			get
			{
				return this._InsertableContents;
			}
			set
			{
				this._InsertableContents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Domain_PointsManager", Storage="_PointsManagers", ThisKey="DomainID", OtherKey="DomainID")]
		public EntitySet<PointsManager> PointsManagers
		{
			get
			{
				return this._PointsManagers;
			}
			set
			{
				this._PointsManagers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblDimension_Domain", Storage="_TblDimension", ThisKey="TblDimensionsID", OtherKey="TblDimensionsID", IsForeignKey=true)]
		public TblDimension TblDimension
		{
			get
			{
				return this._TblDimension.Entity;
			}
			set
			{
				TblDimension previousValue = this._TblDimension.Entity;
				if (((previousValue != value) 
							|| (this._TblDimension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblDimension.Entity = null;
						previousValue.Domains.Remove(this);
					}
					this._TblDimension.Entity = value;
					if ((value != null))
					{
						value.Domains.Add(this);
						this._TblDimensionsID = value.TblDimensionsID;
					}
					else
					{
						this._TblDimensionsID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblDimension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InsertableContents(InsertableContent entity)
		{
			this.SendPropertyChanging();
			entity.Domain = this;
		}
		
		private void detach_InsertableContents(InsertableContent entity)
		{
			this.SendPropertyChanging();
			entity.Domain = null;
		}
		
		private void attach_PointsManagers(PointsManager entity)
		{
			this.SendPropertyChanging();
			entity.Domain = this;
		}
		
		private void detach_PointsManagers(PointsManager entity)
		{
			this.SendPropertyChanging();
			entity.Domain = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fields")]
	public partial class Field : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FieldID;
		
		private int _TblRowID;
		
		private int _FieldDefinitionID;
		
		private byte _Status;
		
		private EntitySet<AddressField> _AddressFields;
		
		private EntitySet<ChoiceField> _ChoiceFields;
		
		private EntitySet<DateTimeField> _DateTimeFields;
		
		private EntitySet<NumberField> _NumberFields;
		
		private EntitySet<TextField> _TextFields;
		
		private EntityRef<TblRow> _TblRow;
		
		private EntityRef<FieldDefinition> _FieldDefinition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFieldIDChanging(int value);
    partial void OnFieldIDChanged();
    partial void OnTblRowIDChanging(int value);
    partial void OnTblRowIDChanged();
    partial void OnFieldDefinitionIDChanging(int value);
    partial void OnFieldDefinitionIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public Field()
		{
			this._AddressFields = new EntitySet<AddressField>(new Action<AddressField>(this.attach_AddressFields), new Action<AddressField>(this.detach_AddressFields));
			this._ChoiceFields = new EntitySet<ChoiceField>(new Action<ChoiceField>(this.attach_ChoiceFields), new Action<ChoiceField>(this.detach_ChoiceFields));
			this._DateTimeFields = new EntitySet<DateTimeField>(new Action<DateTimeField>(this.attach_DateTimeFields), new Action<DateTimeField>(this.detach_DateTimeFields));
			this._NumberFields = new EntitySet<NumberField>(new Action<NumberField>(this.attach_NumberFields), new Action<NumberField>(this.detach_NumberFields));
			this._TextFields = new EntitySet<TextField>(new Action<TextField>(this.attach_TextFields), new Action<TextField>(this.detach_TextFields));
			this._TblRow = default(EntityRef<TblRow>);
			this._FieldDefinition = default(EntityRef<FieldDefinition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FieldID
		{
			get
			{
				return this._FieldID;
			}
			set
			{
				if ((this._FieldID != value))
				{
					this.OnFieldIDChanging(value);
					this.SendPropertyChanging();
					this._FieldID = value;
					this.SendPropertyChanged("FieldID");
					this.OnFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblRowID", DbType="Int NOT NULL")]
		public int TblRowID
		{
			get
			{
				return this._TblRowID;
			}
			set
			{
				if ((this._TblRowID != value))
				{
					if (this._TblRow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblRowIDChanging(value);
					this.SendPropertyChanging();
					this._TblRowID = value;
					this.SendPropertyChanged("TblRowID");
					this.OnTblRowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldDefinitionID", DbType="Int NOT NULL")]
		public int FieldDefinitionID
		{
			get
			{
				return this._FieldDefinitionID;
			}
			set
			{
				if ((this._FieldDefinitionID != value))
				{
					if (this._FieldDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFieldDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._FieldDefinitionID = value;
					this.SendPropertyChanged("FieldDefinitionID");
					this.OnFieldDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Field_AddressField", Storage="_AddressFields", ThisKey="FieldID", OtherKey="FieldID")]
		public EntitySet<AddressField> AddressFields
		{
			get
			{
				return this._AddressFields;
			}
			set
			{
				this._AddressFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Field_ChoiceField", Storage="_ChoiceFields", ThisKey="FieldID", OtherKey="FieldID")]
		public EntitySet<ChoiceField> ChoiceFields
		{
			get
			{
				return this._ChoiceFields;
			}
			set
			{
				this._ChoiceFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Field_DateTimeField", Storage="_DateTimeFields", ThisKey="FieldID", OtherKey="FieldID")]
		public EntitySet<DateTimeField> DateTimeFields
		{
			get
			{
				return this._DateTimeFields;
			}
			set
			{
				this._DateTimeFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Field_NumberField", Storage="_NumberFields", ThisKey="FieldID", OtherKey="FieldID")]
		public EntitySet<NumberField> NumberFields
		{
			get
			{
				return this._NumberFields;
			}
			set
			{
				this._NumberFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Field_TextField", Storage="_TextFields", ThisKey="FieldID", OtherKey="FieldID")]
		public EntitySet<TextField> TextFields
		{
			get
			{
				return this._TextFields;
			}
			set
			{
				this._TextFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblRow_Field", Storage="_TblRow", ThisKey="TblRowID", OtherKey="TblRowID", IsForeignKey=true)]
		public TblRow TblRow
		{
			get
			{
				return this._TblRow.Entity;
			}
			set
			{
				TblRow previousValue = this._TblRow.Entity;
				if (((previousValue != value) 
							|| (this._TblRow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblRow.Entity = null;
						previousValue.Fields.Remove(this);
					}
					this._TblRow.Entity = value;
					if ((value != null))
					{
						value.Fields.Add(this);
						this._TblRowID = value.TblRowID;
					}
					else
					{
						this._TblRowID = default(int);
					}
					this.SendPropertyChanged("TblRow");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FieldDefinition_Field", Storage="_FieldDefinition", ThisKey="FieldDefinitionID", OtherKey="FieldDefinitionID", IsForeignKey=true)]
		public FieldDefinition FieldDefinition
		{
			get
			{
				return this._FieldDefinition.Entity;
			}
			set
			{
				FieldDefinition previousValue = this._FieldDefinition.Entity;
				if (((previousValue != value) 
							|| (this._FieldDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FieldDefinition.Entity = null;
						previousValue.Fields.Remove(this);
					}
					this._FieldDefinition.Entity = value;
					if ((value != null))
					{
						value.Fields.Add(this);
						this._FieldDefinitionID = value.FieldDefinitionID;
					}
					else
					{
						this._FieldDefinitionID = default(int);
					}
					this.SendPropertyChanged("FieldDefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AddressFields(AddressField entity)
		{
			this.SendPropertyChanging();
			entity.Field = this;
		}
		
		private void detach_AddressFields(AddressField entity)
		{
			this.SendPropertyChanging();
			entity.Field = null;
		}
		
		private void attach_ChoiceFields(ChoiceField entity)
		{
			this.SendPropertyChanging();
			entity.Field = this;
		}
		
		private void detach_ChoiceFields(ChoiceField entity)
		{
			this.SendPropertyChanging();
			entity.Field = null;
		}
		
		private void attach_DateTimeFields(DateTimeField entity)
		{
			this.SendPropertyChanging();
			entity.Field = this;
		}
		
		private void detach_DateTimeFields(DateTimeField entity)
		{
			this.SendPropertyChanging();
			entity.Field = null;
		}
		
		private void attach_NumberFields(NumberField entity)
		{
			this.SendPropertyChanging();
			entity.Field = this;
		}
		
		private void detach_NumberFields(NumberField entity)
		{
			this.SendPropertyChanging();
			entity.Field = null;
		}
		
		private void attach_TextFields(TextField entity)
		{
			this.SendPropertyChanging();
			entity.Field = this;
		}
		
		private void detach_TextFields(TextField entity)
		{
			this.SendPropertyChanging();
			entity.Field = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumAdministrators")]
	public partial class ForumAdministrator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public ForumAdministrator()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumComplaints")]
	public partial class ForumComplaint
	{
		
		private int _UserID;
		
		private int _MessageID;
		
		private string _ComplainText;
		
		public ForumComplaint()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", DbType="Int NOT NULL")]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this._MessageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplainText", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ComplainText
		{
			get
			{
				return this._ComplainText;
			}
			set
			{
				if ((this._ComplainText != value))
				{
					this._ComplainText = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumGroupPermissions")]
	public partial class ForumGroupPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ForumID;
		
		private int _GroupID;
		
		private bool _AllowReading;
		
		private bool _AllowPosting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForumIDChanging(int value);
    partial void OnForumIDChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnAllowReadingChanging(bool value);
    partial void OnAllowReadingChanged();
    partial void OnAllowPostingChanging(bool value);
    partial void OnAllowPostingChanged();
    #endregion
		
		public ForumGroupPermission()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ForumID
		{
			get
			{
				return this._ForumID;
			}
			set
			{
				if ((this._ForumID != value))
				{
					this.OnForumIDChanging(value);
					this.SendPropertyChanging();
					this._ForumID = value;
					this.SendPropertyChanged("ForumID");
					this.OnForumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowReading", DbType="Bit NOT NULL")]
		public bool AllowReading
		{
			get
			{
				return this._AllowReading;
			}
			set
			{
				if ((this._AllowReading != value))
				{
					this.OnAllowReadingChanging(value);
					this.SendPropertyChanging();
					this._AllowReading = value;
					this.SendPropertyChanged("AllowReading");
					this.OnAllowReadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowPosting", DbType="Bit NOT NULL")]
		public bool AllowPosting
		{
			get
			{
				return this._AllowPosting;
			}
			set
			{
				if ((this._AllowPosting != value))
				{
					this.OnAllowPostingChanging(value);
					this.SendPropertyChanging();
					this._AllowPosting = value;
					this.SendPropertyChanged("AllowPosting");
					this.OnAllowPostingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumGroups")]
	public partial class ForumGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupID;
		
		private string _GroupName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    #endregion
		
		public ForumGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumMessages")]
	public partial class ForumMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageID;
		
		private int _TopicID;
		
		private int _UserID;
		
		private string _Body;
		
		private System.DateTime _CreationDate;
		
		private bool _Visible;
		
		private string _IPAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnTopicIDChanging(int value);
    partial void OnTopicIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    #endregion
		
		public ForumMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicID", DbType="Int NOT NULL")]
		public int TopicID
		{
			get
			{
				return this._TopicID;
			}
			set
			{
				if ((this._TopicID != value))
				{
					this.OnTopicIDChanging(value);
					this.SendPropertyChanging();
					this._TopicID = value;
					this.SendPropertyChanged("TopicID");
					this.OnTopicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(50)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumModerators")]
	public partial class ForumModerator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private int _ForumID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnForumIDChanging(int value);
    partial void OnForumIDChanged();
    #endregion
		
		public ForumModerator()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ForumID
		{
			get
			{
				return this._ForumID;
			}
			set
			{
				if ((this._ForumID != value))
				{
					this.OnForumIDChanging(value);
					this.SendPropertyChanging();
					this._ForumID = value;
					this.SendPropertyChanged("ForumID");
					this.OnForumIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumNewTopicSubscriptions")]
	public partial class ForumNewTopicSubscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private int _ForumID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnForumIDChanging(int value);
    partial void OnForumIDChanged();
    #endregion
		
		public ForumNewTopicSubscription()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ForumID
		{
			get
			{
				return this._ForumID;
			}
			set
			{
				if ((this._ForumID != value))
				{
					this.OnForumIDChanging(value);
					this.SendPropertyChanging();
					this._ForumID = value;
					this.SendPropertyChanged("ForumID");
					this.OnForumIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumPersonalMessages")]
	public partial class ForumPersonalMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageID;
		
		private int _FromUserID;
		
		private int _ToUserID;
		
		private string _Body;
		
		private System.DateTime _CreationDate;
		
		private bool _New;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnFromUserIDChanging(int value);
    partial void OnFromUserIDChanged();
    partial void OnToUserIDChanging(int value);
    partial void OnToUserIDChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnNewChanging(bool value);
    partial void OnNewChanged();
    #endregion
		
		public ForumPersonalMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromUserID", DbType="Int NOT NULL")]
		public int FromUserID
		{
			get
			{
				return this._FromUserID;
			}
			set
			{
				if ((this._FromUserID != value))
				{
					this.OnFromUserIDChanging(value);
					this.SendPropertyChanging();
					this._FromUserID = value;
					this.SendPropertyChanged("FromUserID");
					this.OnFromUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToUserID", DbType="Int NOT NULL")]
		public int ToUserID
		{
			get
			{
				return this._ToUserID;
			}
			set
			{
				if ((this._ToUserID != value))
				{
					this.OnToUserIDChanging(value);
					this.SendPropertyChanging();
					this._ToUserID = value;
					this.SendPropertyChanged("ToUserID");
					this.OnToUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_New", DbType="Bit NOT NULL")]
		public bool New
		{
			get
			{
				return this._New;
			}
			set
			{
				if ((this._New != value))
				{
					this.OnNewChanging(value);
					this.SendPropertyChanging();
					this._New = value;
					this.SendPropertyChanged("New");
					this.OnNewChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumPollAnswers")]
	public partial class ForumPollAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private int _OptionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnOptionIDChanging(int value);
    partial void OnOptionIDChanged();
    #endregion
		
		public ForumPollAnswer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OptionID
		{
			get
			{
				return this._OptionID;
			}
			set
			{
				if ((this._OptionID != value))
				{
					this.OnOptionIDChanging(value);
					this.SendPropertyChanging();
					this._OptionID = value;
					this.SendPropertyChanged("OptionID");
					this.OnOptionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumPollOptions")]
	public partial class ForumPollOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OptionID;
		
		private int _PollID;
		
		private string _OptionText;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOptionIDChanging(int value);
    partial void OnOptionIDChanged();
    partial void OnPollIDChanging(int value);
    partial void OnPollIDChanged();
    partial void OnOptionTextChanging(string value);
    partial void OnOptionTextChanged();
    #endregion
		
		public ForumPollOption()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OptionID
		{
			get
			{
				return this._OptionID;
			}
			set
			{
				if ((this._OptionID != value))
				{
					this.OnOptionIDChanging(value);
					this.SendPropertyChanging();
					this._OptionID = value;
					this.SendPropertyChanged("OptionID");
					this.OnOptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", DbType="Int NOT NULL")]
		public int PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					this.OnPollIDChanging(value);
					this.SendPropertyChanging();
					this._PollID = value;
					this.SendPropertyChanged("PollID");
					this.OnPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OptionText
		{
			get
			{
				return this._OptionText;
			}
			set
			{
				if ((this._OptionText != value))
				{
					this.OnOptionTextChanging(value);
					this.SendPropertyChanging();
					this._OptionText = value;
					this.SendPropertyChanged("OptionText");
					this.OnOptionTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumPolls")]
	public partial class ForumPoll : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PollID;
		
		private int _TopicID;
		
		private string _Question;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPollIDChanging(int value);
    partial void OnPollIDChanged();
    partial void OnTopicIDChanging(int value);
    partial void OnTopicIDChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    #endregion
		
		public ForumPoll()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					this.OnPollIDChanging(value);
					this.SendPropertyChanging();
					this._PollID = value;
					this.SendPropertyChanged("PollID");
					this.OnPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicID", DbType="Int NOT NULL")]
		public int TopicID
		{
			get
			{
				return this._TopicID;
			}
			set
			{
				if ((this._TopicID != value))
				{
					this.OnTopicIDChanging(value);
					this.SendPropertyChanging();
					this._TopicID = value;
					this.SendPropertyChanged("TopicID");
					this.OnTopicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Forums")]
	public partial class Forum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ForumID;
		
		private string _Title;
		
		private string _Description;
		
		private bool _Premoderated;
		
		private int _GroupID;
		
		private bool _MembersOnly;
		
		private int _OrderByNumber;
		
		private bool _RestrictTopicCreation;
		
		private string _IconFile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForumIDChanging(int value);
    partial void OnForumIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPremoderatedChanging(bool value);
    partial void OnPremoderatedChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnMembersOnlyChanging(bool value);
    partial void OnMembersOnlyChanged();
    partial void OnOrderByNumberChanging(int value);
    partial void OnOrderByNumberChanged();
    partial void OnRestrictTopicCreationChanging(bool value);
    partial void OnRestrictTopicCreationChanged();
    partial void OnIconFileChanging(string value);
    partial void OnIconFileChanged();
    #endregion
		
		public Forum()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ForumID
		{
			get
			{
				return this._ForumID;
			}
			set
			{
				if ((this._ForumID != value))
				{
					this.OnForumIDChanging(value);
					this.SendPropertyChanging();
					this._ForumID = value;
					this.SendPropertyChanged("ForumID");
					this.OnForumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Premoderated", DbType="Bit NOT NULL")]
		public bool Premoderated
		{
			get
			{
				return this._Premoderated;
			}
			set
			{
				if ((this._Premoderated != value))
				{
					this.OnPremoderatedChanging(value);
					this.SendPropertyChanging();
					this._Premoderated = value;
					this.SendPropertyChanged("Premoderated");
					this.OnPremoderatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembersOnly", DbType="Bit NOT NULL")]
		public bool MembersOnly
		{
			get
			{
				return this._MembersOnly;
			}
			set
			{
				if ((this._MembersOnly != value))
				{
					this.OnMembersOnlyChanging(value);
					this.SendPropertyChanging();
					this._MembersOnly = value;
					this.SendPropertyChanged("MembersOnly");
					this.OnMembersOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderByNumber", DbType="Int NOT NULL")]
		public int OrderByNumber
		{
			get
			{
				return this._OrderByNumber;
			}
			set
			{
				if ((this._OrderByNumber != value))
				{
					this.OnOrderByNumberChanging(value);
					this.SendPropertyChanging();
					this._OrderByNumber = value;
					this.SendPropertyChanged("OrderByNumber");
					this.OnOrderByNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestrictTopicCreation", DbType="Bit NOT NULL")]
		public bool RestrictTopicCreation
		{
			get
			{
				return this._RestrictTopicCreation;
			}
			set
			{
				if ((this._RestrictTopicCreation != value))
				{
					this.OnRestrictTopicCreationChanging(value);
					this.SendPropertyChanging();
					this._RestrictTopicCreation = value;
					this.SendPropertyChanged("RestrictTopicCreation");
					this.OnRestrictTopicCreationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconFile", DbType="NVarChar(50)")]
		public string IconFile
		{
			get
			{
				return this._IconFile;
			}
			set
			{
				if ((this._IconFile != value))
				{
					this.OnIconFileChanging(value);
					this.SendPropertyChanging();
					this._IconFile = value;
					this.SendPropertyChanged("IconFile");
					this.OnIconFileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumSubforums")]
	public partial class ForumSubforum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ParentForumID;
		
		private int _SubForumID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParentForumIDChanging(int value);
    partial void OnParentForumIDChanged();
    partial void OnSubForumIDChanging(int value);
    partial void OnSubForumIDChanged();
    #endregion
		
		public ForumSubforum()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentForumID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ParentForumID
		{
			get
			{
				return this._ParentForumID;
			}
			set
			{
				if ((this._ParentForumID != value))
				{
					this.OnParentForumIDChanging(value);
					this.SendPropertyChanging();
					this._ParentForumID = value;
					this.SendPropertyChanged("ParentForumID");
					this.OnParentForumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubForumID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SubForumID
		{
			get
			{
				return this._SubForumID;
			}
			set
			{
				if ((this._SubForumID != value))
				{
					this.OnSubForumIDChanging(value);
					this.SendPropertyChanging();
					this._SubForumID = value;
					this.SendPropertyChanged("SubForumID");
					this.OnSubForumIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumSubscriptions")]
	public partial class ForumSubscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private int _TopicID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnTopicIDChanging(int value);
    partial void OnTopicIDChanged();
    #endregion
		
		public ForumSubscription()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TopicID
		{
			get
			{
				return this._TopicID;
			}
			set
			{
				if ((this._TopicID != value))
				{
					this.OnTopicIDChanging(value);
					this.SendPropertyChanging();
					this._TopicID = value;
					this.SendPropertyChanged("TopicID");
					this.OnTopicIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumTopics")]
	public partial class ForumTopic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TopicID;
		
		private int _ForumID;
		
		private int _UserID;
		
		private string _Subject;
		
		private bool _Visible;
		
		private int _LastMessageID;
		
		private int _IsSticky;
		
		private bool _IsClosed;
		
		private int _ViewsCount;
		
		private int _RepliesCount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTopicIDChanging(int value);
    partial void OnTopicIDChanged();
    partial void OnForumIDChanging(int value);
    partial void OnForumIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnLastMessageIDChanging(int value);
    partial void OnLastMessageIDChanged();
    partial void OnIsStickyChanging(int value);
    partial void OnIsStickyChanged();
    partial void OnIsClosedChanging(bool value);
    partial void OnIsClosedChanged();
    partial void OnViewsCountChanging(int value);
    partial void OnViewsCountChanged();
    partial void OnRepliesCountChanging(int value);
    partial void OnRepliesCountChanged();
    #endregion
		
		public ForumTopic()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TopicID
		{
			get
			{
				return this._TopicID;
			}
			set
			{
				if ((this._TopicID != value))
				{
					this.OnTopicIDChanging(value);
					this.SendPropertyChanging();
					this._TopicID = value;
					this.SendPropertyChanged("TopicID");
					this.OnTopicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumID", DbType="Int NOT NULL")]
		public int ForumID
		{
			get
			{
				return this._ForumID;
			}
			set
			{
				if ((this._ForumID != value))
				{
					this.OnForumIDChanging(value);
					this.SendPropertyChanging();
					this._ForumID = value;
					this.SendPropertyChanged("ForumID");
					this.OnForumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMessageID", DbType="Int NOT NULL")]
		public int LastMessageID
		{
			get
			{
				return this._LastMessageID;
			}
			set
			{
				if ((this._LastMessageID != value))
				{
					this.OnLastMessageIDChanging(value);
					this.SendPropertyChanging();
					this._LastMessageID = value;
					this.SendPropertyChanged("LastMessageID");
					this.OnLastMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSticky", DbType="Int NOT NULL")]
		public int IsSticky
		{
			get
			{
				return this._IsSticky;
			}
			set
			{
				if ((this._IsSticky != value))
				{
					this.OnIsStickyChanging(value);
					this.SendPropertyChanging();
					this._IsSticky = value;
					this.SendPropertyChanged("IsSticky");
					this.OnIsStickyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClosed", DbType="Bit NOT NULL")]
		public bool IsClosed
		{
			get
			{
				return this._IsClosed;
			}
			set
			{
				if ((this._IsClosed != value))
				{
					this.OnIsClosedChanging(value);
					this.SendPropertyChanging();
					this._IsClosed = value;
					this.SendPropertyChanged("IsClosed");
					this.OnIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewsCount", DbType="Int NOT NULL")]
		public int ViewsCount
		{
			get
			{
				return this._ViewsCount;
			}
			set
			{
				if ((this._ViewsCount != value))
				{
					this.OnViewsCountChanging(value);
					this.SendPropertyChanging();
					this._ViewsCount = value;
					this.SendPropertyChanged("ViewsCount");
					this.OnViewsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepliesCount", DbType="Int NOT NULL")]
		public int RepliesCount
		{
			get
			{
				return this._RepliesCount;
			}
			set
			{
				if ((this._RepliesCount != value))
				{
					this.OnRepliesCountChanging(value);
					this.SendPropertyChanging();
					this._RepliesCount = value;
					this.SendPropertyChanged("RepliesCount");
					this.OnRepliesCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumUploadedFiles")]
	public partial class ForumUploadedFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FileID;
		
		private string _FileName;
		
		private int _MessageID;
		
		private int _UserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIDChanging(int value);
    partial void OnFileIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public ForumUploadedFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", DbType="Int NOT NULL")]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumUploadedPersonalFiles")]
	public partial class ForumUploadedPersonalFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FileID;
		
		private string _FileName;
		
		private int _MessageID;
		
		private int _UserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIDChanging(int value);
    partial void OnFileIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public ForumUploadedPersonalFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", DbType="Int NOT NULL")]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumUserGroups")]
	public partial class ForumUserGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupID;
		
		private string _Title;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public ForumUserGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumUsers")]
	public partial class ForumUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _UserName;
		
		private string _Email;
		
		private string _Password;
		
		private string _Homepage;
		
		private string _Interests;
		
		private int _PostsCount;
		
		private System.DateTime _RegistrationDate;
		
		private bool _Disabled;
		
		private string _ActivationCode;
		
		private string _AvatarFileName;
		
		private string _Signature;
		
		private System.Nullable<System.DateTime> _LastLogonDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnHomepageChanging(string value);
    partial void OnHomepageChanged();
    partial void OnInterestsChanging(string value);
    partial void OnInterestsChanged();
    partial void OnPostsCountChanging(int value);
    partial void OnPostsCountChanged();
    partial void OnRegistrationDateChanging(System.DateTime value);
    partial void OnRegistrationDateChanged();
    partial void OnDisabledChanging(bool value);
    partial void OnDisabledChanged();
    partial void OnActivationCodeChanging(string value);
    partial void OnActivationCodeChanged();
    partial void OnAvatarFileNameChanging(string value);
    partial void OnAvatarFileNameChanged();
    partial void OnSignatureChanging(string value);
    partial void OnSignatureChanged();
    partial void OnLastLogonDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLogonDateChanged();
    #endregion
		
		public ForumUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Homepage", DbType="NVarChar(50)")]
		public string Homepage
		{
			get
			{
				return this._Homepage;
			}
			set
			{
				if ((this._Homepage != value))
				{
					this.OnHomepageChanging(value);
					this.SendPropertyChanging();
					this._Homepage = value;
					this.SendPropertyChanged("Homepage");
					this.OnHomepageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interests", DbType="NVarChar(255)")]
		public string Interests
		{
			get
			{
				return this._Interests;
			}
			set
			{
				if ((this._Interests != value))
				{
					this.OnInterestsChanging(value);
					this.SendPropertyChanging();
					this._Interests = value;
					this.SendPropertyChanged("Interests");
					this.OnInterestsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostsCount", DbType="Int NOT NULL")]
		public int PostsCount
		{
			get
			{
				return this._PostsCount;
			}
			set
			{
				if ((this._PostsCount != value))
				{
					this.OnPostsCountChanging(value);
					this.SendPropertyChanging();
					this._PostsCount = value;
					this.SendPropertyChanged("PostsCount");
					this.OnPostsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="DateTime NOT NULL")]
		public System.DateTime RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this.OnRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDate = value;
					this.SendPropertyChanged("RegistrationDate");
					this.OnRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disabled", DbType="Bit NOT NULL")]
		public bool Disabled
		{
			get
			{
				return this._Disabled;
			}
			set
			{
				if ((this._Disabled != value))
				{
					this.OnDisabledChanging(value);
					this.SendPropertyChanging();
					this._Disabled = value;
					this.SendPropertyChanged("Disabled");
					this.OnDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ActivationCode
		{
			get
			{
				return this._ActivationCode;
			}
			set
			{
				if ((this._ActivationCode != value))
				{
					this.OnActivationCodeChanging(value);
					this.SendPropertyChanging();
					this._ActivationCode = value;
					this.SendPropertyChanged("ActivationCode");
					this.OnActivationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvatarFileName", DbType="NVarChar(50)")]
		public string AvatarFileName
		{
			get
			{
				return this._AvatarFileName;
			}
			set
			{
				if ((this._AvatarFileName != value))
				{
					this.OnAvatarFileNameChanging(value);
					this.SendPropertyChanging();
					this._AvatarFileName = value;
					this.SendPropertyChanged("AvatarFileName");
					this.OnAvatarFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Signature", DbType="NVarChar(1000)")]
		public string Signature
		{
			get
			{
				return this._Signature;
			}
			set
			{
				if ((this._Signature != value))
				{
					this.OnSignatureChanging(value);
					this.SendPropertyChanging();
					this._Signature = value;
					this.SendPropertyChanged("Signature");
					this.OnSignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogonDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogonDate
		{
			get
			{
				return this._LastLogonDate;
			}
			set
			{
				if ((this._LastLogonDate != value))
				{
					this.OnLastLogonDateChanging(value);
					this.SendPropertyChanging();
					this._LastLogonDate = value;
					this.SendPropertyChanged("LastLogonDate");
					this.OnLastLogonDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumUsersInGroup")]
	public partial class ForumUsersInGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupID;
		
		private int _UserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public ForumUsersInGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HierarchyItems")]
	public partial class HierarchyItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HierarchyItemID;
		
		private System.Nullable<int> _HigherHierarchyItemID;
		
		private System.Nullable<int> _HigherHierarchyItemForRoutingID;
		
		private System.Nullable<int> _TblID;
		
		private string _HierarchyItemName;
		
		private string _FullHierarchyWithHtml;
		
		private string _FullHierarchyNoHtml;
		
		private string _RouteToHere;
		
		private bool _IncludeInMenu;
		
		private EntitySet<HierarchyItem> _HierarchyItems;
		
		private EntitySet<HierarchyItem> _HierarchyItems1;
		
		private EntitySet<SearchWordHierarchyItem> _SearchWordHierarchyItems;
		
		private EntityRef<HierarchyItem> _HierarchyItem1;
		
		private EntityRef<HierarchyItem> _HierarchyItem2;
		
		private EntityRef<Tbl> _Tbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHierarchyItemIDChanging(int value);
    partial void OnHierarchyItemIDChanged();
    partial void OnHigherHierarchyItemIDChanging(System.Nullable<int> value);
    partial void OnHigherHierarchyItemIDChanged();
    partial void OnHigherHierarchyItemForRoutingIDChanging(System.Nullable<int> value);
    partial void OnHigherHierarchyItemForRoutingIDChanged();
    partial void OnTblIDChanging(System.Nullable<int> value);
    partial void OnTblIDChanged();
    partial void OnHierarchyItemNameChanging(string value);
    partial void OnHierarchyItemNameChanged();
    partial void OnFullHierarchyWithHtmlChanging(string value);
    partial void OnFullHierarchyWithHtmlChanged();
    partial void OnFullHierarchyNoHtmlChanging(string value);
    partial void OnFullHierarchyNoHtmlChanged();
    partial void OnRouteToHereChanging(string value);
    partial void OnRouteToHereChanged();
    partial void OnIncludeInMenuChanging(bool value);
    partial void OnIncludeInMenuChanged();
    #endregion
		
		public HierarchyItem()
		{
			this._HierarchyItems = new EntitySet<HierarchyItem>(new Action<HierarchyItem>(this.attach_HierarchyItems), new Action<HierarchyItem>(this.detach_HierarchyItems));
			this._HierarchyItems1 = new EntitySet<HierarchyItem>(new Action<HierarchyItem>(this.attach_HierarchyItems1), new Action<HierarchyItem>(this.detach_HierarchyItems1));
			this._SearchWordHierarchyItems = new EntitySet<SearchWordHierarchyItem>(new Action<SearchWordHierarchyItem>(this.attach_SearchWordHierarchyItems), new Action<SearchWordHierarchyItem>(this.detach_SearchWordHierarchyItems));
			this._HierarchyItem1 = default(EntityRef<HierarchyItem>);
			this._HierarchyItem2 = default(EntityRef<HierarchyItem>);
			this._Tbl = default(EntityRef<Tbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HierarchyItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HierarchyItemID
		{
			get
			{
				return this._HierarchyItemID;
			}
			set
			{
				if ((this._HierarchyItemID != value))
				{
					this.OnHierarchyItemIDChanging(value);
					this.SendPropertyChanging();
					this._HierarchyItemID = value;
					this.SendPropertyChanged("HierarchyItemID");
					this.OnHierarchyItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HigherHierarchyItemID", DbType="Int")]
		public System.Nullable<int> HigherHierarchyItemID
		{
			get
			{
				return this._HigherHierarchyItemID;
			}
			set
			{
				if ((this._HigherHierarchyItemID != value))
				{
					if (this._HierarchyItem2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHigherHierarchyItemIDChanging(value);
					this.SendPropertyChanging();
					this._HigherHierarchyItemID = value;
					this.SendPropertyChanged("HigherHierarchyItemID");
					this.OnHigherHierarchyItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HigherHierarchyItemForRoutingID", DbType="Int")]
		public System.Nullable<int> HigherHierarchyItemForRoutingID
		{
			get
			{
				return this._HigherHierarchyItemForRoutingID;
			}
			set
			{
				if ((this._HigherHierarchyItemForRoutingID != value))
				{
					if (this._HierarchyItem1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHigherHierarchyItemForRoutingIDChanging(value);
					this.SendPropertyChanging();
					this._HigherHierarchyItemForRoutingID = value;
					this.SendPropertyChanged("HigherHierarchyItemForRoutingID");
					this.OnHigherHierarchyItemForRoutingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblID", DbType="Int")]
		public System.Nullable<int> TblID
		{
			get
			{
				return this._TblID;
			}
			set
			{
				if ((this._TblID != value))
				{
					if (this._Tbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblIDChanging(value);
					this.SendPropertyChanging();
					this._TblID = value;
					this.SendPropertyChanged("TblID");
					this.OnTblIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HierarchyItemName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string HierarchyItemName
		{
			get
			{
				return this._HierarchyItemName;
			}
			set
			{
				if ((this._HierarchyItemName != value))
				{
					this.OnHierarchyItemNameChanging(value);
					this.SendPropertyChanging();
					this._HierarchyItemName = value;
					this.SendPropertyChanged("HierarchyItemName");
					this.OnHierarchyItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullHierarchyWithHtml", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FullHierarchyWithHtml
		{
			get
			{
				return this._FullHierarchyWithHtml;
			}
			set
			{
				if ((this._FullHierarchyWithHtml != value))
				{
					this.OnFullHierarchyWithHtmlChanging(value);
					this.SendPropertyChanging();
					this._FullHierarchyWithHtml = value;
					this.SendPropertyChanged("FullHierarchyWithHtml");
					this.OnFullHierarchyWithHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullHierarchyNoHtml", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FullHierarchyNoHtml
		{
			get
			{
				return this._FullHierarchyNoHtml;
			}
			set
			{
				if ((this._FullHierarchyNoHtml != value))
				{
					this.OnFullHierarchyNoHtmlChanging(value);
					this.SendPropertyChanging();
					this._FullHierarchyNoHtml = value;
					this.SendPropertyChanged("FullHierarchyNoHtml");
					this.OnFullHierarchyNoHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteToHere", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string RouteToHere
		{
			get
			{
				return this._RouteToHere;
			}
			set
			{
				if ((this._RouteToHere != value))
				{
					this.OnRouteToHereChanging(value);
					this.SendPropertyChanging();
					this._RouteToHere = value;
					this.SendPropertyChanged("RouteToHere");
					this.OnRouteToHereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeInMenu", DbType="Bit NOT NULL")]
		public bool IncludeInMenu
		{
			get
			{
				return this._IncludeInMenu;
			}
			set
			{
				if ((this._IncludeInMenu != value))
				{
					this.OnIncludeInMenuChanging(value);
					this.SendPropertyChanging();
					this._IncludeInMenu = value;
					this.SendPropertyChanged("IncludeInMenu");
					this.OnIncludeInMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HierarchyItem_HierarchyItem", Storage="_HierarchyItems", ThisKey="HierarchyItemID", OtherKey="HigherHierarchyItemForRoutingID")]
		public EntitySet<HierarchyItem> HierarchyItems
		{
			get
			{
				return this._HierarchyItems;
			}
			set
			{
				this._HierarchyItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HierarchyItem_HierarchyItem1", Storage="_HierarchyItems1", ThisKey="HierarchyItemID", OtherKey="HigherHierarchyItemID")]
		public EntitySet<HierarchyItem> HierarchyItems1
		{
			get
			{
				return this._HierarchyItems1;
			}
			set
			{
				this._HierarchyItems1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HierarchyItem_SearchWordHierarchyItem", Storage="_SearchWordHierarchyItems", ThisKey="HierarchyItemID", OtherKey="HierarchyItemID")]
		public EntitySet<SearchWordHierarchyItem> SearchWordHierarchyItems
		{
			get
			{
				return this._SearchWordHierarchyItems;
			}
			set
			{
				this._SearchWordHierarchyItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HierarchyItem_HierarchyItem", Storage="_HierarchyItem1", ThisKey="HigherHierarchyItemForRoutingID", OtherKey="HierarchyItemID", IsForeignKey=true)]
		public HierarchyItem HierarchyItem1
		{
			get
			{
				return this._HierarchyItem1.Entity;
			}
			set
			{
				HierarchyItem previousValue = this._HierarchyItem1.Entity;
				if (((previousValue != value) 
							|| (this._HierarchyItem1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HierarchyItem1.Entity = null;
						previousValue.HierarchyItems.Remove(this);
					}
					this._HierarchyItem1.Entity = value;
					if ((value != null))
					{
						value.HierarchyItems.Add(this);
						this._HigherHierarchyItemForRoutingID = value.HierarchyItemID;
					}
					else
					{
						this._HigherHierarchyItemForRoutingID = default(Nullable<int>);
					}
					this.SendPropertyChanged("HierarchyItem1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HierarchyItem_HierarchyItem1", Storage="_HierarchyItem2", ThisKey="HigherHierarchyItemID", OtherKey="HierarchyItemID", IsForeignKey=true)]
		public HierarchyItem HierarchyItem2
		{
			get
			{
				return this._HierarchyItem2.Entity;
			}
			set
			{
				HierarchyItem previousValue = this._HierarchyItem2.Entity;
				if (((previousValue != value) 
							|| (this._HierarchyItem2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HierarchyItem2.Entity = null;
						previousValue.HierarchyItems1.Remove(this);
					}
					this._HierarchyItem2.Entity = value;
					if ((value != null))
					{
						value.HierarchyItems1.Add(this);
						this._HigherHierarchyItemID = value.HierarchyItemID;
					}
					else
					{
						this._HigherHierarchyItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("HierarchyItem2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_HierarchyItem", Storage="_Tbl", ThisKey="TblID", OtherKey="TblID", IsForeignKey=true)]
		public Tbl Tbl
		{
			get
			{
				return this._Tbl.Entity;
			}
			set
			{
				Tbl previousValue = this._Tbl.Entity;
				if (((previousValue != value) 
							|| (this._Tbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl.Entity = null;
						previousValue.HierarchyItems.Remove(this);
					}
					this._Tbl.Entity = value;
					if ((value != null))
					{
						value.HierarchyItems.Add(this);
						this._TblID = value.TblID;
					}
					else
					{
						this._TblID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HierarchyItems(HierarchyItem entity)
		{
			this.SendPropertyChanging();
			entity.HierarchyItem1 = this;
		}
		
		private void detach_HierarchyItems(HierarchyItem entity)
		{
			this.SendPropertyChanging();
			entity.HierarchyItem1 = null;
		}
		
		private void attach_HierarchyItems1(HierarchyItem entity)
		{
			this.SendPropertyChanging();
			entity.HierarchyItem2 = this;
		}
		
		private void detach_HierarchyItems1(HierarchyItem entity)
		{
			this.SendPropertyChanging();
			entity.HierarchyItem2 = null;
		}
		
		private void attach_SearchWordHierarchyItems(SearchWordHierarchyItem entity)
		{
			this.SendPropertyChanging();
			entity.HierarchyItem = this;
		}
		
		private void detach_SearchWordHierarchyItems(SearchWordHierarchyItem entity)
		{
			this.SendPropertyChanging();
			entity.HierarchyItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InsertableContents")]
	public partial class InsertableContent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InsertableContentID;
		
		private string _Name;
		
		private System.Nullable<int> _DomainID;
		
		private System.Nullable<int> _PointsManagerID;
		
		private System.Nullable<int> _TblID;
		
		private string _Content;
		
		private bool _IsTextOnly;
		
		private bool _Overridable;
		
		private short _Location;
		
		private byte _Status;
		
		private EntityRef<Domain> _Domain;
		
		private EntityRef<PointsManager> _PointsManager;
		
		private EntityRef<Tbl> _Tbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInsertableContentIDChanging(int value);
    partial void OnInsertableContentIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDomainIDChanging(System.Nullable<int> value);
    partial void OnDomainIDChanged();
    partial void OnPointsManagerIDChanging(System.Nullable<int> value);
    partial void OnPointsManagerIDChanged();
    partial void OnTblIDChanging(System.Nullable<int> value);
    partial void OnTblIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnIsTextOnlyChanging(bool value);
    partial void OnIsTextOnlyChanged();
    partial void OnOverridableChanging(bool value);
    partial void OnOverridableChanged();
    partial void OnLocationChanging(short value);
    partial void OnLocationChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public InsertableContent()
		{
			this._Domain = default(EntityRef<Domain>);
			this._PointsManager = default(EntityRef<PointsManager>);
			this._Tbl = default(EntityRef<Tbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertableContentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InsertableContentID
		{
			get
			{
				return this._InsertableContentID;
			}
			set
			{
				if ((this._InsertableContentID != value))
				{
					this.OnInsertableContentIDChanging(value);
					this.SendPropertyChanging();
					this._InsertableContentID = value;
					this.SendPropertyChanged("InsertableContentID");
					this.OnInsertableContentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainID", DbType="Int")]
		public System.Nullable<int> DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsManagerID", DbType="Int")]
		public System.Nullable<int> PointsManagerID
		{
			get
			{
				return this._PointsManagerID;
			}
			set
			{
				if ((this._PointsManagerID != value))
				{
					if (this._PointsManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPointsManagerIDChanging(value);
					this.SendPropertyChanging();
					this._PointsManagerID = value;
					this.SendPropertyChanged("PointsManagerID");
					this.OnPointsManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblID", DbType="Int")]
		public System.Nullable<int> TblID
		{
			get
			{
				return this._TblID;
			}
			set
			{
				if ((this._TblID != value))
				{
					if (this._Tbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblIDChanging(value);
					this.SendPropertyChanging();
					this._TblID = value;
					this.SendPropertyChanged("TblID");
					this.OnTblIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTextOnly", DbType="Bit NOT NULL")]
		public bool IsTextOnly
		{
			get
			{
				return this._IsTextOnly;
			}
			set
			{
				if ((this._IsTextOnly != value))
				{
					this.OnIsTextOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsTextOnly = value;
					this.SendPropertyChanged("IsTextOnly");
					this.OnIsTextOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overridable", DbType="Bit NOT NULL")]
		public bool Overridable
		{
			get
			{
				return this._Overridable;
			}
			set
			{
				if ((this._Overridable != value))
				{
					this.OnOverridableChanging(value);
					this.SendPropertyChanging();
					this._Overridable = value;
					this.SendPropertyChanged("Overridable");
					this.OnOverridableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="SmallInt NOT NULL")]
		public short Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Domain_InsertableContent", Storage="_Domain", ThisKey="DomainID", OtherKey="DomainID", IsForeignKey=true)]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.InsertableContents.Remove(this);
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.InsertableContents.Add(this);
						this._DomainID = value.DomainID;
					}
					else
					{
						this._DomainID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_InsertableContent", Storage="_PointsManager", ThisKey="PointsManagerID", OtherKey="PointsManagerID", IsForeignKey=true)]
		public PointsManager PointsManager
		{
			get
			{
				return this._PointsManager.Entity;
			}
			set
			{
				PointsManager previousValue = this._PointsManager.Entity;
				if (((previousValue != value) 
							|| (this._PointsManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PointsManager.Entity = null;
						previousValue.InsertableContents.Remove(this);
					}
					this._PointsManager.Entity = value;
					if ((value != null))
					{
						value.InsertableContents.Add(this);
						this._PointsManagerID = value.PointsManagerID;
					}
					else
					{
						this._PointsManagerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PointsManager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_InsertableContent", Storage="_Tbl", ThisKey="TblID", OtherKey="TblID", IsForeignKey=true)]
		public Tbl Tbl
		{
			get
			{
				return this._Tbl.Entity;
			}
			set
			{
				Tbl previousValue = this._Tbl.Entity;
				if (((previousValue != value) 
							|| (this._Tbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl.Entity = null;
						previousValue.InsertableContents.Remove(this);
					}
					this._Tbl.Entity = value;
					if ((value != null))
					{
						value.InsertableContents.Add(this);
						this._TblID = value.TblID;
					}
					else
					{
						this._TblID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LongProcesses")]
	public partial class LongProcess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LongProcessID;
		
		private int _TypeOfProcess;
		
		private System.Nullable<int> _Object1ID;
		
		private System.Nullable<int> _Object2ID;
		
		private int _Priority;
		
		private System.Data.Linq.Binary _AdditionalInfo;
		
		private System.Nullable<int> _ProgressInfo;
		
		private bool _Started;
		
		private bool _Complete;
		
		private bool _ResetWhenComplete;
		
		private System.Nullable<int> _DelayBeforeRestart;
		
		private System.Nullable<System.DateTime> _EarliestRestart;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLongProcessIDChanging(int value);
    partial void OnLongProcessIDChanged();
    partial void OnTypeOfProcessChanging(int value);
    partial void OnTypeOfProcessChanged();
    partial void OnObject1IDChanging(System.Nullable<int> value);
    partial void OnObject1IDChanged();
    partial void OnObject2IDChanging(System.Nullable<int> value);
    partial void OnObject2IDChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    partial void OnAdditionalInfoChanging(System.Data.Linq.Binary value);
    partial void OnAdditionalInfoChanged();
    partial void OnProgressInfoChanging(System.Nullable<int> value);
    partial void OnProgressInfoChanged();
    partial void OnStartedChanging(bool value);
    partial void OnStartedChanged();
    partial void OnCompleteChanging(bool value);
    partial void OnCompleteChanged();
    partial void OnResetWhenCompleteChanging(bool value);
    partial void OnResetWhenCompleteChanged();
    partial void OnDelayBeforeRestartChanging(System.Nullable<int> value);
    partial void OnDelayBeforeRestartChanged();
    partial void OnEarliestRestartChanging(System.Nullable<System.DateTime> value);
    partial void OnEarliestRestartChanged();
    #endregion
		
		public LongProcess()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongProcessID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LongProcessID
		{
			get
			{
				return this._LongProcessID;
			}
			set
			{
				if ((this._LongProcessID != value))
				{
					this.OnLongProcessIDChanging(value);
					this.SendPropertyChanging();
					this._LongProcessID = value;
					this.SendPropertyChanged("LongProcessID");
					this.OnLongProcessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfProcess", DbType="Int NOT NULL")]
		public int TypeOfProcess
		{
			get
			{
				return this._TypeOfProcess;
			}
			set
			{
				if ((this._TypeOfProcess != value))
				{
					this.OnTypeOfProcessChanging(value);
					this.SendPropertyChanging();
					this._TypeOfProcess = value;
					this.SendPropertyChanged("TypeOfProcess");
					this.OnTypeOfProcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Object1ID", DbType="Int")]
		public System.Nullable<int> Object1ID
		{
			get
			{
				return this._Object1ID;
			}
			set
			{
				if ((this._Object1ID != value))
				{
					this.OnObject1IDChanging(value);
					this.SendPropertyChanging();
					this._Object1ID = value;
					this.SendPropertyChanged("Object1ID");
					this.OnObject1IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Object2ID", DbType="Int")]
		public System.Nullable<int> Object2ID
		{
			get
			{
				return this._Object2ID;
			}
			set
			{
				if ((this._Object2ID != value))
				{
					this.OnObject2IDChanging(value);
					this.SendPropertyChanging();
					this._Object2ID = value;
					this.SendPropertyChanged("Object2ID");
					this.OnObject2IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalInfo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary AdditionalInfo
		{
			get
			{
				return this._AdditionalInfo;
			}
			set
			{
				if ((this._AdditionalInfo != value))
				{
					this.OnAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._AdditionalInfo = value;
					this.SendPropertyChanged("AdditionalInfo");
					this.OnAdditionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgressInfo", DbType="Int")]
		public System.Nullable<int> ProgressInfo
		{
			get
			{
				return this._ProgressInfo;
			}
			set
			{
				if ((this._ProgressInfo != value))
				{
					this.OnProgressInfoChanging(value);
					this.SendPropertyChanging();
					this._ProgressInfo = value;
					this.SendPropertyChanged("ProgressInfo");
					this.OnProgressInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="Bit NOT NULL")]
		public bool Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this.OnStartedChanging(value);
					this.SendPropertyChanging();
					this._Started = value;
					this.SendPropertyChanged("Started");
					this.OnStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complete", DbType="Bit NOT NULL")]
		public bool Complete
		{
			get
			{
				return this._Complete;
			}
			set
			{
				if ((this._Complete != value))
				{
					this.OnCompleteChanging(value);
					this.SendPropertyChanging();
					this._Complete = value;
					this.SendPropertyChanged("Complete");
					this.OnCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResetWhenComplete", DbType="Bit NOT NULL")]
		public bool ResetWhenComplete
		{
			get
			{
				return this._ResetWhenComplete;
			}
			set
			{
				if ((this._ResetWhenComplete != value))
				{
					this.OnResetWhenCompleteChanging(value);
					this.SendPropertyChanging();
					this._ResetWhenComplete = value;
					this.SendPropertyChanged("ResetWhenComplete");
					this.OnResetWhenCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelayBeforeRestart", DbType="Int")]
		public System.Nullable<int> DelayBeforeRestart
		{
			get
			{
				return this._DelayBeforeRestart;
			}
			set
			{
				if ((this._DelayBeforeRestart != value))
				{
					this.OnDelayBeforeRestartChanging(value);
					this.SendPropertyChanging();
					this._DelayBeforeRestart = value;
					this.SendPropertyChanged("DelayBeforeRestart");
					this.OnDelayBeforeRestartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarliestRestart", DbType="DateTime")]
		public System.Nullable<System.DateTime> EarliestRestart
		{
			get
			{
				return this._EarliestRestart;
			}
			set
			{
				if ((this._EarliestRestart != value))
				{
					this.OnEarliestRestartChanging(value);
					this.SendPropertyChanging();
					this._EarliestRestart = value;
					this.SendPropertyChanged("EarliestRestart");
					this.OnEarliestRestartChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NumberFieldDefinitions")]
	public partial class NumberFieldDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NumberFieldDefinitionID;
		
		private int _FieldDefinitionID;
		
		private System.Nullable<decimal> _Minimum;
		
		private System.Nullable<decimal> _Maximum;
		
		private byte _DecimalPlaces;
		
		private byte _Status;
		
		private EntityRef<FieldDefinition> _FieldDefinition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumberFieldDefinitionIDChanging(int value);
    partial void OnNumberFieldDefinitionIDChanged();
    partial void OnFieldDefinitionIDChanging(int value);
    partial void OnFieldDefinitionIDChanged();
    partial void OnMinimumChanging(System.Nullable<decimal> value);
    partial void OnMinimumChanged();
    partial void OnMaximumChanging(System.Nullable<decimal> value);
    partial void OnMaximumChanged();
    partial void OnDecimalPlacesChanging(byte value);
    partial void OnDecimalPlacesChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public NumberFieldDefinition()
		{
			this._FieldDefinition = default(EntityRef<FieldDefinition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberFieldDefinitionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NumberFieldDefinitionID
		{
			get
			{
				return this._NumberFieldDefinitionID;
			}
			set
			{
				if ((this._NumberFieldDefinitionID != value))
				{
					this.OnNumberFieldDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._NumberFieldDefinitionID = value;
					this.SendPropertyChanged("NumberFieldDefinitionID");
					this.OnNumberFieldDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldDefinitionID", DbType="Int NOT NULL")]
		public int FieldDefinitionID
		{
			get
			{
				return this._FieldDefinitionID;
			}
			set
			{
				if ((this._FieldDefinitionID != value))
				{
					if (this._FieldDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFieldDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._FieldDefinitionID = value;
					this.SendPropertyChanged("FieldDefinitionID");
					this.OnFieldDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Minimum", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Minimum
		{
			get
			{
				return this._Minimum;
			}
			set
			{
				if ((this._Minimum != value))
				{
					this.OnMinimumChanging(value);
					this.SendPropertyChanging();
					this._Minimum = value;
					this.SendPropertyChanged("Minimum");
					this.OnMinimumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maximum", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Maximum
		{
			get
			{
				return this._Maximum;
			}
			set
			{
				if ((this._Maximum != value))
				{
					this.OnMaximumChanging(value);
					this.SendPropertyChanging();
					this._Maximum = value;
					this.SendPropertyChanged("Maximum");
					this.OnMaximumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecimalPlaces", DbType="TinyInt NOT NULL")]
		public byte DecimalPlaces
		{
			get
			{
				return this._DecimalPlaces;
			}
			set
			{
				if ((this._DecimalPlaces != value))
				{
					this.OnDecimalPlacesChanging(value);
					this.SendPropertyChanging();
					this._DecimalPlaces = value;
					this.SendPropertyChanged("DecimalPlaces");
					this.OnDecimalPlacesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FieldDefinition_NumberFieldDefinition", Storage="_FieldDefinition", ThisKey="FieldDefinitionID", OtherKey="FieldDefinitionID", IsForeignKey=true)]
		public FieldDefinition FieldDefinition
		{
			get
			{
				return this._FieldDefinition.Entity;
			}
			set
			{
				FieldDefinition previousValue = this._FieldDefinition.Entity;
				if (((previousValue != value) 
							|| (this._FieldDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FieldDefinition.Entity = null;
						previousValue.NumberFieldDefinitions.Remove(this);
					}
					this._FieldDefinition.Entity = value;
					if ((value != null))
					{
						value.NumberFieldDefinitions.Add(this);
						this._FieldDefinitionID = value.FieldDefinitionID;
					}
					else
					{
						this._FieldDefinitionID = default(int);
					}
					this.SendPropertyChanged("FieldDefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NumberFields")]
	public partial class NumberField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NumberFieldID;
		
		private int _FieldID;
		
		private System.Nullable<decimal> _Number;
		
		private byte _Status;
		
		private EntityRef<Field> _Field;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumberFieldIDChanging(int value);
    partial void OnNumberFieldIDChanged();
    partial void OnFieldIDChanging(int value);
    partial void OnFieldIDChanged();
    partial void OnNumberChanging(System.Nullable<decimal> value);
    partial void OnNumberChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public NumberField()
		{
			this._Field = default(EntityRef<Field>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberFieldID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NumberFieldID
		{
			get
			{
				return this._NumberFieldID;
			}
			set
			{
				if ((this._NumberFieldID != value))
				{
					this.OnNumberFieldIDChanging(value);
					this.SendPropertyChanging();
					this._NumberFieldID = value;
					this.SendPropertyChanged("NumberFieldID");
					this.OnNumberFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldID", DbType="Int NOT NULL")]
		public int FieldID
		{
			get
			{
				return this._FieldID;
			}
			set
			{
				if ((this._FieldID != value))
				{
					if (this._Field.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFieldIDChanging(value);
					this.SendPropertyChanging();
					this._FieldID = value;
					this.SendPropertyChanged("FieldID");
					this.OnFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Field_NumberField", Storage="_Field", ThisKey="FieldID", OtherKey="FieldID", IsForeignKey=true)]
		public Field Field
		{
			get
			{
				return this._Field.Entity;
			}
			set
			{
				Field previousValue = this._Field.Entity;
				if (((previousValue != value) 
							|| (this._Field.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Field.Entity = null;
						previousValue.NumberFields.Remove(this);
					}
					this._Field.Entity = value;
					if ((value != null))
					{
						value.NumberFields.Add(this);
						this._FieldID = value.FieldID;
					}
					else
					{
						this._FieldID = default(int);
					}
					this.SendPropertyChanged("Field");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OverrideCharacteristics")]
	public partial class OverrideCharacteristic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OverrideCharacteristicsID;
		
		private int _RatingGroupAttributesID;
		
		private int _TblRowID;
		
		private int _TblColumnID;
		
		private byte _Status;
		
		private EntityRef<RatingGroupAttribute> _RatingGroupAttribute;
		
		private EntityRef<TblRow> _TblRow;
		
		private EntityRef<TblColumn> _TblColumn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOverrideCharacteristicsIDChanging(int value);
    partial void OnOverrideCharacteristicsIDChanged();
    partial void OnRatingGroupAttributesIDChanging(int value);
    partial void OnRatingGroupAttributesIDChanged();
    partial void OnTblRowIDChanging(int value);
    partial void OnTblRowIDChanged();
    partial void OnTblColumnIDChanging(int value);
    partial void OnTblColumnIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public OverrideCharacteristic()
		{
			this._RatingGroupAttribute = default(EntityRef<RatingGroupAttribute>);
			this._TblRow = default(EntityRef<TblRow>);
			this._TblColumn = default(EntityRef<TblColumn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideCharacteristicsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OverrideCharacteristicsID
		{
			get
			{
				return this._OverrideCharacteristicsID;
			}
			set
			{
				if ((this._OverrideCharacteristicsID != value))
				{
					this.OnOverrideCharacteristicsIDChanging(value);
					this.SendPropertyChanging();
					this._OverrideCharacteristicsID = value;
					this.SendPropertyChanged("OverrideCharacteristicsID");
					this.OnOverrideCharacteristicsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingGroupAttributesID", DbType="Int NOT NULL")]
		public int RatingGroupAttributesID
		{
			get
			{
				return this._RatingGroupAttributesID;
			}
			set
			{
				if ((this._RatingGroupAttributesID != value))
				{
					if (this._RatingGroupAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingGroupAttributesIDChanging(value);
					this.SendPropertyChanging();
					this._RatingGroupAttributesID = value;
					this.SendPropertyChanged("RatingGroupAttributesID");
					this.OnRatingGroupAttributesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblRowID", DbType="Int NOT NULL")]
		public int TblRowID
		{
			get
			{
				return this._TblRowID;
			}
			set
			{
				if ((this._TblRowID != value))
				{
					if (this._TblRow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblRowIDChanging(value);
					this.SendPropertyChanging();
					this._TblRowID = value;
					this.SendPropertyChanged("TblRowID");
					this.OnTblRowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblColumnID", DbType="Int NOT NULL")]
		public int TblColumnID
		{
			get
			{
				return this._TblColumnID;
			}
			set
			{
				if ((this._TblColumnID != value))
				{
					if (this._TblColumn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblColumnIDChanging(value);
					this.SendPropertyChanging();
					this._TblColumnID = value;
					this.SendPropertyChanged("TblColumnID");
					this.OnTblColumnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroupAttribute_OverrideCharacteristic", Storage="_RatingGroupAttribute", ThisKey="RatingGroupAttributesID", OtherKey="RatingGroupAttributesID", IsForeignKey=true)]
		public RatingGroupAttribute RatingGroupAttribute
		{
			get
			{
				return this._RatingGroupAttribute.Entity;
			}
			set
			{
				RatingGroupAttribute previousValue = this._RatingGroupAttribute.Entity;
				if (((previousValue != value) 
							|| (this._RatingGroupAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingGroupAttribute.Entity = null;
						previousValue.OverrideCharacteristics.Remove(this);
					}
					this._RatingGroupAttribute.Entity = value;
					if ((value != null))
					{
						value.OverrideCharacteristics.Add(this);
						this._RatingGroupAttributesID = value.RatingGroupAttributesID;
					}
					else
					{
						this._RatingGroupAttributesID = default(int);
					}
					this.SendPropertyChanged("RatingGroupAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblRow_OverrideCharacteristic", Storage="_TblRow", ThisKey="TblRowID", OtherKey="TblRowID", IsForeignKey=true)]
		public TblRow TblRow
		{
			get
			{
				return this._TblRow.Entity;
			}
			set
			{
				TblRow previousValue = this._TblRow.Entity;
				if (((previousValue != value) 
							|| (this._TblRow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblRow.Entity = null;
						previousValue.OverrideCharacteristics.Remove(this);
					}
					this._TblRow.Entity = value;
					if ((value != null))
					{
						value.OverrideCharacteristics.Add(this);
						this._TblRowID = value.TblRowID;
					}
					else
					{
						this._TblRowID = default(int);
					}
					this.SendPropertyChanged("TblRow");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblColumn_OverrideCharacteristic", Storage="_TblColumn", ThisKey="TblColumnID", OtherKey="TblColumnID", IsForeignKey=true)]
		public TblColumn TblColumn
		{
			get
			{
				return this._TblColumn.Entity;
			}
			set
			{
				TblColumn previousValue = this._TblColumn.Entity;
				if (((previousValue != value) 
							|| (this._TblColumn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblColumn.Entity = null;
						previousValue.OverrideCharacteristics.Remove(this);
					}
					this._TblColumn.Entity = value;
					if ((value != null))
					{
						value.OverrideCharacteristics.Add(this);
						this._TblColumnID = value.TblColumnID;
					}
					else
					{
						this._TblColumnID = default(int);
					}
					this.SendPropertyChanged("TblColumn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PointsAdjustments")]
	public partial class PointsAdjustment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PointsAdjustmentID;
		
		private int _UserID;
		
		private int _PointsManagerID;
		
		private int _Reason;
		
		private decimal _TotalAdjustment;
		
		private decimal _CurrentAdjustment;
		
		private System.Nullable<decimal> _CashValue;
		
		private System.DateTime _WhenMade;
		
		private byte _Status;
		
		private EntityRef<User> _User;
		
		private EntityRef<PointsManager> _PointsManager;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPointsAdjustmentIDChanging(int value);
    partial void OnPointsAdjustmentIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnPointsManagerIDChanging(int value);
    partial void OnPointsManagerIDChanged();
    partial void OnReasonChanging(int value);
    partial void OnReasonChanged();
    partial void OnTotalAdjustmentChanging(decimal value);
    partial void OnTotalAdjustmentChanged();
    partial void OnCurrentAdjustmentChanging(decimal value);
    partial void OnCurrentAdjustmentChanged();
    partial void OnCashValueChanging(System.Nullable<decimal> value);
    partial void OnCashValueChanged();
    partial void OnWhenMadeChanging(System.DateTime value);
    partial void OnWhenMadeChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public PointsAdjustment()
		{
			this._User = default(EntityRef<User>);
			this._PointsManager = default(EntityRef<PointsManager>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsAdjustmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PointsAdjustmentID
		{
			get
			{
				return this._PointsAdjustmentID;
			}
			set
			{
				if ((this._PointsAdjustmentID != value))
				{
					this.OnPointsAdjustmentIDChanging(value);
					this.SendPropertyChanging();
					this._PointsAdjustmentID = value;
					this.SendPropertyChanged("PointsAdjustmentID");
					this.OnPointsAdjustmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsManagerID", DbType="Int NOT NULL")]
		public int PointsManagerID
		{
			get
			{
				return this._PointsManagerID;
			}
			set
			{
				if ((this._PointsManagerID != value))
				{
					if (this._PointsManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPointsManagerIDChanging(value);
					this.SendPropertyChanging();
					this._PointsManagerID = value;
					this.SendPropertyChanged("PointsManagerID");
					this.OnPointsManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="Int NOT NULL")]
		public int Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAdjustment", DbType="Decimal(18,4) NOT NULL")]
		public decimal TotalAdjustment
		{
			get
			{
				return this._TotalAdjustment;
			}
			set
			{
				if ((this._TotalAdjustment != value))
				{
					this.OnTotalAdjustmentChanging(value);
					this.SendPropertyChanging();
					this._TotalAdjustment = value;
					this.SendPropertyChanged("TotalAdjustment");
					this.OnTotalAdjustmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentAdjustment", DbType="Decimal(18,4) NOT NULL")]
		public decimal CurrentAdjustment
		{
			get
			{
				return this._CurrentAdjustment;
			}
			set
			{
				if ((this._CurrentAdjustment != value))
				{
					this.OnCurrentAdjustmentChanging(value);
					this.SendPropertyChanging();
					this._CurrentAdjustment = value;
					this.SendPropertyChanged("CurrentAdjustment");
					this.OnCurrentAdjustmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CashValue
		{
			get
			{
				return this._CashValue;
			}
			set
			{
				if ((this._CashValue != value))
				{
					this.OnCashValueChanging(value);
					this.SendPropertyChanging();
					this._CashValue = value;
					this.SendPropertyChanged("CashValue");
					this.OnCashValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhenMade", DbType="DateTime NOT NULL")]
		public System.DateTime WhenMade
		{
			get
			{
				return this._WhenMade;
			}
			set
			{
				if ((this._WhenMade != value))
				{
					this.OnWhenMadeChanging(value);
					this.SendPropertyChanging();
					this._WhenMade = value;
					this.SendPropertyChanged("WhenMade");
					this.OnWhenMadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PointsAdjustment", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PointsAdjustments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PointsAdjustments.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_PointsAdjustment", Storage="_PointsManager", ThisKey="PointsManagerID", OtherKey="PointsManagerID", IsForeignKey=true)]
		public PointsManager PointsManager
		{
			get
			{
				return this._PointsManager.Entity;
			}
			set
			{
				PointsManager previousValue = this._PointsManager.Entity;
				if (((previousValue != value) 
							|| (this._PointsManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PointsManager.Entity = null;
						previousValue.PointsAdjustments.Remove(this);
					}
					this._PointsManager.Entity = value;
					if ((value != null))
					{
						value.PointsAdjustments.Add(this);
						this._PointsManagerID = value.PointsManagerID;
					}
					else
					{
						this._PointsManagerID = default(int);
					}
					this.SendPropertyChanged("PointsManager");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProposalEvaluationRatingSettings")]
	public partial class ProposalEvaluationRatingSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProposalEvaluationRatingSettingsID;
		
		private System.Nullable<int> _PointsManagerID;
		
		private System.Nullable<int> _UserActionID;
		
		private int _RatingGroupAttributesID;
		
		private decimal _MinValueToApprove;
		
		private decimal _MaxValueToReject;
		
		private int _TimeRequiredBeyondThreshold;
		
		private decimal _MinProportionOfThisTime;
		
		private int _HalfLifeForResolvingAtFinalValue;
		
		private string _Name;
		
		private System.Nullable<int> _Creator;
		
		private byte _Status;
		
		private EntityRef<UserAction> _UserAction;
		
		private EntityRef<PointsManager> _PointsManager;
		
		private EntityRef<RatingGroupAttribute> _RatingGroupAttribute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProposalEvaluationRatingSettingsIDChanging(int value);
    partial void OnProposalEvaluationRatingSettingsIDChanged();
    partial void OnPointsManagerIDChanging(System.Nullable<int> value);
    partial void OnPointsManagerIDChanged();
    partial void OnUserActionIDChanging(System.Nullable<int> value);
    partial void OnUserActionIDChanged();
    partial void OnRatingGroupAttributesIDChanging(int value);
    partial void OnRatingGroupAttributesIDChanged();
    partial void OnMinValueToApproveChanging(decimal value);
    partial void OnMinValueToApproveChanged();
    partial void OnMaxValueToRejectChanging(decimal value);
    partial void OnMaxValueToRejectChanged();
    partial void OnTimeRequiredBeyondThresholdChanging(int value);
    partial void OnTimeRequiredBeyondThresholdChanged();
    partial void OnMinProportionOfThisTimeChanging(decimal value);
    partial void OnMinProportionOfThisTimeChanged();
    partial void OnHalfLifeForResolvingAtFinalValueChanging(int value);
    partial void OnHalfLifeForResolvingAtFinalValueChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public ProposalEvaluationRatingSetting()
		{
			this._UserAction = default(EntityRef<UserAction>);
			this._PointsManager = default(EntityRef<PointsManager>);
			this._RatingGroupAttribute = default(EntityRef<RatingGroupAttribute>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposalEvaluationRatingSettingsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProposalEvaluationRatingSettingsID
		{
			get
			{
				return this._ProposalEvaluationRatingSettingsID;
			}
			set
			{
				if ((this._ProposalEvaluationRatingSettingsID != value))
				{
					this.OnProposalEvaluationRatingSettingsIDChanging(value);
					this.SendPropertyChanging();
					this._ProposalEvaluationRatingSettingsID = value;
					this.SendPropertyChanged("ProposalEvaluationRatingSettingsID");
					this.OnProposalEvaluationRatingSettingsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsManagerID", DbType="Int")]
		public System.Nullable<int> PointsManagerID
		{
			get
			{
				return this._PointsManagerID;
			}
			set
			{
				if ((this._PointsManagerID != value))
				{
					if (this._PointsManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPointsManagerIDChanging(value);
					this.SendPropertyChanging();
					this._PointsManagerID = value;
					this.SendPropertyChanged("PointsManagerID");
					this.OnPointsManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserActionID", DbType="Int")]
		public System.Nullable<int> UserActionID
		{
			get
			{
				return this._UserActionID;
			}
			set
			{
				if ((this._UserActionID != value))
				{
					if (this._UserAction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserActionIDChanging(value);
					this.SendPropertyChanging();
					this._UserActionID = value;
					this.SendPropertyChanged("UserActionID");
					this.OnUserActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingGroupAttributesID", DbType="Int NOT NULL")]
		public int RatingGroupAttributesID
		{
			get
			{
				return this._RatingGroupAttributesID;
			}
			set
			{
				if ((this._RatingGroupAttributesID != value))
				{
					if (this._RatingGroupAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingGroupAttributesIDChanging(value);
					this.SendPropertyChanging();
					this._RatingGroupAttributesID = value;
					this.SendPropertyChanged("RatingGroupAttributesID");
					this.OnRatingGroupAttributesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinValueToApprove", DbType="Decimal(18,4) NOT NULL")]
		public decimal MinValueToApprove
		{
			get
			{
				return this._MinValueToApprove;
			}
			set
			{
				if ((this._MinValueToApprove != value))
				{
					this.OnMinValueToApproveChanging(value);
					this.SendPropertyChanging();
					this._MinValueToApprove = value;
					this.SendPropertyChanged("MinValueToApprove");
					this.OnMinValueToApproveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxValueToReject", DbType="Decimal(18,4) NOT NULL")]
		public decimal MaxValueToReject
		{
			get
			{
				return this._MaxValueToReject;
			}
			set
			{
				if ((this._MaxValueToReject != value))
				{
					this.OnMaxValueToRejectChanging(value);
					this.SendPropertyChanging();
					this._MaxValueToReject = value;
					this.SendPropertyChanged("MaxValueToReject");
					this.OnMaxValueToRejectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeRequiredBeyondThreshold", DbType="Int NOT NULL")]
		public int TimeRequiredBeyondThreshold
		{
			get
			{
				return this._TimeRequiredBeyondThreshold;
			}
			set
			{
				if ((this._TimeRequiredBeyondThreshold != value))
				{
					this.OnTimeRequiredBeyondThresholdChanging(value);
					this.SendPropertyChanging();
					this._TimeRequiredBeyondThreshold = value;
					this.SendPropertyChanged("TimeRequiredBeyondThreshold");
					this.OnTimeRequiredBeyondThresholdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinProportionOfThisTime", DbType="Decimal(18,4) NOT NULL")]
		public decimal MinProportionOfThisTime
		{
			get
			{
				return this._MinProportionOfThisTime;
			}
			set
			{
				if ((this._MinProportionOfThisTime != value))
				{
					this.OnMinProportionOfThisTimeChanging(value);
					this.SendPropertyChanging();
					this._MinProportionOfThisTime = value;
					this.SendPropertyChanged("MinProportionOfThisTime");
					this.OnMinProportionOfThisTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HalfLifeForResolvingAtFinalValue", DbType="Int NOT NULL")]
		public int HalfLifeForResolvingAtFinalValue
		{
			get
			{
				return this._HalfLifeForResolvingAtFinalValue;
			}
			set
			{
				if ((this._HalfLifeForResolvingAtFinalValue != value))
				{
					this.OnHalfLifeForResolvingAtFinalValueChanging(value);
					this.SendPropertyChanging();
					this._HalfLifeForResolvingAtFinalValue = value;
					this.SendPropertyChanged("HalfLifeForResolvingAtFinalValue");
					this.OnHalfLifeForResolvingAtFinalValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAction_ProposalEvaluationRatingSetting", Storage="_UserAction", ThisKey="UserActionID", OtherKey="UserActionID", IsForeignKey=true)]
		public UserAction UserAction
		{
			get
			{
				return this._UserAction.Entity;
			}
			set
			{
				UserAction previousValue = this._UserAction.Entity;
				if (((previousValue != value) 
							|| (this._UserAction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAction.Entity = null;
						previousValue.ProposalEvaluationRatingSettings.Remove(this);
					}
					this._UserAction.Entity = value;
					if ((value != null))
					{
						value.ProposalEvaluationRatingSettings.Add(this);
						this._UserActionID = value.UserActionID;
					}
					else
					{
						this._UserActionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserAction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_ProposalEvaluationRatingSetting", Storage="_PointsManager", ThisKey="PointsManagerID", OtherKey="PointsManagerID", IsForeignKey=true)]
		public PointsManager PointsManager
		{
			get
			{
				return this._PointsManager.Entity;
			}
			set
			{
				PointsManager previousValue = this._PointsManager.Entity;
				if (((previousValue != value) 
							|| (this._PointsManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PointsManager.Entity = null;
						previousValue.ProposalEvaluationRatingSettings.Remove(this);
					}
					this._PointsManager.Entity = value;
					if ((value != null))
					{
						value.ProposalEvaluationRatingSettings.Add(this);
						this._PointsManagerID = value.PointsManagerID;
					}
					else
					{
						this._PointsManagerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PointsManager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroupAttribute_ProposalEvaluationRatingSetting", Storage="_RatingGroupAttribute", ThisKey="RatingGroupAttributesID", OtherKey="RatingGroupAttributesID", IsForeignKey=true)]
		public RatingGroupAttribute RatingGroupAttribute
		{
			get
			{
				return this._RatingGroupAttribute.Entity;
			}
			set
			{
				RatingGroupAttribute previousValue = this._RatingGroupAttribute.Entity;
				if (((previousValue != value) 
							|| (this._RatingGroupAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingGroupAttribute.Entity = null;
						previousValue.ProposalEvaluationRatingSettings.Remove(this);
					}
					this._RatingGroupAttribute.Entity = value;
					if ((value != null))
					{
						value.ProposalEvaluationRatingSettings.Add(this);
						this._RatingGroupAttributesID = value.RatingGroupAttributesID;
					}
					else
					{
						this._RatingGroupAttributesID = default(int);
					}
					this.SendPropertyChanged("RatingGroupAttribute");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RatingCharacteristics")]
	public partial class RatingCharacteristic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RatingCharacteristicsID;
		
		private int _RatingPhaseGroupID;
		
		private System.Nullable<int> _SubsidyDensityRangeGroupID;
		
		private decimal _MinimumUserRating;
		
		private decimal _MaximumUserRating;
		
		private byte _DecimalPlaces;
		
		private string _Name;
		
		private System.Nullable<int> _Creator;
		
		private byte _Status;
		
		private EntitySet<Rating> _Ratings;
		
		private EntitySet<RatingGroupAttribute> _RatingGroupAttributes;
		
		private EntityRef<RatingPhaseGroup> _RatingPhaseGroup;
		
		private EntityRef<SubsidyDensityRangeGroup> _SubsidyDensityRangeGroup;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatingCharacteristicsIDChanging(int value);
    partial void OnRatingCharacteristicsIDChanged();
    partial void OnRatingPhaseGroupIDChanging(int value);
    partial void OnRatingPhaseGroupIDChanged();
    partial void OnSubsidyDensityRangeGroupIDChanging(System.Nullable<int> value);
    partial void OnSubsidyDensityRangeGroupIDChanged();
    partial void OnMinimumUserRatingChanging(decimal value);
    partial void OnMinimumUserRatingChanged();
    partial void OnMaximumUserRatingChanging(decimal value);
    partial void OnMaximumUserRatingChanged();
    partial void OnDecimalPlacesChanging(byte value);
    partial void OnDecimalPlacesChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public RatingCharacteristic()
		{
			this._Ratings = new EntitySet<Rating>(new Action<Rating>(this.attach_Ratings), new Action<Rating>(this.detach_Ratings));
			this._RatingGroupAttributes = new EntitySet<RatingGroupAttribute>(new Action<RatingGroupAttribute>(this.attach_RatingGroupAttributes), new Action<RatingGroupAttribute>(this.detach_RatingGroupAttributes));
			this._RatingPhaseGroup = default(EntityRef<RatingPhaseGroup>);
			this._SubsidyDensityRangeGroup = default(EntityRef<SubsidyDensityRangeGroup>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingCharacteristicsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RatingCharacteristicsID
		{
			get
			{
				return this._RatingCharacteristicsID;
			}
			set
			{
				if ((this._RatingCharacteristicsID != value))
				{
					this.OnRatingCharacteristicsIDChanging(value);
					this.SendPropertyChanging();
					this._RatingCharacteristicsID = value;
					this.SendPropertyChanged("RatingCharacteristicsID");
					this.OnRatingCharacteristicsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingPhaseGroupID", DbType="Int NOT NULL")]
		public int RatingPhaseGroupID
		{
			get
			{
				return this._RatingPhaseGroupID;
			}
			set
			{
				if ((this._RatingPhaseGroupID != value))
				{
					if (this._RatingPhaseGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingPhaseGroupIDChanging(value);
					this.SendPropertyChanging();
					this._RatingPhaseGroupID = value;
					this.SendPropertyChanged("RatingPhaseGroupID");
					this.OnRatingPhaseGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubsidyDensityRangeGroupID", DbType="Int")]
		public System.Nullable<int> SubsidyDensityRangeGroupID
		{
			get
			{
				return this._SubsidyDensityRangeGroupID;
			}
			set
			{
				if ((this._SubsidyDensityRangeGroupID != value))
				{
					if (this._SubsidyDensityRangeGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubsidyDensityRangeGroupIDChanging(value);
					this.SendPropertyChanging();
					this._SubsidyDensityRangeGroupID = value;
					this.SendPropertyChanged("SubsidyDensityRangeGroupID");
					this.OnSubsidyDensityRangeGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumUserRating", DbType="Decimal(18,4) NOT NULL")]
		public decimal MinimumUserRating
		{
			get
			{
				return this._MinimumUserRating;
			}
			set
			{
				if ((this._MinimumUserRating != value))
				{
					this.OnMinimumUserRatingChanging(value);
					this.SendPropertyChanging();
					this._MinimumUserRating = value;
					this.SendPropertyChanged("MinimumUserRating");
					this.OnMinimumUserRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumUserRating", DbType="Decimal(18,4) NOT NULL")]
		public decimal MaximumUserRating
		{
			get
			{
				return this._MaximumUserRating;
			}
			set
			{
				if ((this._MaximumUserRating != value))
				{
					this.OnMaximumUserRatingChanging(value);
					this.SendPropertyChanging();
					this._MaximumUserRating = value;
					this.SendPropertyChanged("MaximumUserRating");
					this.OnMaximumUserRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecimalPlaces", DbType="TinyInt NOT NULL")]
		public byte DecimalPlaces
		{
			get
			{
				return this._DecimalPlaces;
			}
			set
			{
				if ((this._DecimalPlaces != value))
				{
					this.OnDecimalPlacesChanging(value);
					this.SendPropertyChanging();
					this._DecimalPlaces = value;
					this.SendPropertyChanged("DecimalPlaces");
					this.OnDecimalPlacesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingCharacteristic_Rating", Storage="_Ratings", ThisKey="RatingCharacteristicsID", OtherKey="RatingCharacteristicsID")]
		public EntitySet<Rating> Ratings
		{
			get
			{
				return this._Ratings;
			}
			set
			{
				this._Ratings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingCharacteristic_RatingGroupAttribute", Storage="_RatingGroupAttributes", ThisKey="RatingCharacteristicsID", OtherKey="RatingCharacteristicsID")]
		public EntitySet<RatingGroupAttribute> RatingGroupAttributes
		{
			get
			{
				return this._RatingGroupAttributes;
			}
			set
			{
				this._RatingGroupAttributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingPhaseGroup_RatingCharacteristic", Storage="_RatingPhaseGroup", ThisKey="RatingPhaseGroupID", OtherKey="RatingPhaseGroupID", IsForeignKey=true)]
		public RatingPhaseGroup RatingPhaseGroup
		{
			get
			{
				return this._RatingPhaseGroup.Entity;
			}
			set
			{
				RatingPhaseGroup previousValue = this._RatingPhaseGroup.Entity;
				if (((previousValue != value) 
							|| (this._RatingPhaseGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingPhaseGroup.Entity = null;
						previousValue.RatingCharacteristics.Remove(this);
					}
					this._RatingPhaseGroup.Entity = value;
					if ((value != null))
					{
						value.RatingCharacteristics.Add(this);
						this._RatingPhaseGroupID = value.RatingPhaseGroupID;
					}
					else
					{
						this._RatingPhaseGroupID = default(int);
					}
					this.SendPropertyChanged("RatingPhaseGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubsidyDensityRangeGroup_RatingCharacteristic", Storage="_SubsidyDensityRangeGroup", ThisKey="SubsidyDensityRangeGroupID", OtherKey="SubsidyDensityRangeGroupID", IsForeignKey=true)]
		public SubsidyDensityRangeGroup SubsidyDensityRangeGroup
		{
			get
			{
				return this._SubsidyDensityRangeGroup.Entity;
			}
			set
			{
				SubsidyDensityRangeGroup previousValue = this._SubsidyDensityRangeGroup.Entity;
				if (((previousValue != value) 
							|| (this._SubsidyDensityRangeGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubsidyDensityRangeGroup.Entity = null;
						previousValue.RatingCharacteristics.Remove(this);
					}
					this._SubsidyDensityRangeGroup.Entity = value;
					if ((value != null))
					{
						value.RatingCharacteristics.Add(this);
						this._SubsidyDensityRangeGroupID = value.SubsidyDensityRangeGroupID;
					}
					else
					{
						this._SubsidyDensityRangeGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SubsidyDensityRangeGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RatingCharacteristic", Storage="_User", ThisKey="Creator", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.RatingCharacteristics.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.RatingCharacteristics.Add(this);
						this._Creator = value.UserID;
					}
					else
					{
						this._Creator = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.RatingCharacteristic = this;
		}
		
		private void detach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.RatingCharacteristic = null;
		}
		
		private void attach_RatingGroupAttributes(RatingGroupAttribute entity)
		{
			this.SendPropertyChanging();
			entity.RatingCharacteristic = this;
		}
		
		private void detach_RatingGroupAttributes(RatingGroupAttribute entity)
		{
			this.SendPropertyChanging();
			entity.RatingCharacteristic = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RatingGroupResolutions")]
	public partial class RatingGroupResolution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RatingGroupResolutionID;
		
		private int _RatingGroupID;
		
		private bool _CancelPreviousResolutions;
		
		private bool _ResolveByUnwinding;
		
		private System.DateTime _EffectiveTime;
		
		private System.Nullable<System.DateTime> _ExecutionTime;
		
		private System.Nullable<int> _Creator;
		
		private byte _Status;
		
		private EntityRef<User> _User;
		
		private EntityRef<RatingGroup> _RatingGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatingGroupResolutionIDChanging(int value);
    partial void OnRatingGroupResolutionIDChanged();
    partial void OnRatingGroupIDChanging(int value);
    partial void OnRatingGroupIDChanged();
    partial void OnCancelPreviousResolutionsChanging(bool value);
    partial void OnCancelPreviousResolutionsChanged();
    partial void OnResolveByUnwindingChanging(bool value);
    partial void OnResolveByUnwindingChanged();
    partial void OnEffectiveTimeChanging(System.DateTime value);
    partial void OnEffectiveTimeChanged();
    partial void OnExecutionTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnExecutionTimeChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public RatingGroupResolution()
		{
			this._User = default(EntityRef<User>);
			this._RatingGroup = default(EntityRef<RatingGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingGroupResolutionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RatingGroupResolutionID
		{
			get
			{
				return this._RatingGroupResolutionID;
			}
			set
			{
				if ((this._RatingGroupResolutionID != value))
				{
					this.OnRatingGroupResolutionIDChanging(value);
					this.SendPropertyChanging();
					this._RatingGroupResolutionID = value;
					this.SendPropertyChanged("RatingGroupResolutionID");
					this.OnRatingGroupResolutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingGroupID", DbType="Int NOT NULL")]
		public int RatingGroupID
		{
			get
			{
				return this._RatingGroupID;
			}
			set
			{
				if ((this._RatingGroupID != value))
				{
					if (this._RatingGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingGroupIDChanging(value);
					this.SendPropertyChanging();
					this._RatingGroupID = value;
					this.SendPropertyChanged("RatingGroupID");
					this.OnRatingGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelPreviousResolutions", DbType="Bit NOT NULL")]
		public bool CancelPreviousResolutions
		{
			get
			{
				return this._CancelPreviousResolutions;
			}
			set
			{
				if ((this._CancelPreviousResolutions != value))
				{
					this.OnCancelPreviousResolutionsChanging(value);
					this.SendPropertyChanging();
					this._CancelPreviousResolutions = value;
					this.SendPropertyChanged("CancelPreviousResolutions");
					this.OnCancelPreviousResolutionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolveByUnwinding", DbType="Bit NOT NULL")]
		public bool ResolveByUnwinding
		{
			get
			{
				return this._ResolveByUnwinding;
			}
			set
			{
				if ((this._ResolveByUnwinding != value))
				{
					this.OnResolveByUnwindingChanging(value);
					this.SendPropertyChanging();
					this._ResolveByUnwinding = value;
					this.SendPropertyChanged("ResolveByUnwinding");
					this.OnResolveByUnwindingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveTime", DbType="DateTime NOT NULL")]
		public System.DateTime EffectiveTime
		{
			get
			{
				return this._EffectiveTime;
			}
			set
			{
				if ((this._EffectiveTime != value))
				{
					this.OnEffectiveTimeChanging(value);
					this.SendPropertyChanging();
					this._EffectiveTime = value;
					this.SendPropertyChanged("EffectiveTime");
					this.OnEffectiveTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExecutionTime
		{
			get
			{
				return this._ExecutionTime;
			}
			set
			{
				if ((this._ExecutionTime != value))
				{
					this.OnExecutionTimeChanging(value);
					this.SendPropertyChanging();
					this._ExecutionTime = value;
					this.SendPropertyChanged("ExecutionTime");
					this.OnExecutionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RatingGroupResolution", Storage="_User", ThisKey="Creator", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.RatingGroupResolutions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.RatingGroupResolutions.Add(this);
						this._Creator = value.UserID;
					}
					else
					{
						this._Creator = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroup_RatingGroupResolution", Storage="_RatingGroup", ThisKey="RatingGroupID", OtherKey="RatingGroupID", IsForeignKey=true)]
		public RatingGroup RatingGroup
		{
			get
			{
				return this._RatingGroup.Entity;
			}
			set
			{
				RatingGroup previousValue = this._RatingGroup.Entity;
				if (((previousValue != value) 
							|| (this._RatingGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingGroup.Entity = null;
						previousValue.RatingGroupResolutions.Remove(this);
					}
					this._RatingGroup.Entity = value;
					if ((value != null))
					{
						value.RatingGroupResolutions.Add(this);
						this._RatingGroupID = value.RatingGroupID;
					}
					else
					{
						this._RatingGroupID = default(int);
					}
					this.SendPropertyChanged("RatingGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RatingGroupStatusRecords")]
	public partial class RatingGroupStatusRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RatingGroupStatusRecordID;
		
		private int _RatingGroupID;
		
		private System.Nullable<decimal> _OldValueOfFirstRating;
		
		private System.DateTime _NewValueTime;
		
		private EntityRef<RatingGroup> _RatingGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatingGroupStatusRecordIDChanging(int value);
    partial void OnRatingGroupStatusRecordIDChanged();
    partial void OnRatingGroupIDChanging(int value);
    partial void OnRatingGroupIDChanged();
    partial void OnOldValueOfFirstRatingChanging(System.Nullable<decimal> value);
    partial void OnOldValueOfFirstRatingChanged();
    partial void OnNewValueTimeChanging(System.DateTime value);
    partial void OnNewValueTimeChanged();
    #endregion
		
		public RatingGroupStatusRecord()
		{
			this._RatingGroup = default(EntityRef<RatingGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingGroupStatusRecordID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RatingGroupStatusRecordID
		{
			get
			{
				return this._RatingGroupStatusRecordID;
			}
			set
			{
				if ((this._RatingGroupStatusRecordID != value))
				{
					this.OnRatingGroupStatusRecordIDChanging(value);
					this.SendPropertyChanging();
					this._RatingGroupStatusRecordID = value;
					this.SendPropertyChanged("RatingGroupStatusRecordID");
					this.OnRatingGroupStatusRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingGroupID", DbType="Int NOT NULL")]
		public int RatingGroupID
		{
			get
			{
				return this._RatingGroupID;
			}
			set
			{
				if ((this._RatingGroupID != value))
				{
					if (this._RatingGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingGroupIDChanging(value);
					this.SendPropertyChanging();
					this._RatingGroupID = value;
					this.SendPropertyChanged("RatingGroupID");
					this.OnRatingGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldValueOfFirstRating", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> OldValueOfFirstRating
		{
			get
			{
				return this._OldValueOfFirstRating;
			}
			set
			{
				if ((this._OldValueOfFirstRating != value))
				{
					this.OnOldValueOfFirstRatingChanging(value);
					this.SendPropertyChanging();
					this._OldValueOfFirstRating = value;
					this.SendPropertyChanged("OldValueOfFirstRating");
					this.OnOldValueOfFirstRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValueTime", DbType="DateTime NOT NULL")]
		public System.DateTime NewValueTime
		{
			get
			{
				return this._NewValueTime;
			}
			set
			{
				if ((this._NewValueTime != value))
				{
					this.OnNewValueTimeChanging(value);
					this.SendPropertyChanging();
					this._NewValueTime = value;
					this.SendPropertyChanged("NewValueTime");
					this.OnNewValueTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroup_RatingGroupStatusRecord", Storage="_RatingGroup", ThisKey="RatingGroupID", OtherKey="RatingGroupID", IsForeignKey=true)]
		public RatingGroup RatingGroup
		{
			get
			{
				return this._RatingGroup.Entity;
			}
			set
			{
				RatingGroup previousValue = this._RatingGroup.Entity;
				if (((previousValue != value) 
							|| (this._RatingGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingGroup.Entity = null;
						previousValue.RatingGroupStatusRecords.Remove(this);
					}
					this._RatingGroup.Entity = value;
					if ((value != null))
					{
						value.RatingGroupStatusRecords.Add(this);
						this._RatingGroupID = value.RatingGroupID;
					}
					else
					{
						this._RatingGroupID = default(int);
					}
					this.SendPropertyChanged("RatingGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RatingPhaseGroups")]
	public partial class RatingPhaseGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RatingPhaseGroupID;
		
		private int _NumPhases;
		
		private string _Name;
		
		private System.Nullable<int> _Creator;
		
		private byte _Status;
		
		private EntitySet<RatingCharacteristic> _RatingCharacteristics;
		
		private EntitySet<RatingPhase> _RatingPhases;
		
		private EntitySet<RatingGroupPhaseStatus> _RatingGroupPhaseStatus;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatingPhaseGroupIDChanging(int value);
    partial void OnRatingPhaseGroupIDChanged();
    partial void OnNumPhasesChanging(int value);
    partial void OnNumPhasesChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public RatingPhaseGroup()
		{
			this._RatingCharacteristics = new EntitySet<RatingCharacteristic>(new Action<RatingCharacteristic>(this.attach_RatingCharacteristics), new Action<RatingCharacteristic>(this.detach_RatingCharacteristics));
			this._RatingPhases = new EntitySet<RatingPhase>(new Action<RatingPhase>(this.attach_RatingPhases), new Action<RatingPhase>(this.detach_RatingPhases));
			this._RatingGroupPhaseStatus = new EntitySet<RatingGroupPhaseStatus>(new Action<RatingGroupPhaseStatus>(this.attach_RatingGroupPhaseStatus), new Action<RatingGroupPhaseStatus>(this.detach_RatingGroupPhaseStatus));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingPhaseGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RatingPhaseGroupID
		{
			get
			{
				return this._RatingPhaseGroupID;
			}
			set
			{
				if ((this._RatingPhaseGroupID != value))
				{
					this.OnRatingPhaseGroupIDChanging(value);
					this.SendPropertyChanging();
					this._RatingPhaseGroupID = value;
					this.SendPropertyChanged("RatingPhaseGroupID");
					this.OnRatingPhaseGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumPhases", DbType="Int NOT NULL")]
		public int NumPhases
		{
			get
			{
				return this._NumPhases;
			}
			set
			{
				if ((this._NumPhases != value))
				{
					this.OnNumPhasesChanging(value);
					this.SendPropertyChanging();
					this._NumPhases = value;
					this.SendPropertyChanged("NumPhases");
					this.OnNumPhasesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingPhaseGroup_RatingCharacteristic", Storage="_RatingCharacteristics", ThisKey="RatingPhaseGroupID", OtherKey="RatingPhaseGroupID")]
		public EntitySet<RatingCharacteristic> RatingCharacteristics
		{
			get
			{
				return this._RatingCharacteristics;
			}
			set
			{
				this._RatingCharacteristics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingPhaseGroup_RatingPhase", Storage="_RatingPhases", ThisKey="RatingPhaseGroupID", OtherKey="RatingPhaseGroupID")]
		public EntitySet<RatingPhase> RatingPhases
		{
			get
			{
				return this._RatingPhases;
			}
			set
			{
				this._RatingPhases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingPhaseGroup_RatingGroupPhaseStatus", Storage="_RatingGroupPhaseStatus", ThisKey="RatingPhaseGroupID", OtherKey="RatingPhaseGroupID")]
		public EntitySet<RatingGroupPhaseStatus> RatingGroupPhaseStatus
		{
			get
			{
				return this._RatingGroupPhaseStatus;
			}
			set
			{
				this._RatingGroupPhaseStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RatingPhaseGroup", Storage="_User", ThisKey="Creator", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.RatingPhaseGroups.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.RatingPhaseGroups.Add(this);
						this._Creator = value.UserID;
					}
					else
					{
						this._Creator = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RatingCharacteristics(RatingCharacteristic entity)
		{
			this.SendPropertyChanging();
			entity.RatingPhaseGroup = this;
		}
		
		private void detach_RatingCharacteristics(RatingCharacteristic entity)
		{
			this.SendPropertyChanging();
			entity.RatingPhaseGroup = null;
		}
		
		private void attach_RatingPhases(RatingPhase entity)
		{
			this.SendPropertyChanging();
			entity.RatingPhaseGroup = this;
		}
		
		private void detach_RatingPhases(RatingPhase entity)
		{
			this.SendPropertyChanging();
			entity.RatingPhaseGroup = null;
		}
		
		private void attach_RatingGroupPhaseStatus(RatingGroupPhaseStatus entity)
		{
			this.SendPropertyChanging();
			entity.RatingPhaseGroup = this;
		}
		
		private void detach_RatingGroupPhaseStatus(RatingGroupPhaseStatus entity)
		{
			this.SendPropertyChanging();
			entity.RatingPhaseGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RatingPhases")]
	public partial class RatingPhase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RatingPhaseID;
		
		private int _RatingPhaseGroupID;
		
		private int _NumberInGroup;
		
		private decimal _SubsidyLevel;
		
		private short _ScoringRule;
		
		private bool _Timed;
		
		private bool _BaseTimingOnSpecificTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private System.Nullable<int> _RunTime;
		
		private int _HalfLifeForResolution;
		
		private bool _RepeatIndefinitely;
		
		private System.Nullable<int> _RepeatNTimes;
		
		private byte _Status;
		
		private EntitySet<RatingGroupPhaseStatus> _RatingGroupPhaseStatus;
		
		private EntityRef<RatingPhaseGroup> _RatingPhaseGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatingPhaseIDChanging(int value);
    partial void OnRatingPhaseIDChanged();
    partial void OnRatingPhaseGroupIDChanging(int value);
    partial void OnRatingPhaseGroupIDChanged();
    partial void OnNumberInGroupChanging(int value);
    partial void OnNumberInGroupChanged();
    partial void OnSubsidyLevelChanging(decimal value);
    partial void OnSubsidyLevelChanged();
    partial void OnScoringRuleChanging(short value);
    partial void OnScoringRuleChanged();
    partial void OnTimedChanging(bool value);
    partial void OnTimedChanged();
    partial void OnBaseTimingOnSpecificTimeChanging(bool value);
    partial void OnBaseTimingOnSpecificTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnRunTimeChanging(System.Nullable<int> value);
    partial void OnRunTimeChanged();
    partial void OnHalfLifeForResolutionChanging(int value);
    partial void OnHalfLifeForResolutionChanged();
    partial void OnRepeatIndefinitelyChanging(bool value);
    partial void OnRepeatIndefinitelyChanged();
    partial void OnRepeatNTimesChanging(System.Nullable<int> value);
    partial void OnRepeatNTimesChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public RatingPhase()
		{
			this._RatingGroupPhaseStatus = new EntitySet<RatingGroupPhaseStatus>(new Action<RatingGroupPhaseStatus>(this.attach_RatingGroupPhaseStatus), new Action<RatingGroupPhaseStatus>(this.detach_RatingGroupPhaseStatus));
			this._RatingPhaseGroup = default(EntityRef<RatingPhaseGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingPhaseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RatingPhaseID
		{
			get
			{
				return this._RatingPhaseID;
			}
			set
			{
				if ((this._RatingPhaseID != value))
				{
					this.OnRatingPhaseIDChanging(value);
					this.SendPropertyChanging();
					this._RatingPhaseID = value;
					this.SendPropertyChanged("RatingPhaseID");
					this.OnRatingPhaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingPhaseGroupID", DbType="Int NOT NULL")]
		public int RatingPhaseGroupID
		{
			get
			{
				return this._RatingPhaseGroupID;
			}
			set
			{
				if ((this._RatingPhaseGroupID != value))
				{
					if (this._RatingPhaseGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingPhaseGroupIDChanging(value);
					this.SendPropertyChanging();
					this._RatingPhaseGroupID = value;
					this.SendPropertyChanged("RatingPhaseGroupID");
					this.OnRatingPhaseGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberInGroup", DbType="Int NOT NULL")]
		public int NumberInGroup
		{
			get
			{
				return this._NumberInGroup;
			}
			set
			{
				if ((this._NumberInGroup != value))
				{
					this.OnNumberInGroupChanging(value);
					this.SendPropertyChanging();
					this._NumberInGroup = value;
					this.SendPropertyChanged("NumberInGroup");
					this.OnNumberInGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubsidyLevel", DbType="Decimal(18,4) NOT NULL")]
		public decimal SubsidyLevel
		{
			get
			{
				return this._SubsidyLevel;
			}
			set
			{
				if ((this._SubsidyLevel != value))
				{
					this.OnSubsidyLevelChanging(value);
					this.SendPropertyChanging();
					this._SubsidyLevel = value;
					this.SendPropertyChanged("SubsidyLevel");
					this.OnSubsidyLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoringRule", DbType="SmallInt NOT NULL")]
		public short ScoringRule
		{
			get
			{
				return this._ScoringRule;
			}
			set
			{
				if ((this._ScoringRule != value))
				{
					this.OnScoringRuleChanging(value);
					this.SendPropertyChanging();
					this._ScoringRule = value;
					this.SendPropertyChanged("ScoringRule");
					this.OnScoringRuleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timed", DbType="Bit NOT NULL")]
		public bool Timed
		{
			get
			{
				return this._Timed;
			}
			set
			{
				if ((this._Timed != value))
				{
					this.OnTimedChanging(value);
					this.SendPropertyChanging();
					this._Timed = value;
					this.SendPropertyChanged("Timed");
					this.OnTimedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseTimingOnSpecificTime", DbType="Bit NOT NULL")]
		public bool BaseTimingOnSpecificTime
		{
			get
			{
				return this._BaseTimingOnSpecificTime;
			}
			set
			{
				if ((this._BaseTimingOnSpecificTime != value))
				{
					this.OnBaseTimingOnSpecificTimeChanging(value);
					this.SendPropertyChanging();
					this._BaseTimingOnSpecificTime = value;
					this.SendPropertyChanged("BaseTimingOnSpecificTime");
					this.OnBaseTimingOnSpecificTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunTime", DbType="Int")]
		public System.Nullable<int> RunTime
		{
			get
			{
				return this._RunTime;
			}
			set
			{
				if ((this._RunTime != value))
				{
					this.OnRunTimeChanging(value);
					this.SendPropertyChanging();
					this._RunTime = value;
					this.SendPropertyChanged("RunTime");
					this.OnRunTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HalfLifeForResolution", DbType="Int NOT NULL")]
		public int HalfLifeForResolution
		{
			get
			{
				return this._HalfLifeForResolution;
			}
			set
			{
				if ((this._HalfLifeForResolution != value))
				{
					this.OnHalfLifeForResolutionChanging(value);
					this.SendPropertyChanging();
					this._HalfLifeForResolution = value;
					this.SendPropertyChanged("HalfLifeForResolution");
					this.OnHalfLifeForResolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepeatIndefinitely", DbType="Bit NOT NULL")]
		public bool RepeatIndefinitely
		{
			get
			{
				return this._RepeatIndefinitely;
			}
			set
			{
				if ((this._RepeatIndefinitely != value))
				{
					this.OnRepeatIndefinitelyChanging(value);
					this.SendPropertyChanging();
					this._RepeatIndefinitely = value;
					this.SendPropertyChanged("RepeatIndefinitely");
					this.OnRepeatIndefinitelyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepeatNTimes", DbType="Int")]
		public System.Nullable<int> RepeatNTimes
		{
			get
			{
				return this._RepeatNTimes;
			}
			set
			{
				if ((this._RepeatNTimes != value))
				{
					this.OnRepeatNTimesChanging(value);
					this.SendPropertyChanging();
					this._RepeatNTimes = value;
					this.SendPropertyChanged("RepeatNTimes");
					this.OnRepeatNTimesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingPhase_RatingGroupPhaseStatus", Storage="_RatingGroupPhaseStatus", ThisKey="RatingPhaseID", OtherKey="RatingPhaseID")]
		public EntitySet<RatingGroupPhaseStatus> RatingGroupPhaseStatus
		{
			get
			{
				return this._RatingGroupPhaseStatus;
			}
			set
			{
				this._RatingGroupPhaseStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingPhaseGroup_RatingPhase", Storage="_RatingPhaseGroup", ThisKey="RatingPhaseGroupID", OtherKey="RatingPhaseGroupID", IsForeignKey=true)]
		public RatingPhaseGroup RatingPhaseGroup
		{
			get
			{
				return this._RatingPhaseGroup.Entity;
			}
			set
			{
				RatingPhaseGroup previousValue = this._RatingPhaseGroup.Entity;
				if (((previousValue != value) 
							|| (this._RatingPhaseGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingPhaseGroup.Entity = null;
						previousValue.RatingPhases.Remove(this);
					}
					this._RatingPhaseGroup.Entity = value;
					if ((value != null))
					{
						value.RatingPhases.Add(this);
						this._RatingPhaseGroupID = value.RatingPhaseGroupID;
					}
					else
					{
						this._RatingPhaseGroupID = default(int);
					}
					this.SendPropertyChanged("RatingPhaseGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RatingGroupPhaseStatus(RatingGroupPhaseStatus entity)
		{
			this.SendPropertyChanging();
			entity.RatingPhase = this;
		}
		
		private void detach_RatingGroupPhaseStatus(RatingGroupPhaseStatus entity)
		{
			this.SendPropertyChanging();
			entity.RatingPhase = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RatingPlans")]
	public partial class RatingPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RatingPlansID;
		
		private int _RatingGroupAttributesID;
		
		private int _NumInGroup;
		
		private System.Nullable<int> _OwnedRatingGroupAttributesID;
		
		private System.Nullable<decimal> _DefaultUserRating;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _Creator;
		
		private byte _Status;
		
		private EntityRef<User> _User;
		
		private EntityRef<RatingGroupAttribute> _RatingGroupAttribute;
		
		private EntityRef<RatingGroupAttribute> _RatingGroupAttribute1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatingPlansIDChanging(int value);
    partial void OnRatingPlansIDChanged();
    partial void OnRatingGroupAttributesIDChanging(int value);
    partial void OnRatingGroupAttributesIDChanged();
    partial void OnNumInGroupChanging(int value);
    partial void OnNumInGroupChanged();
    partial void OnOwnedRatingGroupAttributesIDChanging(System.Nullable<int> value);
    partial void OnOwnedRatingGroupAttributesIDChanged();
    partial void OnDefaultUserRatingChanging(System.Nullable<decimal> value);
    partial void OnDefaultUserRatingChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public RatingPlan()
		{
			this._User = default(EntityRef<User>);
			this._RatingGroupAttribute = default(EntityRef<RatingGroupAttribute>);
			this._RatingGroupAttribute1 = default(EntityRef<RatingGroupAttribute>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingPlansID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RatingPlansID
		{
			get
			{
				return this._RatingPlansID;
			}
			set
			{
				if ((this._RatingPlansID != value))
				{
					this.OnRatingPlansIDChanging(value);
					this.SendPropertyChanging();
					this._RatingPlansID = value;
					this.SendPropertyChanged("RatingPlansID");
					this.OnRatingPlansIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingGroupAttributesID", DbType="Int NOT NULL")]
		public int RatingGroupAttributesID
		{
			get
			{
				return this._RatingGroupAttributesID;
			}
			set
			{
				if ((this._RatingGroupAttributesID != value))
				{
					if (this._RatingGroupAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingGroupAttributesIDChanging(value);
					this.SendPropertyChanging();
					this._RatingGroupAttributesID = value;
					this.SendPropertyChanged("RatingGroupAttributesID");
					this.OnRatingGroupAttributesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumInGroup", DbType="Int NOT NULL")]
		public int NumInGroup
		{
			get
			{
				return this._NumInGroup;
			}
			set
			{
				if ((this._NumInGroup != value))
				{
					this.OnNumInGroupChanging(value);
					this.SendPropertyChanging();
					this._NumInGroup = value;
					this.SendPropertyChanged("NumInGroup");
					this.OnNumInGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnedRatingGroupAttributesID", DbType="Int")]
		public System.Nullable<int> OwnedRatingGroupAttributesID
		{
			get
			{
				return this._OwnedRatingGroupAttributesID;
			}
			set
			{
				if ((this._OwnedRatingGroupAttributesID != value))
				{
					if (this._RatingGroupAttribute1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnedRatingGroupAttributesIDChanging(value);
					this.SendPropertyChanging();
					this._OwnedRatingGroupAttributesID = value;
					this.SendPropertyChanged("OwnedRatingGroupAttributesID");
					this.OnOwnedRatingGroupAttributesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultUserRating", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> DefaultUserRating
		{
			get
			{
				return this._DefaultUserRating;
			}
			set
			{
				if ((this._DefaultUserRating != value))
				{
					this.OnDefaultUserRatingChanging(value);
					this.SendPropertyChanging();
					this._DefaultUserRating = value;
					this.SendPropertyChanged("DefaultUserRating");
					this.OnDefaultUserRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RatingPlan", Storage="_User", ThisKey="Creator", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.RatingPlans.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.RatingPlans.Add(this);
						this._Creator = value.UserID;
					}
					else
					{
						this._Creator = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroupAttribute_RatingPlan", Storage="_RatingGroupAttribute", ThisKey="RatingGroupAttributesID", OtherKey="RatingGroupAttributesID", IsForeignKey=true)]
		public RatingGroupAttribute RatingGroupAttribute
		{
			get
			{
				return this._RatingGroupAttribute.Entity;
			}
			set
			{
				RatingGroupAttribute previousValue = this._RatingGroupAttribute.Entity;
				if (((previousValue != value) 
							|| (this._RatingGroupAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingGroupAttribute.Entity = null;
						previousValue.RatingPlans.Remove(this);
					}
					this._RatingGroupAttribute.Entity = value;
					if ((value != null))
					{
						value.RatingPlans.Add(this);
						this._RatingGroupAttributesID = value.RatingGroupAttributesID;
					}
					else
					{
						this._RatingGroupAttributesID = default(int);
					}
					this.SendPropertyChanged("RatingGroupAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroupAttribute_RatingPlan1", Storage="_RatingGroupAttribute1", ThisKey="OwnedRatingGroupAttributesID", OtherKey="RatingGroupAttributesID", IsForeignKey=true)]
		public RatingGroupAttribute RatingGroupAttribute1
		{
			get
			{
				return this._RatingGroupAttribute1.Entity;
			}
			set
			{
				RatingGroupAttribute previousValue = this._RatingGroupAttribute1.Entity;
				if (((previousValue != value) 
							|| (this._RatingGroupAttribute1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingGroupAttribute1.Entity = null;
						previousValue.RatingPlans1.Remove(this);
					}
					this._RatingGroupAttribute1.Entity = value;
					if ((value != null))
					{
						value.RatingPlans1.Add(this);
						this._OwnedRatingGroupAttributesID = value.RatingGroupAttributesID;
					}
					else
					{
						this._OwnedRatingGroupAttributesID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RatingGroupAttribute1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RewardPendingPointsTrackers")]
	public partial class RewardPendingPointsTracker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RewardPendingPointsTrackerID;
		
		private System.Nullable<decimal> _PendingRating;
		
		private System.Nullable<System.DateTime> _TimeOfPendingRating;
		
		private int _RewardTblRowID;
		
		private int _UserID;
		
		private EntitySet<UserRating> _UserRatings;
		
		private EntityRef<User> _User;
		
		private EntityRef<TblRow> _TblRow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRewardPendingPointsTrackerIDChanging(int value);
    partial void OnRewardPendingPointsTrackerIDChanged();
    partial void OnPendingRatingChanging(System.Nullable<decimal> value);
    partial void OnPendingRatingChanged();
    partial void OnTimeOfPendingRatingChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeOfPendingRatingChanged();
    partial void OnRewardTblRowIDChanging(int value);
    partial void OnRewardTblRowIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public RewardPendingPointsTracker()
		{
			this._UserRatings = new EntitySet<UserRating>(new Action<UserRating>(this.attach_UserRatings), new Action<UserRating>(this.detach_UserRatings));
			this._User = default(EntityRef<User>);
			this._TblRow = default(EntityRef<TblRow>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RewardPendingPointsTrackerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RewardPendingPointsTrackerID
		{
			get
			{
				return this._RewardPendingPointsTrackerID;
			}
			set
			{
				if ((this._RewardPendingPointsTrackerID != value))
				{
					this.OnRewardPendingPointsTrackerIDChanging(value);
					this.SendPropertyChanging();
					this._RewardPendingPointsTrackerID = value;
					this.SendPropertyChanged("RewardPendingPointsTrackerID");
					this.OnRewardPendingPointsTrackerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingRating", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> PendingRating
		{
			get
			{
				return this._PendingRating;
			}
			set
			{
				if ((this._PendingRating != value))
				{
					this.OnPendingRatingChanging(value);
					this.SendPropertyChanging();
					this._PendingRating = value;
					this.SendPropertyChanged("PendingRating");
					this.OnPendingRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOfPendingRating", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeOfPendingRating
		{
			get
			{
				return this._TimeOfPendingRating;
			}
			set
			{
				if ((this._TimeOfPendingRating != value))
				{
					this.OnTimeOfPendingRatingChanging(value);
					this.SendPropertyChanging();
					this._TimeOfPendingRating = value;
					this.SendPropertyChanged("TimeOfPendingRating");
					this.OnTimeOfPendingRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RewardTblRowID", DbType="Int NOT NULL")]
		public int RewardTblRowID
		{
			get
			{
				return this._RewardTblRowID;
			}
			set
			{
				if ((this._RewardTblRowID != value))
				{
					if (this._TblRow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRewardTblRowIDChanging(value);
					this.SendPropertyChanging();
					this._RewardTblRowID = value;
					this.SendPropertyChanged("RewardTblRowID");
					this.OnRewardTblRowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RewardPendingPointsTracker_UserRating", Storage="_UserRatings", ThisKey="RewardPendingPointsTrackerID", OtherKey="RewardPendingPointsTrackerID")]
		public EntitySet<UserRating> UserRatings
		{
			get
			{
				return this._UserRatings;
			}
			set
			{
				this._UserRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RewardPendingPointsTracker", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.RewardPendingPointsTrackers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.RewardPendingPointsTrackers.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblRow_RewardPendingPointsTracker", Storage="_TblRow", ThisKey="RewardTblRowID", OtherKey="TblRowID", IsForeignKey=true)]
		public TblRow TblRow
		{
			get
			{
				return this._TblRow.Entity;
			}
			set
			{
				TblRow previousValue = this._TblRow.Entity;
				if (((previousValue != value) 
							|| (this._TblRow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblRow.Entity = null;
						previousValue.RewardPendingPointsTrackers.Remove(this);
					}
					this._TblRow.Entity = value;
					if ((value != null))
					{
						value.RewardPendingPointsTrackers.Add(this);
						this._RewardTblRowID = value.TblRowID;
					}
					else
					{
						this._RewardTblRowID = default(int);
					}
					this.SendPropertyChanged("TblRow");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRatings(UserRating entity)
		{
			this.SendPropertyChanging();
			entity.RewardPendingPointsTracker = this;
		}
		
		private void detach_UserRatings(UserRating entity)
		{
			this.SendPropertyChanging();
			entity.RewardPendingPointsTracker = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RewardRatingSettings")]
	public partial class RewardRatingSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RewardRatingSettingsID;
		
		private System.Nullable<int> _PointsManagerID;
		
		private System.Nullable<int> _UserActionID;
		
		private int _RatingGroupAttributesID;
		
		private decimal _ProbOfRewardEvaluation;
		
		private System.Nullable<decimal> _Multiplier;
		
		private string _Name;
		
		private System.Nullable<int> _Creator;
		
		private byte _Status;
		
		private EntityRef<UserAction> _UserAction;
		
		private EntityRef<PointsManager> _PointsManager;
		
		private EntityRef<RatingGroupAttribute> _RatingGroupAttribute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRewardRatingSettingsIDChanging(int value);
    partial void OnRewardRatingSettingsIDChanged();
    partial void OnPointsManagerIDChanging(System.Nullable<int> value);
    partial void OnPointsManagerIDChanged();
    partial void OnUserActionIDChanging(System.Nullable<int> value);
    partial void OnUserActionIDChanged();
    partial void OnRatingGroupAttributesIDChanging(int value);
    partial void OnRatingGroupAttributesIDChanged();
    partial void OnProbOfRewardEvaluationChanging(decimal value);
    partial void OnProbOfRewardEvaluationChanged();
    partial void OnMultiplierChanging(System.Nullable<decimal> value);
    partial void OnMultiplierChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public RewardRatingSetting()
		{
			this._UserAction = default(EntityRef<UserAction>);
			this._PointsManager = default(EntityRef<PointsManager>);
			this._RatingGroupAttribute = default(EntityRef<RatingGroupAttribute>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RewardRatingSettingsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RewardRatingSettingsID
		{
			get
			{
				return this._RewardRatingSettingsID;
			}
			set
			{
				if ((this._RewardRatingSettingsID != value))
				{
					this.OnRewardRatingSettingsIDChanging(value);
					this.SendPropertyChanging();
					this._RewardRatingSettingsID = value;
					this.SendPropertyChanged("RewardRatingSettingsID");
					this.OnRewardRatingSettingsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsManagerID", DbType="Int")]
		public System.Nullable<int> PointsManagerID
		{
			get
			{
				return this._PointsManagerID;
			}
			set
			{
				if ((this._PointsManagerID != value))
				{
					if (this._PointsManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPointsManagerIDChanging(value);
					this.SendPropertyChanging();
					this._PointsManagerID = value;
					this.SendPropertyChanged("PointsManagerID");
					this.OnPointsManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserActionID", DbType="Int")]
		public System.Nullable<int> UserActionID
		{
			get
			{
				return this._UserActionID;
			}
			set
			{
				if ((this._UserActionID != value))
				{
					if (this._UserAction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserActionIDChanging(value);
					this.SendPropertyChanging();
					this._UserActionID = value;
					this.SendPropertyChanged("UserActionID");
					this.OnUserActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingGroupAttributesID", DbType="Int NOT NULL")]
		public int RatingGroupAttributesID
		{
			get
			{
				return this._RatingGroupAttributesID;
			}
			set
			{
				if ((this._RatingGroupAttributesID != value))
				{
					if (this._RatingGroupAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingGroupAttributesIDChanging(value);
					this.SendPropertyChanging();
					this._RatingGroupAttributesID = value;
					this.SendPropertyChanged("RatingGroupAttributesID");
					this.OnRatingGroupAttributesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProbOfRewardEvaluation", DbType="Decimal(18,4) NOT NULL")]
		public decimal ProbOfRewardEvaluation
		{
			get
			{
				return this._ProbOfRewardEvaluation;
			}
			set
			{
				if ((this._ProbOfRewardEvaluation != value))
				{
					this.OnProbOfRewardEvaluationChanging(value);
					this.SendPropertyChanging();
					this._ProbOfRewardEvaluation = value;
					this.SendPropertyChanged("ProbOfRewardEvaluation");
					this.OnProbOfRewardEvaluationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Multiplier", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Multiplier
		{
			get
			{
				return this._Multiplier;
			}
			set
			{
				if ((this._Multiplier != value))
				{
					this.OnMultiplierChanging(value);
					this.SendPropertyChanging();
					this._Multiplier = value;
					this.SendPropertyChanged("Multiplier");
					this.OnMultiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAction_RewardRatingSetting", Storage="_UserAction", ThisKey="UserActionID", OtherKey="UserActionID", IsForeignKey=true)]
		public UserAction UserAction
		{
			get
			{
				return this._UserAction.Entity;
			}
			set
			{
				UserAction previousValue = this._UserAction.Entity;
				if (((previousValue != value) 
							|| (this._UserAction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAction.Entity = null;
						previousValue.RewardRatingSettings.Remove(this);
					}
					this._UserAction.Entity = value;
					if ((value != null))
					{
						value.RewardRatingSettings.Add(this);
						this._UserActionID = value.UserActionID;
					}
					else
					{
						this._UserActionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserAction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_RewardRatingSetting", Storage="_PointsManager", ThisKey="PointsManagerID", OtherKey="PointsManagerID", IsForeignKey=true)]
		public PointsManager PointsManager
		{
			get
			{
				return this._PointsManager.Entity;
			}
			set
			{
				PointsManager previousValue = this._PointsManager.Entity;
				if (((previousValue != value) 
							|| (this._PointsManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PointsManager.Entity = null;
						previousValue.RewardRatingSettings.Remove(this);
					}
					this._PointsManager.Entity = value;
					if ((value != null))
					{
						value.RewardRatingSettings.Add(this);
						this._PointsManagerID = value.PointsManagerID;
					}
					else
					{
						this._PointsManagerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PointsManager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroupAttribute_RewardRatingSetting", Storage="_RatingGroupAttribute", ThisKey="RatingGroupAttributesID", OtherKey="RatingGroupAttributesID", IsForeignKey=true)]
		public RatingGroupAttribute RatingGroupAttribute
		{
			get
			{
				return this._RatingGroupAttribute.Entity;
			}
			set
			{
				RatingGroupAttribute previousValue = this._RatingGroupAttribute.Entity;
				if (((previousValue != value) 
							|| (this._RatingGroupAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingGroupAttribute.Entity = null;
						previousValue.RewardRatingSettings.Remove(this);
					}
					this._RatingGroupAttribute.Entity = value;
					if ((value != null))
					{
						value.RewardRatingSettings.Add(this);
						this._RatingGroupAttributesID = value.RatingGroupAttributesID;
					}
					else
					{
						this._RatingGroupAttributesID = default(int);
					}
					this.SendPropertyChanged("RatingGroupAttribute");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchWordChoices")]
	public partial class SearchWordChoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SearchWordChoiceID;
		
		private int _ChoiceInGroupID;
		
		private int _SearchWordID;
		
		private EntityRef<ChoiceInGroup> _ChoiceInGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchWordChoiceIDChanging(int value);
    partial void OnSearchWordChoiceIDChanged();
    partial void OnChoiceInGroupIDChanging(int value);
    partial void OnChoiceInGroupIDChanged();
    partial void OnSearchWordIDChanging(int value);
    partial void OnSearchWordIDChanged();
    #endregion
		
		public SearchWordChoice()
		{
			this._ChoiceInGroup = default(EntityRef<ChoiceInGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWordChoiceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SearchWordChoiceID
		{
			get
			{
				return this._SearchWordChoiceID;
			}
			set
			{
				if ((this._SearchWordChoiceID != value))
				{
					this.OnSearchWordChoiceIDChanging(value);
					this.SendPropertyChanging();
					this._SearchWordChoiceID = value;
					this.SendPropertyChanged("SearchWordChoiceID");
					this.OnSearchWordChoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceInGroupID", DbType="Int NOT NULL")]
		public int ChoiceInGroupID
		{
			get
			{
				return this._ChoiceInGroupID;
			}
			set
			{
				if ((this._ChoiceInGroupID != value))
				{
					if (this._ChoiceInGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChoiceInGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ChoiceInGroupID = value;
					this.SendPropertyChanged("ChoiceInGroupID");
					this.OnChoiceInGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWordID", DbType="Int NOT NULL")]
		public int SearchWordID
		{
			get
			{
				return this._SearchWordID;
			}
			set
			{
				if ((this._SearchWordID != value))
				{
					this.OnSearchWordIDChanging(value);
					this.SendPropertyChanging();
					this._SearchWordID = value;
					this.SendPropertyChanged("SearchWordID");
					this.OnSearchWordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChoiceInGroup_SearchWordChoice", Storage="_ChoiceInGroup", ThisKey="ChoiceInGroupID", OtherKey="ChoiceInGroupID", IsForeignKey=true)]
		public ChoiceInGroup ChoiceInGroup
		{
			get
			{
				return this._ChoiceInGroup.Entity;
			}
			set
			{
				ChoiceInGroup previousValue = this._ChoiceInGroup.Entity;
				if (((previousValue != value) 
							|| (this._ChoiceInGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChoiceInGroup.Entity = null;
						previousValue.SearchWordChoices.Remove(this);
					}
					this._ChoiceInGroup.Entity = value;
					if ((value != null))
					{
						value.SearchWordChoices.Add(this);
						this._ChoiceInGroupID = value.ChoiceInGroupID;
					}
					else
					{
						this._ChoiceInGroupID = default(int);
					}
					this.SendPropertyChanged("ChoiceInGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchWordTblRowNames")]
	public partial class SearchWordTblRowName : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SearchWordTblRowNameID;
		
		private int _TblRowID;
		
		private int _SearchWordID;
		
		private EntityRef<TblRow> _TblRow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchWordTblRowNameIDChanging(int value);
    partial void OnSearchWordTblRowNameIDChanged();
    partial void OnTblRowIDChanging(int value);
    partial void OnTblRowIDChanged();
    partial void OnSearchWordIDChanging(int value);
    partial void OnSearchWordIDChanged();
    #endregion
		
		public SearchWordTblRowName()
		{
			this._TblRow = default(EntityRef<TblRow>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWordTblRowNameID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SearchWordTblRowNameID
		{
			get
			{
				return this._SearchWordTblRowNameID;
			}
			set
			{
				if ((this._SearchWordTblRowNameID != value))
				{
					this.OnSearchWordTblRowNameIDChanging(value);
					this.SendPropertyChanging();
					this._SearchWordTblRowNameID = value;
					this.SendPropertyChanged("SearchWordTblRowNameID");
					this.OnSearchWordTblRowNameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblRowID", DbType="Int NOT NULL")]
		public int TblRowID
		{
			get
			{
				return this._TblRowID;
			}
			set
			{
				if ((this._TblRowID != value))
				{
					if (this._TblRow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblRowIDChanging(value);
					this.SendPropertyChanging();
					this._TblRowID = value;
					this.SendPropertyChanged("TblRowID");
					this.OnTblRowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWordID", DbType="Int NOT NULL")]
		public int SearchWordID
		{
			get
			{
				return this._SearchWordID;
			}
			set
			{
				if ((this._SearchWordID != value))
				{
					this.OnSearchWordIDChanging(value);
					this.SendPropertyChanging();
					this._SearchWordID = value;
					this.SendPropertyChanged("SearchWordID");
					this.OnSearchWordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblRow_SearchWordTblRowName", Storage="_TblRow", ThisKey="TblRowID", OtherKey="TblRowID", IsForeignKey=true)]
		public TblRow TblRow
		{
			get
			{
				return this._TblRow.Entity;
			}
			set
			{
				TblRow previousValue = this._TblRow.Entity;
				if (((previousValue != value) 
							|| (this._TblRow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblRow.Entity = null;
						previousValue.SearchWordTblRowNames.Remove(this);
					}
					this._TblRow.Entity = value;
					if ((value != null))
					{
						value.SearchWordTblRowNames.Add(this);
						this._TblRowID = value.TblRowID;
					}
					else
					{
						this._TblRowID = default(int);
					}
					this.SendPropertyChanged("TblRow");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchWordTextFields")]
	public partial class SearchWordTextField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SearchWordTextFieldID;
		
		private int _TextFieldID;
		
		private int _SearchWordID;
		
		private EntityRef<TextField> _TextField;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchWordTextFieldIDChanging(int value);
    partial void OnSearchWordTextFieldIDChanged();
    partial void OnTextFieldIDChanging(int value);
    partial void OnTextFieldIDChanged();
    partial void OnSearchWordIDChanging(int value);
    partial void OnSearchWordIDChanged();
    #endregion
		
		public SearchWordTextField()
		{
			this._TextField = default(EntityRef<TextField>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWordTextFieldID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SearchWordTextFieldID
		{
			get
			{
				return this._SearchWordTextFieldID;
			}
			set
			{
				if ((this._SearchWordTextFieldID != value))
				{
					this.OnSearchWordTextFieldIDChanging(value);
					this.SendPropertyChanging();
					this._SearchWordTextFieldID = value;
					this.SendPropertyChanged("SearchWordTextFieldID");
					this.OnSearchWordTextFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextFieldID", DbType="Int NOT NULL")]
		public int TextFieldID
		{
			get
			{
				return this._TextFieldID;
			}
			set
			{
				if ((this._TextFieldID != value))
				{
					if (this._TextField.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTextFieldIDChanging(value);
					this.SendPropertyChanging();
					this._TextFieldID = value;
					this.SendPropertyChanged("TextFieldID");
					this.OnTextFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWordID", DbType="Int NOT NULL")]
		public int SearchWordID
		{
			get
			{
				return this._SearchWordID;
			}
			set
			{
				if ((this._SearchWordID != value))
				{
					this.OnSearchWordIDChanging(value);
					this.SendPropertyChanging();
					this._SearchWordID = value;
					this.SendPropertyChanged("SearchWordID");
					this.OnSearchWordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TextField_SearchWordTextField", Storage="_TextField", ThisKey="TextFieldID", OtherKey="TextFieldID", IsForeignKey=true)]
		public TextField TextField
		{
			get
			{
				return this._TextField.Entity;
			}
			set
			{
				TextField previousValue = this._TextField.Entity;
				if (((previousValue != value) 
							|| (this._TextField.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TextField.Entity = null;
						previousValue.SearchWordTextFields.Remove(this);
					}
					this._TextField.Entity = value;
					if ((value != null))
					{
						value.SearchWordTextFields.Add(this);
						this._TextFieldID = value.TextFieldID;
					}
					else
					{
						this._TextFieldID = default(int);
					}
					this.SendPropertyChanged("TextField");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubsidyAdjustments")]
	public partial class SubsidyAdjustment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubsidyAdjustmentID;
		
		private int _RatingGroupPhaseStatusID;
		
		private decimal _SubsidyAdjustmentFactor;
		
		private System.DateTime _EffectiveTime;
		
		private System.Nullable<System.DateTime> _EndingTime;
		
		private System.Nullable<int> _EndingTimeHalfLife;
		
		private byte _Status;
		
		private EntityRef<RatingGroupPhaseStatus> _RatingGroupPhaseStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubsidyAdjustmentIDChanging(int value);
    partial void OnSubsidyAdjustmentIDChanged();
    partial void OnRatingGroupPhaseStatusIDChanging(int value);
    partial void OnRatingGroupPhaseStatusIDChanged();
    partial void OnSubsidyAdjustmentFactorChanging(decimal value);
    partial void OnSubsidyAdjustmentFactorChanged();
    partial void OnEffectiveTimeChanging(System.DateTime value);
    partial void OnEffectiveTimeChanged();
    partial void OnEndingTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndingTimeChanged();
    partial void OnEndingTimeHalfLifeChanging(System.Nullable<int> value);
    partial void OnEndingTimeHalfLifeChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public SubsidyAdjustment()
		{
			this._RatingGroupPhaseStatus = default(EntityRef<RatingGroupPhaseStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubsidyAdjustmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubsidyAdjustmentID
		{
			get
			{
				return this._SubsidyAdjustmentID;
			}
			set
			{
				if ((this._SubsidyAdjustmentID != value))
				{
					this.OnSubsidyAdjustmentIDChanging(value);
					this.SendPropertyChanging();
					this._SubsidyAdjustmentID = value;
					this.SendPropertyChanged("SubsidyAdjustmentID");
					this.OnSubsidyAdjustmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingGroupPhaseStatusID", DbType="Int NOT NULL")]
		public int RatingGroupPhaseStatusID
		{
			get
			{
				return this._RatingGroupPhaseStatusID;
			}
			set
			{
				if ((this._RatingGroupPhaseStatusID != value))
				{
					if (this._RatingGroupPhaseStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingGroupPhaseStatusIDChanging(value);
					this.SendPropertyChanging();
					this._RatingGroupPhaseStatusID = value;
					this.SendPropertyChanged("RatingGroupPhaseStatusID");
					this.OnRatingGroupPhaseStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubsidyAdjustmentFactor", DbType="Decimal(18,4) NOT NULL")]
		public decimal SubsidyAdjustmentFactor
		{
			get
			{
				return this._SubsidyAdjustmentFactor;
			}
			set
			{
				if ((this._SubsidyAdjustmentFactor != value))
				{
					this.OnSubsidyAdjustmentFactorChanging(value);
					this.SendPropertyChanging();
					this._SubsidyAdjustmentFactor = value;
					this.SendPropertyChanged("SubsidyAdjustmentFactor");
					this.OnSubsidyAdjustmentFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveTime", DbType="DateTime NOT NULL")]
		public System.DateTime EffectiveTime
		{
			get
			{
				return this._EffectiveTime;
			}
			set
			{
				if ((this._EffectiveTime != value))
				{
					this.OnEffectiveTimeChanging(value);
					this.SendPropertyChanging();
					this._EffectiveTime = value;
					this.SendPropertyChanged("EffectiveTime");
					this.OnEffectiveTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndingTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndingTime
		{
			get
			{
				return this._EndingTime;
			}
			set
			{
				if ((this._EndingTime != value))
				{
					this.OnEndingTimeChanging(value);
					this.SendPropertyChanging();
					this._EndingTime = value;
					this.SendPropertyChanged("EndingTime");
					this.OnEndingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndingTimeHalfLife", DbType="Int")]
		public System.Nullable<int> EndingTimeHalfLife
		{
			get
			{
				return this._EndingTimeHalfLife;
			}
			set
			{
				if ((this._EndingTimeHalfLife != value))
				{
					this.OnEndingTimeHalfLifeChanging(value);
					this.SendPropertyChanging();
					this._EndingTimeHalfLife = value;
					this.SendPropertyChanged("EndingTimeHalfLife");
					this.OnEndingTimeHalfLifeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroupPhaseStatus_SubsidyAdjustment", Storage="_RatingGroupPhaseStatus", ThisKey="RatingGroupPhaseStatusID", OtherKey="RatingGroupPhaseStatusID", IsForeignKey=true)]
		public RatingGroupPhaseStatus RatingGroupPhaseStatus
		{
			get
			{
				return this._RatingGroupPhaseStatus.Entity;
			}
			set
			{
				RatingGroupPhaseStatus previousValue = this._RatingGroupPhaseStatus.Entity;
				if (((previousValue != value) 
							|| (this._RatingGroupPhaseStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingGroupPhaseStatus.Entity = null;
						previousValue.SubsidyAdjustments.Remove(this);
					}
					this._RatingGroupPhaseStatus.Entity = value;
					if ((value != null))
					{
						value.SubsidyAdjustments.Add(this);
						this._RatingGroupPhaseStatusID = value.RatingGroupPhaseStatusID;
					}
					else
					{
						this._RatingGroupPhaseStatusID = default(int);
					}
					this.SendPropertyChanged("RatingGroupPhaseStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubsidyDensityRangeGroups")]
	public partial class SubsidyDensityRangeGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubsidyDensityRangeGroupID;
		
		private System.Nullable<decimal> _UseLogarithmBase;
		
		private decimal _CumDensityTotal;
		
		private string _Name;
		
		private System.Nullable<int> _Creator;
		
		private byte _Status;
		
		private EntitySet<RatingCharacteristic> _RatingCharacteristics;
		
		private EntitySet<SubsidyDensityRange> _SubsidyDensityRanges;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubsidyDensityRangeGroupIDChanging(int value);
    partial void OnSubsidyDensityRangeGroupIDChanged();
    partial void OnUseLogarithmBaseChanging(System.Nullable<decimal> value);
    partial void OnUseLogarithmBaseChanged();
    partial void OnCumDensityTotalChanging(decimal value);
    partial void OnCumDensityTotalChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public SubsidyDensityRangeGroup()
		{
			this._RatingCharacteristics = new EntitySet<RatingCharacteristic>(new Action<RatingCharacteristic>(this.attach_RatingCharacteristics), new Action<RatingCharacteristic>(this.detach_RatingCharacteristics));
			this._SubsidyDensityRanges = new EntitySet<SubsidyDensityRange>(new Action<SubsidyDensityRange>(this.attach_SubsidyDensityRanges), new Action<SubsidyDensityRange>(this.detach_SubsidyDensityRanges));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubsidyDensityRangeGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubsidyDensityRangeGroupID
		{
			get
			{
				return this._SubsidyDensityRangeGroupID;
			}
			set
			{
				if ((this._SubsidyDensityRangeGroupID != value))
				{
					this.OnSubsidyDensityRangeGroupIDChanging(value);
					this.SendPropertyChanging();
					this._SubsidyDensityRangeGroupID = value;
					this.SendPropertyChanged("SubsidyDensityRangeGroupID");
					this.OnSubsidyDensityRangeGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseLogarithmBase", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> UseLogarithmBase
		{
			get
			{
				return this._UseLogarithmBase;
			}
			set
			{
				if ((this._UseLogarithmBase != value))
				{
					this.OnUseLogarithmBaseChanging(value);
					this.SendPropertyChanging();
					this._UseLogarithmBase = value;
					this.SendPropertyChanged("UseLogarithmBase");
					this.OnUseLogarithmBaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CumDensityTotal", DbType="Decimal(18,4) NOT NULL")]
		public decimal CumDensityTotal
		{
			get
			{
				return this._CumDensityTotal;
			}
			set
			{
				if ((this._CumDensityTotal != value))
				{
					this.OnCumDensityTotalChanging(value);
					this.SendPropertyChanging();
					this._CumDensityTotal = value;
					this.SendPropertyChanged("CumDensityTotal");
					this.OnCumDensityTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubsidyDensityRangeGroup_RatingCharacteristic", Storage="_RatingCharacteristics", ThisKey="SubsidyDensityRangeGroupID", OtherKey="SubsidyDensityRangeGroupID")]
		public EntitySet<RatingCharacteristic> RatingCharacteristics
		{
			get
			{
				return this._RatingCharacteristics;
			}
			set
			{
				this._RatingCharacteristics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubsidyDensityRangeGroup_SubsidyDensityRange", Storage="_SubsidyDensityRanges", ThisKey="SubsidyDensityRangeGroupID", OtherKey="SubsidyDensityRangeGroupID")]
		public EntitySet<SubsidyDensityRange> SubsidyDensityRanges
		{
			get
			{
				return this._SubsidyDensityRanges;
			}
			set
			{
				this._SubsidyDensityRanges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SubsidyDensityRangeGroup", Storage="_User", ThisKey="Creator", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.SubsidyDensityRangeGroups.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.SubsidyDensityRangeGroups.Add(this);
						this._Creator = value.UserID;
					}
					else
					{
						this._Creator = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RatingCharacteristics(RatingCharacteristic entity)
		{
			this.SendPropertyChanging();
			entity.SubsidyDensityRangeGroup = this;
		}
		
		private void detach_RatingCharacteristics(RatingCharacteristic entity)
		{
			this.SendPropertyChanging();
			entity.SubsidyDensityRangeGroup = null;
		}
		
		private void attach_SubsidyDensityRanges(SubsidyDensityRange entity)
		{
			this.SendPropertyChanging();
			entity.SubsidyDensityRangeGroup = this;
		}
		
		private void detach_SubsidyDensityRanges(SubsidyDensityRange entity)
		{
			this.SendPropertyChanging();
			entity.SubsidyDensityRangeGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubsidyDensityRanges")]
	public partial class SubsidyDensityRange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubsidyDensityRangeID;
		
		private int _SubsidyDensityRangeGroupID;
		
		private decimal _RangeBottom;
		
		private decimal _RangeTop;
		
		private decimal _LiquidityFactor;
		
		private decimal _CumDensityBottom;
		
		private decimal _CumDensityTop;
		
		private byte _Status;
		
		private EntityRef<SubsidyDensityRangeGroup> _SubsidyDensityRangeGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubsidyDensityRangeIDChanging(int value);
    partial void OnSubsidyDensityRangeIDChanged();
    partial void OnSubsidyDensityRangeGroupIDChanging(int value);
    partial void OnSubsidyDensityRangeGroupIDChanged();
    partial void OnRangeBottomChanging(decimal value);
    partial void OnRangeBottomChanged();
    partial void OnRangeTopChanging(decimal value);
    partial void OnRangeTopChanged();
    partial void OnLiquidityFactorChanging(decimal value);
    partial void OnLiquidityFactorChanged();
    partial void OnCumDensityBottomChanging(decimal value);
    partial void OnCumDensityBottomChanged();
    partial void OnCumDensityTopChanging(decimal value);
    partial void OnCumDensityTopChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public SubsidyDensityRange()
		{
			this._SubsidyDensityRangeGroup = default(EntityRef<SubsidyDensityRangeGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubsidyDensityRangeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubsidyDensityRangeID
		{
			get
			{
				return this._SubsidyDensityRangeID;
			}
			set
			{
				if ((this._SubsidyDensityRangeID != value))
				{
					this.OnSubsidyDensityRangeIDChanging(value);
					this.SendPropertyChanging();
					this._SubsidyDensityRangeID = value;
					this.SendPropertyChanged("SubsidyDensityRangeID");
					this.OnSubsidyDensityRangeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubsidyDensityRangeGroupID", DbType="Int NOT NULL")]
		public int SubsidyDensityRangeGroupID
		{
			get
			{
				return this._SubsidyDensityRangeGroupID;
			}
			set
			{
				if ((this._SubsidyDensityRangeGroupID != value))
				{
					if (this._SubsidyDensityRangeGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubsidyDensityRangeGroupIDChanging(value);
					this.SendPropertyChanging();
					this._SubsidyDensityRangeGroupID = value;
					this.SendPropertyChanged("SubsidyDensityRangeGroupID");
					this.OnSubsidyDensityRangeGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RangeBottom", DbType="Decimal(18,4) NOT NULL")]
		public decimal RangeBottom
		{
			get
			{
				return this._RangeBottom;
			}
			set
			{
				if ((this._RangeBottom != value))
				{
					this.OnRangeBottomChanging(value);
					this.SendPropertyChanging();
					this._RangeBottom = value;
					this.SendPropertyChanged("RangeBottom");
					this.OnRangeBottomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RangeTop", DbType="Decimal(18,4) NOT NULL")]
		public decimal RangeTop
		{
			get
			{
				return this._RangeTop;
			}
			set
			{
				if ((this._RangeTop != value))
				{
					this.OnRangeTopChanging(value);
					this.SendPropertyChanging();
					this._RangeTop = value;
					this.SendPropertyChanged("RangeTop");
					this.OnRangeTopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiquidityFactor", DbType="Decimal(18,4) NOT NULL")]
		public decimal LiquidityFactor
		{
			get
			{
				return this._LiquidityFactor;
			}
			set
			{
				if ((this._LiquidityFactor != value))
				{
					this.OnLiquidityFactorChanging(value);
					this.SendPropertyChanging();
					this._LiquidityFactor = value;
					this.SendPropertyChanged("LiquidityFactor");
					this.OnLiquidityFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CumDensityBottom", DbType="Decimal(18,4) NOT NULL")]
		public decimal CumDensityBottom
		{
			get
			{
				return this._CumDensityBottom;
			}
			set
			{
				if ((this._CumDensityBottom != value))
				{
					this.OnCumDensityBottomChanging(value);
					this.SendPropertyChanging();
					this._CumDensityBottom = value;
					this.SendPropertyChanged("CumDensityBottom");
					this.OnCumDensityBottomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CumDensityTop", DbType="Decimal(18,4) NOT NULL")]
		public decimal CumDensityTop
		{
			get
			{
				return this._CumDensityTop;
			}
			set
			{
				if ((this._CumDensityTop != value))
				{
					this.OnCumDensityTopChanging(value);
					this.SendPropertyChanging();
					this._CumDensityTop = value;
					this.SendPropertyChanged("CumDensityTop");
					this.OnCumDensityTopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubsidyDensityRangeGroup_SubsidyDensityRange", Storage="_SubsidyDensityRangeGroup", ThisKey="SubsidyDensityRangeGroupID", OtherKey="SubsidyDensityRangeGroupID", IsForeignKey=true)]
		public SubsidyDensityRangeGroup SubsidyDensityRangeGroup
		{
			get
			{
				return this._SubsidyDensityRangeGroup.Entity;
			}
			set
			{
				SubsidyDensityRangeGroup previousValue = this._SubsidyDensityRangeGroup.Entity;
				if (((previousValue != value) 
							|| (this._SubsidyDensityRangeGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubsidyDensityRangeGroup.Entity = null;
						previousValue.SubsidyDensityRanges.Remove(this);
					}
					this._SubsidyDensityRangeGroup.Entity = value;
					if ((value != null))
					{
						value.SubsidyDensityRanges.Add(this);
						this._SubsidyDensityRangeGroupID = value.SubsidyDensityRangeGroupID;
					}
					else
					{
						this._SubsidyDensityRangeGroupID = default(int);
					}
					this.SendPropertyChanged("SubsidyDensityRangeGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblColumnFormatting")]
	public partial class TblColumnFormatting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TblColumnFormattingID;
		
		private int _TblColumnID;
		
		private string _Prefix;
		
		private string _Suffix;
		
		private bool _OmitLeadingZero;
		
		private System.Nullable<decimal> _ExtraDecimalPlaceAbove;
		
		private System.Nullable<decimal> _ExtraDecimalPlace2Above;
		
		private System.Nullable<decimal> _ExtraDecimalPlace3Above;
		
		private string _SuppStylesHeader;
		
		private string _SuppStylesMain;
		
		private byte _Status;
		
		private EntityRef<TblColumn> _TblColumn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTblColumnFormattingIDChanging(int value);
    partial void OnTblColumnFormattingIDChanged();
    partial void OnTblColumnIDChanging(int value);
    partial void OnTblColumnIDChanged();
    partial void OnPrefixChanging(string value);
    partial void OnPrefixChanged();
    partial void OnSuffixChanging(string value);
    partial void OnSuffixChanged();
    partial void OnOmitLeadingZeroChanging(bool value);
    partial void OnOmitLeadingZeroChanged();
    partial void OnExtraDecimalPlaceAboveChanging(System.Nullable<decimal> value);
    partial void OnExtraDecimalPlaceAboveChanged();
    partial void OnExtraDecimalPlace2AboveChanging(System.Nullable<decimal> value);
    partial void OnExtraDecimalPlace2AboveChanged();
    partial void OnExtraDecimalPlace3AboveChanging(System.Nullable<decimal> value);
    partial void OnExtraDecimalPlace3AboveChanged();
    partial void OnSuppStylesHeaderChanging(string value);
    partial void OnSuppStylesHeaderChanged();
    partial void OnSuppStylesMainChanging(string value);
    partial void OnSuppStylesMainChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public TblColumnFormatting()
		{
			this._TblColumn = default(EntityRef<TblColumn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblColumnFormattingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TblColumnFormattingID
		{
			get
			{
				return this._TblColumnFormattingID;
			}
			set
			{
				if ((this._TblColumnFormattingID != value))
				{
					this.OnTblColumnFormattingIDChanging(value);
					this.SendPropertyChanging();
					this._TblColumnFormattingID = value;
					this.SendPropertyChanged("TblColumnFormattingID");
					this.OnTblColumnFormattingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblColumnID", DbType="Int NOT NULL")]
		public int TblColumnID
		{
			get
			{
				return this._TblColumnID;
			}
			set
			{
				if ((this._TblColumnID != value))
				{
					if (this._TblColumn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblColumnIDChanging(value);
					this.SendPropertyChanging();
					this._TblColumnID = value;
					this.SendPropertyChanged("TblColumnID");
					this.OnTblColumnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefix", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Prefix
		{
			get
			{
				return this._Prefix;
			}
			set
			{
				if ((this._Prefix != value))
				{
					this.OnPrefixChanging(value);
					this.SendPropertyChanging();
					this._Prefix = value;
					this.SendPropertyChanged("Prefix");
					this.OnPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suffix", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Suffix
		{
			get
			{
				return this._Suffix;
			}
			set
			{
				if ((this._Suffix != value))
				{
					this.OnSuffixChanging(value);
					this.SendPropertyChanging();
					this._Suffix = value;
					this.SendPropertyChanged("Suffix");
					this.OnSuffixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OmitLeadingZero", DbType="Bit NOT NULL")]
		public bool OmitLeadingZero
		{
			get
			{
				return this._OmitLeadingZero;
			}
			set
			{
				if ((this._OmitLeadingZero != value))
				{
					this.OnOmitLeadingZeroChanging(value);
					this.SendPropertyChanging();
					this._OmitLeadingZero = value;
					this.SendPropertyChanged("OmitLeadingZero");
					this.OnOmitLeadingZeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraDecimalPlaceAbove", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ExtraDecimalPlaceAbove
		{
			get
			{
				return this._ExtraDecimalPlaceAbove;
			}
			set
			{
				if ((this._ExtraDecimalPlaceAbove != value))
				{
					this.OnExtraDecimalPlaceAboveChanging(value);
					this.SendPropertyChanging();
					this._ExtraDecimalPlaceAbove = value;
					this.SendPropertyChanged("ExtraDecimalPlaceAbove");
					this.OnExtraDecimalPlaceAboveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraDecimalPlace2Above", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ExtraDecimalPlace2Above
		{
			get
			{
				return this._ExtraDecimalPlace2Above;
			}
			set
			{
				if ((this._ExtraDecimalPlace2Above != value))
				{
					this.OnExtraDecimalPlace2AboveChanging(value);
					this.SendPropertyChanging();
					this._ExtraDecimalPlace2Above = value;
					this.SendPropertyChanged("ExtraDecimalPlace2Above");
					this.OnExtraDecimalPlace2AboveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraDecimalPlace3Above", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ExtraDecimalPlace3Above
		{
			get
			{
				return this._ExtraDecimalPlace3Above;
			}
			set
			{
				if ((this._ExtraDecimalPlace3Above != value))
				{
					this.OnExtraDecimalPlace3AboveChanging(value);
					this.SendPropertyChanging();
					this._ExtraDecimalPlace3Above = value;
					this.SendPropertyChanged("ExtraDecimalPlace3Above");
					this.OnExtraDecimalPlace3AboveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuppStylesHeader", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SuppStylesHeader
		{
			get
			{
				return this._SuppStylesHeader;
			}
			set
			{
				if ((this._SuppStylesHeader != value))
				{
					this.OnSuppStylesHeaderChanging(value);
					this.SendPropertyChanging();
					this._SuppStylesHeader = value;
					this.SendPropertyChanged("SuppStylesHeader");
					this.OnSuppStylesHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuppStylesMain", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SuppStylesMain
		{
			get
			{
				return this._SuppStylesMain;
			}
			set
			{
				if ((this._SuppStylesMain != value))
				{
					this.OnSuppStylesMainChanging(value);
					this.SendPropertyChanging();
					this._SuppStylesMain = value;
					this.SendPropertyChanged("SuppStylesMain");
					this.OnSuppStylesMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblColumn_TblColumnFormatting", Storage="_TblColumn", ThisKey="TblColumnID", OtherKey="TblColumnID", IsForeignKey=true)]
		public TblColumn TblColumn
		{
			get
			{
				return this._TblColumn.Entity;
			}
			set
			{
				TblColumn previousValue = this._TblColumn.Entity;
				if (((previousValue != value) 
							|| (this._TblColumn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblColumn.Entity = null;
						previousValue.TblColumnFormattings.Remove(this);
					}
					this._TblColumn.Entity = value;
					if ((value != null))
					{
						value.TblColumnFormattings.Add(this);
						this._TblColumnID = value.TblColumnID;
					}
					else
					{
						this._TblColumnID = default(int);
					}
					this.SendPropertyChanged("TblColumn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblRowFieldDisplays")]
	public partial class TblRowFieldDisplay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TblRowFieldDisplayID;
		
		private string _Row;
		
		private string _PopUp;
		
		private string _TblRowPage;
		
		private bool _ResetNeeded;
		
		private EntitySet<TblRow> _TblRows;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTblRowFieldDisplayIDChanging(int value);
    partial void OnTblRowFieldDisplayIDChanged();
    partial void OnRowChanging(string value);
    partial void OnRowChanged();
    partial void OnPopUpChanging(string value);
    partial void OnPopUpChanged();
    partial void OnTblRowPageChanging(string value);
    partial void OnTblRowPageChanged();
    partial void OnResetNeededChanging(bool value);
    partial void OnResetNeededChanged();
    #endregion
		
		public TblRowFieldDisplay()
		{
			this._TblRows = new EntitySet<TblRow>(new Action<TblRow>(this.attach_TblRows), new Action<TblRow>(this.detach_TblRows));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblRowFieldDisplayID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TblRowFieldDisplayID
		{
			get
			{
				return this._TblRowFieldDisplayID;
			}
			set
			{
				if ((this._TblRowFieldDisplayID != value))
				{
					this.OnTblRowFieldDisplayIDChanging(value);
					this.SendPropertyChanging();
					this._TblRowFieldDisplayID = value;
					this.SendPropertyChanged("TblRowFieldDisplayID");
					this.OnTblRowFieldDisplayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Row", DbType="NVarChar(MAX)")]
		public string Row
		{
			get
			{
				return this._Row;
			}
			set
			{
				if ((this._Row != value))
				{
					this.OnRowChanging(value);
					this.SendPropertyChanging();
					this._Row = value;
					this.SendPropertyChanged("Row");
					this.OnRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PopUp", DbType="NVarChar(MAX)")]
		public string PopUp
		{
			get
			{
				return this._PopUp;
			}
			set
			{
				if ((this._PopUp != value))
				{
					this.OnPopUpChanging(value);
					this.SendPropertyChanging();
					this._PopUp = value;
					this.SendPropertyChanged("PopUp");
					this.OnPopUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblRowPage", DbType="NVarChar(MAX)")]
		public string TblRowPage
		{
			get
			{
				return this._TblRowPage;
			}
			set
			{
				if ((this._TblRowPage != value))
				{
					this.OnTblRowPageChanging(value);
					this.SendPropertyChanging();
					this._TblRowPage = value;
					this.SendPropertyChanged("TblRowPage");
					this.OnTblRowPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResetNeeded", DbType="Bit NOT NULL")]
		public bool ResetNeeded
		{
			get
			{
				return this._ResetNeeded;
			}
			set
			{
				if ((this._ResetNeeded != value))
				{
					this.OnResetNeededChanging(value);
					this.SendPropertyChanging();
					this._ResetNeeded = value;
					this.SendPropertyChanged("ResetNeeded");
					this.OnResetNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblRowFieldDisplay_TblRow", Storage="_TblRows", ThisKey="TblRowFieldDisplayID", OtherKey="TblRowFieldDisplayID")]
		public EntitySet<TblRow> TblRows
		{
			get
			{
				return this._TblRows;
			}
			set
			{
				this._TblRows.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblRows(TblRow entity)
		{
			this.SendPropertyChanging();
			entity.TblRowFieldDisplay = this;
		}
		
		private void detach_TblRows(TblRow entity)
		{
			this.SendPropertyChanging();
			entity.TblRowFieldDisplay = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblRowStatusRecord")]
	public partial class TblRowStatusRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecordId;
		
		private int _TblRowId;
		
		private System.DateTime _TimeChanged;
		
		private bool _Adding;
		
		private bool _Deleting;
		
		private EntityRef<TblRow> _TblRow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecordIdChanging(int value);
    partial void OnRecordIdChanged();
    partial void OnTblRowIdChanging(int value);
    partial void OnTblRowIdChanged();
    partial void OnTimeChangedChanging(System.DateTime value);
    partial void OnTimeChangedChanged();
    partial void OnAddingChanging(bool value);
    partial void OnAddingChanged();
    partial void OnDeletingChanging(bool value);
    partial void OnDeletingChanged();
    #endregion
		
		public TblRowStatusRecord()
		{
			this._TblRow = default(EntityRef<TblRow>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecordId
		{
			get
			{
				return this._RecordId;
			}
			set
			{
				if ((this._RecordId != value))
				{
					this.OnRecordIdChanging(value);
					this.SendPropertyChanging();
					this._RecordId = value;
					this.SendPropertyChanged("RecordId");
					this.OnRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblRowId", DbType="Int NOT NULL")]
		public int TblRowId
		{
			get
			{
				return this._TblRowId;
			}
			set
			{
				if ((this._TblRowId != value))
				{
					if (this._TblRow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblRowIdChanging(value);
					this.SendPropertyChanging();
					this._TblRowId = value;
					this.SendPropertyChanged("TblRowId");
					this.OnTblRowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeChanged", DbType="DateTime NOT NULL")]
		public System.DateTime TimeChanged
		{
			get
			{
				return this._TimeChanged;
			}
			set
			{
				if ((this._TimeChanged != value))
				{
					this.OnTimeChangedChanging(value);
					this.SendPropertyChanging();
					this._TimeChanged = value;
					this.SendPropertyChanged("TimeChanged");
					this.OnTimeChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adding", DbType="Bit NOT NULL")]
		public bool Adding
		{
			get
			{
				return this._Adding;
			}
			set
			{
				if ((this._Adding != value))
				{
					this.OnAddingChanging(value);
					this.SendPropertyChanging();
					this._Adding = value;
					this.SendPropertyChanged("Adding");
					this.OnAddingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleting", DbType="Bit NOT NULL")]
		public bool Deleting
		{
			get
			{
				return this._Deleting;
			}
			set
			{
				if ((this._Deleting != value))
				{
					this.OnDeletingChanging(value);
					this.SendPropertyChanging();
					this._Deleting = value;
					this.SendPropertyChanged("Deleting");
					this.OnDeletingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblRow_TblRowStatusRecord", Storage="_TblRow", ThisKey="TblRowId", OtherKey="TblRowID", IsForeignKey=true)]
		public TblRow TblRow
		{
			get
			{
				return this._TblRow.Entity;
			}
			set
			{
				TblRow previousValue = this._TblRow.Entity;
				if (((previousValue != value) 
							|| (this._TblRow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblRow.Entity = null;
						previousValue.TblRowStatusRecords.Remove(this);
					}
					this._TblRow.Entity = value;
					if ((value != null))
					{
						value.TblRowStatusRecords.Add(this);
						this._TblRowId = value.TblRowID;
					}
					else
					{
						this._TblRowId = default(int);
					}
					this.SendPropertyChanged("TblRow");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TextFieldDefinitions")]
	public partial class TextFieldDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TextFieldDefinitionID;
		
		private int _FieldDefinitionID;
		
		private bool _IncludeText;
		
		private bool _IncludeLink;
		
		private bool _Searchable;
		
		private byte _Status;
		
		private EntityRef<FieldDefinition> _FieldDefinition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTextFieldDefinitionIDChanging(int value);
    partial void OnTextFieldDefinitionIDChanged();
    partial void OnFieldDefinitionIDChanging(int value);
    partial void OnFieldDefinitionIDChanged();
    partial void OnIncludeTextChanging(bool value);
    partial void OnIncludeTextChanged();
    partial void OnIncludeLinkChanging(bool value);
    partial void OnIncludeLinkChanged();
    partial void OnSearchableChanging(bool value);
    partial void OnSearchableChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public TextFieldDefinition()
		{
			this._FieldDefinition = default(EntityRef<FieldDefinition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextFieldDefinitionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TextFieldDefinitionID
		{
			get
			{
				return this._TextFieldDefinitionID;
			}
			set
			{
				if ((this._TextFieldDefinitionID != value))
				{
					this.OnTextFieldDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._TextFieldDefinitionID = value;
					this.SendPropertyChanged("TextFieldDefinitionID");
					this.OnTextFieldDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldDefinitionID", DbType="Int NOT NULL")]
		public int FieldDefinitionID
		{
			get
			{
				return this._FieldDefinitionID;
			}
			set
			{
				if ((this._FieldDefinitionID != value))
				{
					if (this._FieldDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFieldDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._FieldDefinitionID = value;
					this.SendPropertyChanged("FieldDefinitionID");
					this.OnFieldDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeText", DbType="Bit NOT NULL")]
		public bool IncludeText
		{
			get
			{
				return this._IncludeText;
			}
			set
			{
				if ((this._IncludeText != value))
				{
					this.OnIncludeTextChanging(value);
					this.SendPropertyChanging();
					this._IncludeText = value;
					this.SendPropertyChanged("IncludeText");
					this.OnIncludeTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeLink", DbType="Bit NOT NULL")]
		public bool IncludeLink
		{
			get
			{
				return this._IncludeLink;
			}
			set
			{
				if ((this._IncludeLink != value))
				{
					this.OnIncludeLinkChanging(value);
					this.SendPropertyChanging();
					this._IncludeLink = value;
					this.SendPropertyChanged("IncludeLink");
					this.OnIncludeLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Searchable", DbType="Bit NOT NULL")]
		public bool Searchable
		{
			get
			{
				return this._Searchable;
			}
			set
			{
				if ((this._Searchable != value))
				{
					this.OnSearchableChanging(value);
					this.SendPropertyChanging();
					this._Searchable = value;
					this.SendPropertyChanged("Searchable");
					this.OnSearchableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FieldDefinition_TextFieldDefinition", Storage="_FieldDefinition", ThisKey="FieldDefinitionID", OtherKey="FieldDefinitionID", IsForeignKey=true)]
		public FieldDefinition FieldDefinition
		{
			get
			{
				return this._FieldDefinition.Entity;
			}
			set
			{
				FieldDefinition previousValue = this._FieldDefinition.Entity;
				if (((previousValue != value) 
							|| (this._FieldDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FieldDefinition.Entity = null;
						previousValue.TextFieldDefinitions.Remove(this);
					}
					this._FieldDefinition.Entity = value;
					if ((value != null))
					{
						value.TextFieldDefinitions.Add(this);
						this._FieldDefinitionID = value.FieldDefinitionID;
					}
					else
					{
						this._FieldDefinitionID = default(int);
					}
					this.SendPropertyChanged("FieldDefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TextFields")]
	public partial class TextField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TextFieldID;
		
		private int _FieldID;
		
		private string _Text;
		
		private string _Link;
		
		private byte _Status;
		
		private EntitySet<SearchWordTextField> _SearchWordTextFields;
		
		private EntityRef<Field> _Field;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTextFieldIDChanging(int value);
    partial void OnTextFieldIDChanged();
    partial void OnFieldIDChanging(int value);
    partial void OnFieldIDChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public TextField()
		{
			this._SearchWordTextFields = new EntitySet<SearchWordTextField>(new Action<SearchWordTextField>(this.attach_SearchWordTextFields), new Action<SearchWordTextField>(this.detach_SearchWordTextFields));
			this._Field = default(EntityRef<Field>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextFieldID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TextFieldID
		{
			get
			{
				return this._TextFieldID;
			}
			set
			{
				if ((this._TextFieldID != value))
				{
					this.OnTextFieldIDChanging(value);
					this.SendPropertyChanging();
					this._TextFieldID = value;
					this.SendPropertyChanged("TextFieldID");
					this.OnTextFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldID", DbType="Int NOT NULL")]
		public int FieldID
		{
			get
			{
				return this._FieldID;
			}
			set
			{
				if ((this._FieldID != value))
				{
					if (this._Field.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFieldIDChanging(value);
					this.SendPropertyChanging();
					this._FieldID = value;
					this.SendPropertyChanged("FieldID");
					this.OnFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TextField_SearchWordTextField", Storage="_SearchWordTextFields", ThisKey="TextFieldID", OtherKey="TextFieldID")]
		public EntitySet<SearchWordTextField> SearchWordTextFields
		{
			get
			{
				return this._SearchWordTextFields;
			}
			set
			{
				this._SearchWordTextFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Field_TextField", Storage="_Field", ThisKey="FieldID", OtherKey="FieldID", IsForeignKey=true)]
		public Field Field
		{
			get
			{
				return this._Field.Entity;
			}
			set
			{
				Field previousValue = this._Field.Entity;
				if (((previousValue != value) 
							|| (this._Field.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Field.Entity = null;
						previousValue.TextFields.Remove(this);
					}
					this._Field.Entity = value;
					if ((value != null))
					{
						value.TextFields.Add(this);
						this._FieldID = value.FieldID;
					}
					else
					{
						this._FieldID = default(int);
					}
					this.SendPropertyChanged("Field");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SearchWordTextFields(SearchWordTextField entity)
		{
			this.SendPropertyChanging();
			entity.TextField = this;
		}
		
		private void detach_SearchWordTextFields(SearchWordTextField entity)
		{
			this.SendPropertyChanging();
			entity.TextField = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRatingGroups")]
	public partial class UserRatingGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserRatingGroupID;
		
		private int _RatingGroupID;
		
		private int _RatingGroupPhaseStatusID;
		
		private System.DateTime _WhenMade;
		
		private EntitySet<UserRating> _UserRatings;
		
		private EntityRef<RatingGroup> _RatingGroup;
		
		private EntityRef<RatingGroupPhaseStatus> _RatingGroupPhaseStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserRatingGroupIDChanging(int value);
    partial void OnUserRatingGroupIDChanged();
    partial void OnRatingGroupIDChanging(int value);
    partial void OnRatingGroupIDChanged();
    partial void OnRatingGroupPhaseStatusIDChanging(int value);
    partial void OnRatingGroupPhaseStatusIDChanged();
    partial void OnWhenMadeChanging(System.DateTime value);
    partial void OnWhenMadeChanged();
    #endregion
		
		public UserRatingGroup()
		{
			this._UserRatings = new EntitySet<UserRating>(new Action<UserRating>(this.attach_UserRatings), new Action<UserRating>(this.detach_UserRatings));
			this._RatingGroup = default(EntityRef<RatingGroup>);
			this._RatingGroupPhaseStatus = default(EntityRef<RatingGroupPhaseStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRatingGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserRatingGroupID
		{
			get
			{
				return this._UserRatingGroupID;
			}
			set
			{
				if ((this._UserRatingGroupID != value))
				{
					this.OnUserRatingGroupIDChanging(value);
					this.SendPropertyChanging();
					this._UserRatingGroupID = value;
					this.SendPropertyChanged("UserRatingGroupID");
					this.OnUserRatingGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingGroupID", DbType="Int NOT NULL")]
		public int RatingGroupID
		{
			get
			{
				return this._RatingGroupID;
			}
			set
			{
				if ((this._RatingGroupID != value))
				{
					if (this._RatingGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingGroupIDChanging(value);
					this.SendPropertyChanging();
					this._RatingGroupID = value;
					this.SendPropertyChanged("RatingGroupID");
					this.OnRatingGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingGroupPhaseStatusID", DbType="Int NOT NULL")]
		public int RatingGroupPhaseStatusID
		{
			get
			{
				return this._RatingGroupPhaseStatusID;
			}
			set
			{
				if ((this._RatingGroupPhaseStatusID != value))
				{
					if (this._RatingGroupPhaseStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingGroupPhaseStatusIDChanging(value);
					this.SendPropertyChanging();
					this._RatingGroupPhaseStatusID = value;
					this.SendPropertyChanged("RatingGroupPhaseStatusID");
					this.OnRatingGroupPhaseStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhenMade", DbType="DateTime NOT NULL")]
		public System.DateTime WhenMade
		{
			get
			{
				return this._WhenMade;
			}
			set
			{
				if ((this._WhenMade != value))
				{
					this.OnWhenMadeChanging(value);
					this.SendPropertyChanging();
					this._WhenMade = value;
					this.SendPropertyChanged("WhenMade");
					this.OnWhenMadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRatingGroup_UserRating", Storage="_UserRatings", ThisKey="UserRatingGroupID", OtherKey="UserRatingGroupID")]
		public EntitySet<UserRating> UserRatings
		{
			get
			{
				return this._UserRatings;
			}
			set
			{
				this._UserRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroup_UserRatingGroup", Storage="_RatingGroup", ThisKey="RatingGroupID", OtherKey="RatingGroupID", IsForeignKey=true)]
		public RatingGroup RatingGroup
		{
			get
			{
				return this._RatingGroup.Entity;
			}
			set
			{
				RatingGroup previousValue = this._RatingGroup.Entity;
				if (((previousValue != value) 
							|| (this._RatingGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingGroup.Entity = null;
						previousValue.UserRatingGroups.Remove(this);
					}
					this._RatingGroup.Entity = value;
					if ((value != null))
					{
						value.UserRatingGroups.Add(this);
						this._RatingGroupID = value.RatingGroupID;
					}
					else
					{
						this._RatingGroupID = default(int);
					}
					this.SendPropertyChanged("RatingGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroupPhaseStatus_UserRatingGroup", Storage="_RatingGroupPhaseStatus", ThisKey="RatingGroupPhaseStatusID", OtherKey="RatingGroupPhaseStatusID", IsForeignKey=true)]
		public RatingGroupPhaseStatus RatingGroupPhaseStatus
		{
			get
			{
				return this._RatingGroupPhaseStatus.Entity;
			}
			set
			{
				RatingGroupPhaseStatus previousValue = this._RatingGroupPhaseStatus.Entity;
				if (((previousValue != value) 
							|| (this._RatingGroupPhaseStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingGroupPhaseStatus.Entity = null;
						previousValue.UserRatingGroups.Remove(this);
					}
					this._RatingGroupPhaseStatus.Entity = value;
					if ((value != null))
					{
						value.UserRatingGroups.Add(this);
						this._RatingGroupPhaseStatusID = value.RatingGroupPhaseStatusID;
					}
					else
					{
						this._RatingGroupPhaseStatusID = default(int);
					}
					this.SendPropertyChanged("RatingGroupPhaseStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRatings(UserRating entity)
		{
			this.SendPropertyChanging();
			entity.UserRatingGroup = this;
		}
		
		private void detach_UserRatings(UserRating entity)
		{
			this.SendPropertyChanging();
			entity.UserRatingGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private bool _SuperUser;
		
		private decimal _TrustPointsRatioTotals;
		
		private byte _Status;
		
		private EntitySet<ChangesGroup> _ChangesGroups;
		
		private EntitySet<ChoiceGroup> _ChoiceGroups;
		
		private EntitySet<PointsAdjustment> _PointsAdjustments;
		
		private EntitySet<RatingCharacteristic> _RatingCharacteristics;
		
		private EntitySet<RatingGroupResolution> _RatingGroupResolutions;
		
		private EntitySet<RatingPhaseGroup> _RatingPhaseGroups;
		
		private EntitySet<RatingPlan> _RatingPlans;
		
		private EntitySet<RewardPendingPointsTracker> _RewardPendingPointsTrackers;
		
		private EntitySet<SubsidyDensityRangeGroup> _SubsidyDensityRangeGroups;
		
		private EntitySet<UsersAdministrationRightsGroup> _UsersAdministrationRightsGroups;
		
		private EntitySet<UsersRight> _UsersRights;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<UserCheckIn> _UserCheckIns;
		
		private EntitySet<UserRatingsToAdd> _UserRatingsToAdds;
		
		private EntityRef<UserInfo> _UserInfos;
		
		private EntitySet<TrustTrackerForChoiceInGroup> _TrustTrackerForChoiceInGroups;
		
		private EntitySet<Rating> _Ratings;
		
		private EntitySet<UserRating> _UserRatings;
		
		private EntitySet<PointsTotal> _PointsTotals;
		
		private EntitySet<TrustTracker> _TrustTrackers;
		
		private EntitySet<UserInteraction> _UserInteractions;
		
		private EntitySet<UserInteraction> _UserInteractions1;
		
		private EntitySet<Tbl> _Tbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnSuperUserChanging(bool value);
    partial void OnSuperUserChanged();
    partial void OnTrustPointsRatioTotalsChanging(decimal value);
    partial void OnTrustPointsRatioTotalsChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public User()
		{
			this._ChangesGroups = new EntitySet<ChangesGroup>(new Action<ChangesGroup>(this.attach_ChangesGroups), new Action<ChangesGroup>(this.detach_ChangesGroups));
			this._ChoiceGroups = new EntitySet<ChoiceGroup>(new Action<ChoiceGroup>(this.attach_ChoiceGroups), new Action<ChoiceGroup>(this.detach_ChoiceGroups));
			this._PointsAdjustments = new EntitySet<PointsAdjustment>(new Action<PointsAdjustment>(this.attach_PointsAdjustments), new Action<PointsAdjustment>(this.detach_PointsAdjustments));
			this._RatingCharacteristics = new EntitySet<RatingCharacteristic>(new Action<RatingCharacteristic>(this.attach_RatingCharacteristics), new Action<RatingCharacteristic>(this.detach_RatingCharacteristics));
			this._RatingGroupResolutions = new EntitySet<RatingGroupResolution>(new Action<RatingGroupResolution>(this.attach_RatingGroupResolutions), new Action<RatingGroupResolution>(this.detach_RatingGroupResolutions));
			this._RatingPhaseGroups = new EntitySet<RatingPhaseGroup>(new Action<RatingPhaseGroup>(this.attach_RatingPhaseGroups), new Action<RatingPhaseGroup>(this.detach_RatingPhaseGroups));
			this._RatingPlans = new EntitySet<RatingPlan>(new Action<RatingPlan>(this.attach_RatingPlans), new Action<RatingPlan>(this.detach_RatingPlans));
			this._RewardPendingPointsTrackers = new EntitySet<RewardPendingPointsTracker>(new Action<RewardPendingPointsTracker>(this.attach_RewardPendingPointsTrackers), new Action<RewardPendingPointsTracker>(this.detach_RewardPendingPointsTrackers));
			this._SubsidyDensityRangeGroups = new EntitySet<SubsidyDensityRangeGroup>(new Action<SubsidyDensityRangeGroup>(this.attach_SubsidyDensityRangeGroups), new Action<SubsidyDensityRangeGroup>(this.detach_SubsidyDensityRangeGroups));
			this._UsersAdministrationRightsGroups = new EntitySet<UsersAdministrationRightsGroup>(new Action<UsersAdministrationRightsGroup>(this.attach_UsersAdministrationRightsGroups), new Action<UsersAdministrationRightsGroup>(this.detach_UsersAdministrationRightsGroups));
			this._UsersRights = new EntitySet<UsersRight>(new Action<UsersRight>(this.attach_UsersRights), new Action<UsersRight>(this.detach_UsersRights));
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._UserCheckIns = new EntitySet<UserCheckIn>(new Action<UserCheckIn>(this.attach_UserCheckIns), new Action<UserCheckIn>(this.detach_UserCheckIns));
			this._UserRatingsToAdds = new EntitySet<UserRatingsToAdd>(new Action<UserRatingsToAdd>(this.attach_UserRatingsToAdds), new Action<UserRatingsToAdd>(this.detach_UserRatingsToAdds));
			this._UserInfos = default(EntityRef<UserInfo>);
			this._TrustTrackerForChoiceInGroups = new EntitySet<TrustTrackerForChoiceInGroup>(new Action<TrustTrackerForChoiceInGroup>(this.attach_TrustTrackerForChoiceInGroups), new Action<TrustTrackerForChoiceInGroup>(this.detach_TrustTrackerForChoiceInGroups));
			this._Ratings = new EntitySet<Rating>(new Action<Rating>(this.attach_Ratings), new Action<Rating>(this.detach_Ratings));
			this._UserRatings = new EntitySet<UserRating>(new Action<UserRating>(this.attach_UserRatings), new Action<UserRating>(this.detach_UserRatings));
			this._PointsTotals = new EntitySet<PointsTotal>(new Action<PointsTotal>(this.attach_PointsTotals), new Action<PointsTotal>(this.detach_PointsTotals));
			this._TrustTrackers = new EntitySet<TrustTracker>(new Action<TrustTracker>(this.attach_TrustTrackers), new Action<TrustTracker>(this.detach_TrustTrackers));
			this._UserInteractions = new EntitySet<UserInteraction>(new Action<UserInteraction>(this.attach_UserInteractions), new Action<UserInteraction>(this.detach_UserInteractions));
			this._UserInteractions1 = new EntitySet<UserInteraction>(new Action<UserInteraction>(this.attach_UserInteractions1), new Action<UserInteraction>(this.detach_UserInteractions1));
			this._Tbls = new EntitySet<Tbl>(new Action<Tbl>(this.attach_Tbls), new Action<Tbl>(this.detach_Tbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperUser", DbType="Bit NOT NULL")]
		public bool SuperUser
		{
			get
			{
				return this._SuperUser;
			}
			set
			{
				if ((this._SuperUser != value))
				{
					this.OnSuperUserChanging(value);
					this.SendPropertyChanging();
					this._SuperUser = value;
					this.SendPropertyChanged("SuperUser");
					this.OnSuperUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustPointsRatioTotals", DbType="Decimal(18,4) NOT NULL")]
		public decimal TrustPointsRatioTotals
		{
			get
			{
				return this._TrustPointsRatioTotals;
			}
			set
			{
				if ((this._TrustPointsRatioTotals != value))
				{
					this.OnTrustPointsRatioTotalsChanging(value);
					this.SendPropertyChanging();
					this._TrustPointsRatioTotals = value;
					this.SendPropertyChanged("TrustPointsRatioTotals");
					this.OnTrustPointsRatioTotalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ChangesGroup", Storage="_ChangesGroups", ThisKey="UserID", OtherKey="Creator")]
		public EntitySet<ChangesGroup> ChangesGroups
		{
			get
			{
				return this._ChangesGroups;
			}
			set
			{
				this._ChangesGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ChoiceGroup", Storage="_ChoiceGroups", ThisKey="UserID", OtherKey="Creator")]
		public EntitySet<ChoiceGroup> ChoiceGroups
		{
			get
			{
				return this._ChoiceGroups;
			}
			set
			{
				this._ChoiceGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PointsAdjustment", Storage="_PointsAdjustments", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<PointsAdjustment> PointsAdjustments
		{
			get
			{
				return this._PointsAdjustments;
			}
			set
			{
				this._PointsAdjustments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RatingCharacteristic", Storage="_RatingCharacteristics", ThisKey="UserID", OtherKey="Creator")]
		public EntitySet<RatingCharacteristic> RatingCharacteristics
		{
			get
			{
				return this._RatingCharacteristics;
			}
			set
			{
				this._RatingCharacteristics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RatingGroupResolution", Storage="_RatingGroupResolutions", ThisKey="UserID", OtherKey="Creator")]
		public EntitySet<RatingGroupResolution> RatingGroupResolutions
		{
			get
			{
				return this._RatingGroupResolutions;
			}
			set
			{
				this._RatingGroupResolutions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RatingPhaseGroup", Storage="_RatingPhaseGroups", ThisKey="UserID", OtherKey="Creator")]
		public EntitySet<RatingPhaseGroup> RatingPhaseGroups
		{
			get
			{
				return this._RatingPhaseGroups;
			}
			set
			{
				this._RatingPhaseGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RatingPlan", Storage="_RatingPlans", ThisKey="UserID", OtherKey="Creator")]
		public EntitySet<RatingPlan> RatingPlans
		{
			get
			{
				return this._RatingPlans;
			}
			set
			{
				this._RatingPlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RewardPendingPointsTracker", Storage="_RewardPendingPointsTrackers", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<RewardPendingPointsTracker> RewardPendingPointsTrackers
		{
			get
			{
				return this._RewardPendingPointsTrackers;
			}
			set
			{
				this._RewardPendingPointsTrackers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SubsidyDensityRangeGroup", Storage="_SubsidyDensityRangeGroups", ThisKey="UserID", OtherKey="Creator")]
		public EntitySet<SubsidyDensityRangeGroup> SubsidyDensityRangeGroups
		{
			get
			{
				return this._SubsidyDensityRangeGroups;
			}
			set
			{
				this._SubsidyDensityRangeGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersAdministrationRightsGroup", Storage="_UsersAdministrationRightsGroups", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UsersAdministrationRightsGroup> UsersAdministrationRightsGroups
		{
			get
			{
				return this._UsersAdministrationRightsGroups;
			}
			set
			{
				this._UsersAdministrationRightsGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersRight", Storage="_UsersRights", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UsersRight> UsersRights
		{
			get
			{
				return this._UsersRights;
			}
			set
			{
				this._UsersRights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_Comments", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserCheckIn", Storage="_UserCheckIns", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UserCheckIn> UserCheckIns
		{
			get
			{
				return this._UserCheckIns;
			}
			set
			{
				this._UserCheckIns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRatingsToAdd", Storage="_UserRatingsToAdds", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UserRatingsToAdd> UserRatingsToAdds
		{
			get
			{
				return this._UserRatingsToAdds;
			}
			set
			{
				this._UserRatingsToAdds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserInfo", Storage="_UserInfos", ThisKey="UserID", OtherKey="UserID", IsUnique=true, IsForeignKey=false)]
		public UserInfo UserInfo
		{
			get
			{
				return this._UserInfos.Entity;
			}
			set
			{
				UserInfo previousValue = this._UserInfos.Entity;
				if (((previousValue != value) 
							|| (this._UserInfos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserInfos.Entity = null;
						previousValue.User = null;
					}
					this._UserInfos.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("UserInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TrustTrackerForChoiceInGroup", Storage="_TrustTrackerForChoiceInGroups", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<TrustTrackerForChoiceInGroup> TrustTrackerForChoiceInGroups
		{
			get
			{
				return this._TrustTrackerForChoiceInGroups;
			}
			set
			{
				this._TrustTrackerForChoiceInGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Rating", Storage="_Ratings", ThisKey="UserID", OtherKey="Creator")]
		public EntitySet<Rating> Ratings
		{
			get
			{
				return this._Ratings;
			}
			set
			{
				this._Ratings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRating", Storage="_UserRatings", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UserRating> UserRatings
		{
			get
			{
				return this._UserRatings;
			}
			set
			{
				this._UserRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PointsTotal", Storage="_PointsTotals", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<PointsTotal> PointsTotals
		{
			get
			{
				return this._PointsTotals;
			}
			set
			{
				this._PointsTotals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TrustTracker", Storage="_TrustTrackers", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<TrustTracker> TrustTrackers
		{
			get
			{
				return this._TrustTrackers;
			}
			set
			{
				this._TrustTrackers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserInteraction", Storage="_UserInteractions", ThisKey="UserID", OtherKey="OrigRatingUserID")]
		public EntitySet<UserInteraction> UserInteractions
		{
			get
			{
				return this._UserInteractions;
			}
			set
			{
				this._UserInteractions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserInteraction1", Storage="_UserInteractions1", ThisKey="UserID", OtherKey="LatestRatingUserID")]
		public EntitySet<UserInteraction> UserInteractions1
		{
			get
			{
				return this._UserInteractions1;
			}
			set
			{
				this._UserInteractions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Tbl", Storage="_Tbls", ThisKey="UserID", OtherKey="Creator")]
		public EntitySet<Tbl> Tbls
		{
			get
			{
				return this._Tbls;
			}
			set
			{
				this._Tbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChangesGroups(ChangesGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ChangesGroups(ChangesGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ChoiceGroups(ChoiceGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ChoiceGroups(ChoiceGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PointsAdjustments(PointsAdjustment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PointsAdjustments(PointsAdjustment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_RatingCharacteristics(RatingCharacteristic entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_RatingCharacteristics(RatingCharacteristic entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_RatingGroupResolutions(RatingGroupResolution entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_RatingGroupResolutions(RatingGroupResolution entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_RatingPhaseGroups(RatingPhaseGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_RatingPhaseGroups(RatingPhaseGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_RatingPlans(RatingPlan entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_RatingPlans(RatingPlan entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_RewardPendingPointsTrackers(RewardPendingPointsTracker entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_RewardPendingPointsTrackers(RewardPendingPointsTracker entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_SubsidyDensityRangeGroups(SubsidyDensityRangeGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_SubsidyDensityRangeGroups(SubsidyDensityRangeGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UsersAdministrationRightsGroups(UsersAdministrationRightsGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UsersAdministrationRightsGroups(UsersAdministrationRightsGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UsersRights(UsersRight entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UsersRights(UsersRight entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserCheckIns(UserCheckIn entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserCheckIns(UserCheckIn entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserRatingsToAdds(UserRatingsToAdd entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserRatingsToAdds(UserRatingsToAdd entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TrustTrackerForChoiceInGroups(TrustTrackerForChoiceInGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TrustTrackerForChoiceInGroups(TrustTrackerForChoiceInGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserRatings(UserRating entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserRatings(UserRating entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PointsTotals(PointsTotal entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PointsTotals(PointsTotal entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TrustTrackers(TrustTracker entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TrustTrackers(TrustTracker entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserInteractions(UserInteraction entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserInteractions(UserInteraction entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserInteractions1(UserInteraction entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_UserInteractions1(UserInteraction entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Tbls(Tbl entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Tbls(Tbl entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsersAdministrationRightsGroups")]
	public partial class UsersAdministrationRightsGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UsersAdministrationRightsGroupID;
		
		private System.Nullable<int> _UserID;
		
		private int _PointsManagerID;
		
		private int _AdministrationRightsGroupID;
		
		private byte _Status;
		
		private EntityRef<User> _User;
		
		private EntityRef<AdministrationRightsGroup> _AdministrationRightsGroup;
		
		private EntityRef<PointsManager> _PointsManager;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsersAdministrationRightsGroupIDChanging(int value);
    partial void OnUsersAdministrationRightsGroupIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnPointsManagerIDChanging(int value);
    partial void OnPointsManagerIDChanged();
    partial void OnAdministrationRightsGroupIDChanging(int value);
    partial void OnAdministrationRightsGroupIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public UsersAdministrationRightsGroup()
		{
			this._User = default(EntityRef<User>);
			this._AdministrationRightsGroup = default(EntityRef<AdministrationRightsGroup>);
			this._PointsManager = default(EntityRef<PointsManager>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsersAdministrationRightsGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UsersAdministrationRightsGroupID
		{
			get
			{
				return this._UsersAdministrationRightsGroupID;
			}
			set
			{
				if ((this._UsersAdministrationRightsGroupID != value))
				{
					this.OnUsersAdministrationRightsGroupIDChanging(value);
					this.SendPropertyChanging();
					this._UsersAdministrationRightsGroupID = value;
					this.SendPropertyChanged("UsersAdministrationRightsGroupID");
					this.OnUsersAdministrationRightsGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsManagerID", DbType="Int NOT NULL")]
		public int PointsManagerID
		{
			get
			{
				return this._PointsManagerID;
			}
			set
			{
				if ((this._PointsManagerID != value))
				{
					if (this._PointsManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPointsManagerIDChanging(value);
					this.SendPropertyChanging();
					this._PointsManagerID = value;
					this.SendPropertyChanged("PointsManagerID");
					this.OnPointsManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministrationRightsGroupID", DbType="Int NOT NULL")]
		public int AdministrationRightsGroupID
		{
			get
			{
				return this._AdministrationRightsGroupID;
			}
			set
			{
				if ((this._AdministrationRightsGroupID != value))
				{
					if (this._AdministrationRightsGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdministrationRightsGroupIDChanging(value);
					this.SendPropertyChanging();
					this._AdministrationRightsGroupID = value;
					this.SendPropertyChanged("AdministrationRightsGroupID");
					this.OnAdministrationRightsGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersAdministrationRightsGroup", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UsersAdministrationRightsGroups.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UsersAdministrationRightsGroups.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdministrationRightsGroup_UsersAdministrationRightsGroup", Storage="_AdministrationRightsGroup", ThisKey="AdministrationRightsGroupID", OtherKey="AdministrationRightsGroupID", IsForeignKey=true)]
		public AdministrationRightsGroup AdministrationRightsGroup
		{
			get
			{
				return this._AdministrationRightsGroup.Entity;
			}
			set
			{
				AdministrationRightsGroup previousValue = this._AdministrationRightsGroup.Entity;
				if (((previousValue != value) 
							|| (this._AdministrationRightsGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdministrationRightsGroup.Entity = null;
						previousValue.UsersAdministrationRightsGroups.Remove(this);
					}
					this._AdministrationRightsGroup.Entity = value;
					if ((value != null))
					{
						value.UsersAdministrationRightsGroups.Add(this);
						this._AdministrationRightsGroupID = value.AdministrationRightsGroupID;
					}
					else
					{
						this._AdministrationRightsGroupID = default(int);
					}
					this.SendPropertyChanged("AdministrationRightsGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_UsersAdministrationRightsGroup", Storage="_PointsManager", ThisKey="PointsManagerID", OtherKey="PointsManagerID", IsForeignKey=true)]
		public PointsManager PointsManager
		{
			get
			{
				return this._PointsManager.Entity;
			}
			set
			{
				PointsManager previousValue = this._PointsManager.Entity;
				if (((previousValue != value) 
							|| (this._PointsManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PointsManager.Entity = null;
						previousValue.UsersAdministrationRightsGroups.Remove(this);
					}
					this._PointsManager.Entity = value;
					if ((value != null))
					{
						value.UsersAdministrationRightsGroups.Add(this);
						this._PointsManagerID = value.PointsManagerID;
					}
					else
					{
						this._PointsManagerID = default(int);
					}
					this.SendPropertyChanged("PointsManager");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsersRights")]
	public partial class UsersRight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UsersRightsID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _PointsManagerID;
		
		private bool _MayView;
		
		private bool _MayPredict;
		
		private bool _MayAddTbls;
		
		private bool _MayResolveRatings;
		
		private bool _MayChangeTblRows;
		
		private bool _MayChangeChoiceGroups;
		
		private bool _MayChangeCharacteristics;
		
		private bool _MayChangeCategories;
		
		private bool _MayChangeUsersRights;
		
		private bool _MayAdjustPoints;
		
		private bool _MayChangeProposalSettings;
		
		private string _Name;
		
		private System.Nullable<int> _Creator;
		
		private byte _Status;
		
		private EntityRef<User> _User;
		
		private EntityRef<PointsManager> _PointsManager;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsersRightsIDChanging(int value);
    partial void OnUsersRightsIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnPointsManagerIDChanging(System.Nullable<int> value);
    partial void OnPointsManagerIDChanged();
    partial void OnMayViewChanging(bool value);
    partial void OnMayViewChanged();
    partial void OnMayPredictChanging(bool value);
    partial void OnMayPredictChanged();
    partial void OnMayAddTblsChanging(bool value);
    partial void OnMayAddTblsChanged();
    partial void OnMayResolveRatingsChanging(bool value);
    partial void OnMayResolveRatingsChanged();
    partial void OnMayChangeTblRowsChanging(bool value);
    partial void OnMayChangeTblRowsChanged();
    partial void OnMayChangeChoiceGroupsChanging(bool value);
    partial void OnMayChangeChoiceGroupsChanged();
    partial void OnMayChangeCharacteristicsChanging(bool value);
    partial void OnMayChangeCharacteristicsChanged();
    partial void OnMayChangeCategoriesChanging(bool value);
    partial void OnMayChangeCategoriesChanged();
    partial void OnMayChangeUsersRightsChanging(bool value);
    partial void OnMayChangeUsersRightsChanged();
    partial void OnMayAdjustPointsChanging(bool value);
    partial void OnMayAdjustPointsChanged();
    partial void OnMayChangeProposalSettingsChanging(bool value);
    partial void OnMayChangeProposalSettingsChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public UsersRight()
		{
			this._User = default(EntityRef<User>);
			this._PointsManager = default(EntityRef<PointsManager>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsersRightsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UsersRightsID
		{
			get
			{
				return this._UsersRightsID;
			}
			set
			{
				if ((this._UsersRightsID != value))
				{
					this.OnUsersRightsIDChanging(value);
					this.SendPropertyChanging();
					this._UsersRightsID = value;
					this.SendPropertyChanged("UsersRightsID");
					this.OnUsersRightsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsManagerID", DbType="Int")]
		public System.Nullable<int> PointsManagerID
		{
			get
			{
				return this._PointsManagerID;
			}
			set
			{
				if ((this._PointsManagerID != value))
				{
					if (this._PointsManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPointsManagerIDChanging(value);
					this.SendPropertyChanging();
					this._PointsManagerID = value;
					this.SendPropertyChanged("PointsManagerID");
					this.OnPointsManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayView", DbType="Bit NOT NULL")]
		public bool MayView
		{
			get
			{
				return this._MayView;
			}
			set
			{
				if ((this._MayView != value))
				{
					this.OnMayViewChanging(value);
					this.SendPropertyChanging();
					this._MayView = value;
					this.SendPropertyChanged("MayView");
					this.OnMayViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayPredict", DbType="Bit NOT NULL")]
		public bool MayPredict
		{
			get
			{
				return this._MayPredict;
			}
			set
			{
				if ((this._MayPredict != value))
				{
					this.OnMayPredictChanging(value);
					this.SendPropertyChanging();
					this._MayPredict = value;
					this.SendPropertyChanged("MayPredict");
					this.OnMayPredictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayAddTbls", DbType="Bit NOT NULL")]
		public bool MayAddTbls
		{
			get
			{
				return this._MayAddTbls;
			}
			set
			{
				if ((this._MayAddTbls != value))
				{
					this.OnMayAddTblsChanging(value);
					this.SendPropertyChanging();
					this._MayAddTbls = value;
					this.SendPropertyChanged("MayAddTbls");
					this.OnMayAddTblsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayResolveRatings", DbType="Bit NOT NULL")]
		public bool MayResolveRatings
		{
			get
			{
				return this._MayResolveRatings;
			}
			set
			{
				if ((this._MayResolveRatings != value))
				{
					this.OnMayResolveRatingsChanging(value);
					this.SendPropertyChanging();
					this._MayResolveRatings = value;
					this.SendPropertyChanged("MayResolveRatings");
					this.OnMayResolveRatingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayChangeTblRows", DbType="Bit NOT NULL")]
		public bool MayChangeTblRows
		{
			get
			{
				return this._MayChangeTblRows;
			}
			set
			{
				if ((this._MayChangeTblRows != value))
				{
					this.OnMayChangeTblRowsChanging(value);
					this.SendPropertyChanging();
					this._MayChangeTblRows = value;
					this.SendPropertyChanged("MayChangeTblRows");
					this.OnMayChangeTblRowsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayChangeChoiceGroups", DbType="Bit NOT NULL")]
		public bool MayChangeChoiceGroups
		{
			get
			{
				return this._MayChangeChoiceGroups;
			}
			set
			{
				if ((this._MayChangeChoiceGroups != value))
				{
					this.OnMayChangeChoiceGroupsChanging(value);
					this.SendPropertyChanging();
					this._MayChangeChoiceGroups = value;
					this.SendPropertyChanged("MayChangeChoiceGroups");
					this.OnMayChangeChoiceGroupsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayChangeCharacteristics", DbType="Bit NOT NULL")]
		public bool MayChangeCharacteristics
		{
			get
			{
				return this._MayChangeCharacteristics;
			}
			set
			{
				if ((this._MayChangeCharacteristics != value))
				{
					this.OnMayChangeCharacteristicsChanging(value);
					this.SendPropertyChanging();
					this._MayChangeCharacteristics = value;
					this.SendPropertyChanged("MayChangeCharacteristics");
					this.OnMayChangeCharacteristicsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayChangeCategories", DbType="Bit NOT NULL")]
		public bool MayChangeCategories
		{
			get
			{
				return this._MayChangeCategories;
			}
			set
			{
				if ((this._MayChangeCategories != value))
				{
					this.OnMayChangeCategoriesChanging(value);
					this.SendPropertyChanging();
					this._MayChangeCategories = value;
					this.SendPropertyChanged("MayChangeCategories");
					this.OnMayChangeCategoriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayChangeUsersRights", DbType="Bit NOT NULL")]
		public bool MayChangeUsersRights
		{
			get
			{
				return this._MayChangeUsersRights;
			}
			set
			{
				if ((this._MayChangeUsersRights != value))
				{
					this.OnMayChangeUsersRightsChanging(value);
					this.SendPropertyChanging();
					this._MayChangeUsersRights = value;
					this.SendPropertyChanged("MayChangeUsersRights");
					this.OnMayChangeUsersRightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayAdjustPoints", DbType="Bit NOT NULL")]
		public bool MayAdjustPoints
		{
			get
			{
				return this._MayAdjustPoints;
			}
			set
			{
				if ((this._MayAdjustPoints != value))
				{
					this.OnMayAdjustPointsChanging(value);
					this.SendPropertyChanging();
					this._MayAdjustPoints = value;
					this.SendPropertyChanged("MayAdjustPoints");
					this.OnMayAdjustPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayChangeProposalSettings", DbType="Bit NOT NULL")]
		public bool MayChangeProposalSettings
		{
			get
			{
				return this._MayChangeProposalSettings;
			}
			set
			{
				if ((this._MayChangeProposalSettings != value))
				{
					this.OnMayChangeProposalSettingsChanging(value);
					this.SendPropertyChanging();
					this._MayChangeProposalSettings = value;
					this.SendPropertyChanged("MayChangeProposalSettings");
					this.OnMayChangeProposalSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersRight", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UsersRights.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UsersRights.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_UsersRight", Storage="_PointsManager", ThisKey="PointsManagerID", OtherKey="PointsManagerID", IsForeignKey=true)]
		public PointsManager PointsManager
		{
			get
			{
				return this._PointsManager.Entity;
			}
			set
			{
				PointsManager previousValue = this._PointsManager.Entity;
				if (((previousValue != value) 
							|| (this._PointsManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PointsManager.Entity = null;
						previousValue.UsersRights.Remove(this);
					}
					this._PointsManager.Entity = value;
					if ((value != null))
					{
						value.UsersRights.Add(this);
						this._PointsManagerID = value.PointsManagerID;
					}
					else
					{
						this._PointsManagerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PointsManager");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchWordHierarchyItems")]
	public partial class SearchWordHierarchyItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SearchWordHierarchyItemID;
		
		private int _HierarchyItemID;
		
		private int _SearchWordID;
		
		private EntityRef<HierarchyItem> _HierarchyItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchWordHierarchyItemIDChanging(int value);
    partial void OnSearchWordHierarchyItemIDChanged();
    partial void OnHierarchyItemIDChanging(int value);
    partial void OnHierarchyItemIDChanged();
    partial void OnSearchWordIDChanging(int value);
    partial void OnSearchWordIDChanged();
    #endregion
		
		public SearchWordHierarchyItem()
		{
			this._HierarchyItem = default(EntityRef<HierarchyItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWordHierarchyItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SearchWordHierarchyItemID
		{
			get
			{
				return this._SearchWordHierarchyItemID;
			}
			set
			{
				if ((this._SearchWordHierarchyItemID != value))
				{
					this.OnSearchWordHierarchyItemIDChanging(value);
					this.SendPropertyChanging();
					this._SearchWordHierarchyItemID = value;
					this.SendPropertyChanged("SearchWordHierarchyItemID");
					this.OnSearchWordHierarchyItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HierarchyItemID", DbType="Int NOT NULL")]
		public int HierarchyItemID
		{
			get
			{
				return this._HierarchyItemID;
			}
			set
			{
				if ((this._HierarchyItemID != value))
				{
					if (this._HierarchyItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHierarchyItemIDChanging(value);
					this.SendPropertyChanging();
					this._HierarchyItemID = value;
					this.SendPropertyChanged("HierarchyItemID");
					this.OnHierarchyItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWordID", DbType="Int NOT NULL")]
		public int SearchWordID
		{
			get
			{
				return this._SearchWordID;
			}
			set
			{
				if ((this._SearchWordID != value))
				{
					this.OnSearchWordIDChanging(value);
					this.SendPropertyChanging();
					this._SearchWordID = value;
					this.SendPropertyChanged("SearchWordID");
					this.OnSearchWordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HierarchyItem_SearchWordHierarchyItem", Storage="_HierarchyItem", ThisKey="HierarchyItemID", OtherKey="HierarchyItemID", IsForeignKey=true)]
		public HierarchyItem HierarchyItem
		{
			get
			{
				return this._HierarchyItem.Entity;
			}
			set
			{
				HierarchyItem previousValue = this._HierarchyItem.Entity;
				if (((previousValue != value) 
							|| (this._HierarchyItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HierarchyItem.Entity = null;
						previousValue.SearchWordHierarchyItems.Remove(this);
					}
					this._HierarchyItem.Entity = value;
					if ((value != null))
					{
						value.SearchWordHierarchyItems.Add(this);
						this._HierarchyItemID = value.HierarchyItemID;
					}
					else
					{
						this._HierarchyItemID = default(int);
					}
					this.SendPropertyChanged("HierarchyItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comments")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommentsID;
		
		private int _TblRowID;
		
		private int _UserID;
		
		private string _CommentTitle;
		
		private string _CommentText;
		
		private System.DateTime _DateTime;
		
		private System.Nullable<System.DateTime> _LastDeletedDate;
		
		private byte _Status;
		
		private EntityRef<User> _User;
		
		private EntityRef<TblRow> _TblRow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommentsIDChanging(int value);
    partial void OnCommentsIDChanged();
    partial void OnTblRowIDChanging(int value);
    partial void OnTblRowIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCommentTitleChanging(string value);
    partial void OnCommentTitleChanged();
    partial void OnCommentTextChanging(string value);
    partial void OnCommentTextChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnLastDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDeletedDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public Comment()
		{
			this._User = default(EntityRef<User>);
			this._TblRow = default(EntityRef<TblRow>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CommentsID
		{
			get
			{
				return this._CommentsID;
			}
			set
			{
				if ((this._CommentsID != value))
				{
					this.OnCommentsIDChanging(value);
					this.SendPropertyChanging();
					this._CommentsID = value;
					this.SendPropertyChanged("CommentsID");
					this.OnCommentsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblRowID", DbType="Int NOT NULL")]
		public int TblRowID
		{
			get
			{
				return this._TblRowID;
			}
			set
			{
				if ((this._TblRowID != value))
				{
					if (this._TblRow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblRowIDChanging(value);
					this.SendPropertyChanging();
					this._TblRowID = value;
					this.SendPropertyChanged("TblRowID");
					this.OnTblRowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentTitle", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CommentTitle
		{
			get
			{
				return this._CommentTitle;
			}
			set
			{
				if ((this._CommentTitle != value))
				{
					this.OnCommentTitleChanging(value);
					this.SendPropertyChanging();
					this._CommentTitle = value;
					this.SendPropertyChanged("CommentTitle");
					this.OnCommentTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentText", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CommentText
		{
			get
			{
				return this._CommentText;
			}
			set
			{
				if ((this._CommentText != value))
				{
					this.OnCommentTextChanging(value);
					this.SendPropertyChanging();
					this._CommentText = value;
					this.SendPropertyChanged("CommentText");
					this.OnCommentTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDeletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDeletedDate
		{
			get
			{
				return this._LastDeletedDate;
			}
			set
			{
				if ((this._LastDeletedDate != value))
				{
					this.OnLastDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._LastDeletedDate = value;
					this.SendPropertyChanged("LastDeletedDate");
					this.OnLastDeletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblRow_Comment", Storage="_TblRow", ThisKey="TblRowID", OtherKey="TblRowID", IsForeignKey=true)]
		public TblRow TblRow
		{
			get
			{
				return this._TblRow.Entity;
			}
			set
			{
				TblRow previousValue = this._TblRow.Entity;
				if (((previousValue != value) 
							|| (this._TblRow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblRow.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._TblRow.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._TblRowID = value.TblRowID;
					}
					else
					{
						this._TblRowID = default(int);
					}
					this.SendPropertyChanged("TblRow");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RatingGroups")]
	public partial class RatingGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RatingGroupID;
		
		private int _RatingGroupAttributesID;
		
		private int _TblRowID;
		
		private int _TblColumnID;
		
		private System.Nullable<decimal> _CurrentValueOfFirstRating;
		
		private bool _ValueRecentlyChanged;
		
		private System.Nullable<System.DateTime> _ResolutionTime;
		
		private byte _TypeOfRatingGroup;
		
		private byte _Status;
		
		private bool _HighStakesKnown;
		
		private EntitySet<RatingGroupResolution> _RatingGroupResolutions;
		
		private EntitySet<RatingGroupStatusRecord> _RatingGroupStatusRecords;
		
		private EntitySet<UserRatingGroup> _UserRatingGroups;
		
		private EntitySet<UserRatingsToAdd> _UserRatingsToAdds;
		
		private EntitySet<Rating> _Ratings;
		
		private EntitySet<Rating> _Ratings1;
		
		private EntitySet<Rating> _Ratings2;
		
		private EntitySet<VolatilityTracker> _VolatilityTrackers;
		
		private EntitySet<RatingGroupPhaseStatus> _RatingGroupPhaseStatus;
		
		private EntityRef<RatingGroupAttribute> _RatingGroupAttribute;
		
		private EntityRef<TblRow> _TblRow;
		
		private EntityRef<TblColumn> _TblColumn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatingGroupIDChanging(int value);
    partial void OnRatingGroupIDChanged();
    partial void OnRatingGroupAttributesIDChanging(int value);
    partial void OnRatingGroupAttributesIDChanged();
    partial void OnTblRowIDChanging(int value);
    partial void OnTblRowIDChanged();
    partial void OnTblColumnIDChanging(int value);
    partial void OnTblColumnIDChanged();
    partial void OnCurrentValueOfFirstRatingChanging(System.Nullable<decimal> value);
    partial void OnCurrentValueOfFirstRatingChanged();
    partial void OnValueRecentlyChangedChanging(bool value);
    partial void OnValueRecentlyChangedChanged();
    partial void OnResolutionTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnResolutionTimeChanged();
    partial void OnTypeOfRatingGroupChanging(byte value);
    partial void OnTypeOfRatingGroupChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnHighStakesKnownChanging(bool value);
    partial void OnHighStakesKnownChanged();
    #endregion
		
		public RatingGroup()
		{
			this._RatingGroupResolutions = new EntitySet<RatingGroupResolution>(new Action<RatingGroupResolution>(this.attach_RatingGroupResolutions), new Action<RatingGroupResolution>(this.detach_RatingGroupResolutions));
			this._RatingGroupStatusRecords = new EntitySet<RatingGroupStatusRecord>(new Action<RatingGroupStatusRecord>(this.attach_RatingGroupStatusRecords), new Action<RatingGroupStatusRecord>(this.detach_RatingGroupStatusRecords));
			this._UserRatingGroups = new EntitySet<UserRatingGroup>(new Action<UserRatingGroup>(this.attach_UserRatingGroups), new Action<UserRatingGroup>(this.detach_UserRatingGroups));
			this._UserRatingsToAdds = new EntitySet<UserRatingsToAdd>(new Action<UserRatingsToAdd>(this.attach_UserRatingsToAdds), new Action<UserRatingsToAdd>(this.detach_UserRatingsToAdds));
			this._Ratings = new EntitySet<Rating>(new Action<Rating>(this.attach_Ratings), new Action<Rating>(this.detach_Ratings));
			this._Ratings1 = new EntitySet<Rating>(new Action<Rating>(this.attach_Ratings1), new Action<Rating>(this.detach_Ratings1));
			this._Ratings2 = new EntitySet<Rating>(new Action<Rating>(this.attach_Ratings2), new Action<Rating>(this.detach_Ratings2));
			this._VolatilityTrackers = new EntitySet<VolatilityTracker>(new Action<VolatilityTracker>(this.attach_VolatilityTrackers), new Action<VolatilityTracker>(this.detach_VolatilityTrackers));
			this._RatingGroupPhaseStatus = new EntitySet<RatingGroupPhaseStatus>(new Action<RatingGroupPhaseStatus>(this.attach_RatingGroupPhaseStatus), new Action<RatingGroupPhaseStatus>(this.detach_RatingGroupPhaseStatus));
			this._RatingGroupAttribute = default(EntityRef<RatingGroupAttribute>);
			this._TblRow = default(EntityRef<TblRow>);
			this._TblColumn = default(EntityRef<TblColumn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RatingGroupID
		{
			get
			{
				return this._RatingGroupID;
			}
			set
			{
				if ((this._RatingGroupID != value))
				{
					this.OnRatingGroupIDChanging(value);
					this.SendPropertyChanging();
					this._RatingGroupID = value;
					this.SendPropertyChanged("RatingGroupID");
					this.OnRatingGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingGroupAttributesID", DbType="Int NOT NULL")]
		public int RatingGroupAttributesID
		{
			get
			{
				return this._RatingGroupAttributesID;
			}
			set
			{
				if ((this._RatingGroupAttributesID != value))
				{
					if (this._RatingGroupAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingGroupAttributesIDChanging(value);
					this.SendPropertyChanging();
					this._RatingGroupAttributesID = value;
					this.SendPropertyChanged("RatingGroupAttributesID");
					this.OnRatingGroupAttributesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblRowID", DbType="Int NOT NULL")]
		public int TblRowID
		{
			get
			{
				return this._TblRowID;
			}
			set
			{
				if ((this._TblRowID != value))
				{
					if (this._TblRow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblRowIDChanging(value);
					this.SendPropertyChanging();
					this._TblRowID = value;
					this.SendPropertyChanged("TblRowID");
					this.OnTblRowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblColumnID", DbType="Int NOT NULL")]
		public int TblColumnID
		{
			get
			{
				return this._TblColumnID;
			}
			set
			{
				if ((this._TblColumnID != value))
				{
					if (this._TblColumn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblColumnIDChanging(value);
					this.SendPropertyChanging();
					this._TblColumnID = value;
					this.SendPropertyChanged("TblColumnID");
					this.OnTblColumnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentValueOfFirstRating", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> CurrentValueOfFirstRating
		{
			get
			{
				return this._CurrentValueOfFirstRating;
			}
			set
			{
				if ((this._CurrentValueOfFirstRating != value))
				{
					this.OnCurrentValueOfFirstRatingChanging(value);
					this.SendPropertyChanging();
					this._CurrentValueOfFirstRating = value;
					this.SendPropertyChanged("CurrentValueOfFirstRating");
					this.OnCurrentValueOfFirstRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueRecentlyChanged", DbType="Bit NOT NULL")]
		public bool ValueRecentlyChanged
		{
			get
			{
				return this._ValueRecentlyChanged;
			}
			set
			{
				if ((this._ValueRecentlyChanged != value))
				{
					this.OnValueRecentlyChangedChanging(value);
					this.SendPropertyChanging();
					this._ValueRecentlyChanged = value;
					this.SendPropertyChanged("ValueRecentlyChanged");
					this.OnValueRecentlyChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolutionTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResolutionTime
		{
			get
			{
				return this._ResolutionTime;
			}
			set
			{
				if ((this._ResolutionTime != value))
				{
					this.OnResolutionTimeChanging(value);
					this.SendPropertyChanging();
					this._ResolutionTime = value;
					this.SendPropertyChanged("ResolutionTime");
					this.OnResolutionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfRatingGroup", DbType="TinyInt NOT NULL")]
		public byte TypeOfRatingGroup
		{
			get
			{
				return this._TypeOfRatingGroup;
			}
			set
			{
				if ((this._TypeOfRatingGroup != value))
				{
					this.OnTypeOfRatingGroupChanging(value);
					this.SendPropertyChanging();
					this._TypeOfRatingGroup = value;
					this.SendPropertyChanged("TypeOfRatingGroup");
					this.OnTypeOfRatingGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighStakesKnown", DbType="Bit NOT NULL")]
		public bool HighStakesKnown
		{
			get
			{
				return this._HighStakesKnown;
			}
			set
			{
				if ((this._HighStakesKnown != value))
				{
					this.OnHighStakesKnownChanging(value);
					this.SendPropertyChanging();
					this._HighStakesKnown = value;
					this.SendPropertyChanged("HighStakesKnown");
					this.OnHighStakesKnownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroup_RatingGroupResolution", Storage="_RatingGroupResolutions", ThisKey="RatingGroupID", OtherKey="RatingGroupID")]
		public EntitySet<RatingGroupResolution> RatingGroupResolutions
		{
			get
			{
				return this._RatingGroupResolutions;
			}
			set
			{
				this._RatingGroupResolutions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroup_RatingGroupStatusRecord", Storage="_RatingGroupStatusRecords", ThisKey="RatingGroupID", OtherKey="RatingGroupID")]
		public EntitySet<RatingGroupStatusRecord> RatingGroupStatusRecords
		{
			get
			{
				return this._RatingGroupStatusRecords;
			}
			set
			{
				this._RatingGroupStatusRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroup_UserRatingGroup", Storage="_UserRatingGroups", ThisKey="RatingGroupID", OtherKey="RatingGroupID")]
		public EntitySet<UserRatingGroup> UserRatingGroups
		{
			get
			{
				return this._UserRatingGroups;
			}
			set
			{
				this._UserRatingGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroup_UserRatingsToAdd", Storage="_UserRatingsToAdds", ThisKey="RatingGroupID", OtherKey="TopRatingGroupID")]
		public EntitySet<UserRatingsToAdd> UserRatingsToAdds
		{
			get
			{
				return this._UserRatingsToAdds;
			}
			set
			{
				this._UserRatingsToAdds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroup_Rating", Storage="_Ratings", ThisKey="RatingGroupID", OtherKey="RatingGroupID")]
		public EntitySet<Rating> Ratings
		{
			get
			{
				return this._Ratings;
			}
			set
			{
				this._Ratings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroup_Rating1", Storage="_Ratings1", ThisKey="RatingGroupID", OtherKey="OwnedRatingGroupID")]
		public EntitySet<Rating> Ratings1
		{
			get
			{
				return this._Ratings1;
			}
			set
			{
				this._Ratings1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroup_Rating2", Storage="_Ratings2", ThisKey="RatingGroupID", OtherKey="TopmostRatingGroupID")]
		public EntitySet<Rating> Ratings2
		{
			get
			{
				return this._Ratings2;
			}
			set
			{
				this._Ratings2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroup_VolatilityTracker", Storage="_VolatilityTrackers", ThisKey="RatingGroupID", OtherKey="RatingGroupID")]
		public EntitySet<VolatilityTracker> VolatilityTrackers
		{
			get
			{
				return this._VolatilityTrackers;
			}
			set
			{
				this._VolatilityTrackers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroup_RatingGroupPhaseStatus", Storage="_RatingGroupPhaseStatus", ThisKey="RatingGroupID", OtherKey="RatingGroupID")]
		public EntitySet<RatingGroupPhaseStatus> RatingGroupPhaseStatus
		{
			get
			{
				return this._RatingGroupPhaseStatus;
			}
			set
			{
				this._RatingGroupPhaseStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroupAttribute_RatingGroup", Storage="_RatingGroupAttribute", ThisKey="RatingGroupAttributesID", OtherKey="RatingGroupAttributesID", IsForeignKey=true)]
		public RatingGroupAttribute RatingGroupAttribute
		{
			get
			{
				return this._RatingGroupAttribute.Entity;
			}
			set
			{
				RatingGroupAttribute previousValue = this._RatingGroupAttribute.Entity;
				if (((previousValue != value) 
							|| (this._RatingGroupAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingGroupAttribute.Entity = null;
						previousValue.RatingGroups.Remove(this);
					}
					this._RatingGroupAttribute.Entity = value;
					if ((value != null))
					{
						value.RatingGroups.Add(this);
						this._RatingGroupAttributesID = value.RatingGroupAttributesID;
					}
					else
					{
						this._RatingGroupAttributesID = default(int);
					}
					this.SendPropertyChanged("RatingGroupAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblRow_RatingGroup", Storage="_TblRow", ThisKey="TblRowID", OtherKey="TblRowID", IsForeignKey=true)]
		public TblRow TblRow
		{
			get
			{
				return this._TblRow.Entity;
			}
			set
			{
				TblRow previousValue = this._TblRow.Entity;
				if (((previousValue != value) 
							|| (this._TblRow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblRow.Entity = null;
						previousValue.RatingGroups.Remove(this);
					}
					this._TblRow.Entity = value;
					if ((value != null))
					{
						value.RatingGroups.Add(this);
						this._TblRowID = value.TblRowID;
					}
					else
					{
						this._TblRowID = default(int);
					}
					this.SendPropertyChanged("TblRow");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblColumn_RatingGroup", Storage="_TblColumn", ThisKey="TblColumnID", OtherKey="TblColumnID", IsForeignKey=true)]
		public TblColumn TblColumn
		{
			get
			{
				return this._TblColumn.Entity;
			}
			set
			{
				TblColumn previousValue = this._TblColumn.Entity;
				if (((previousValue != value) 
							|| (this._TblColumn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblColumn.Entity = null;
						previousValue.RatingGroups.Remove(this);
					}
					this._TblColumn.Entity = value;
					if ((value != null))
					{
						value.RatingGroups.Add(this);
						this._TblColumnID = value.TblColumnID;
					}
					else
					{
						this._TblColumnID = default(int);
					}
					this.SendPropertyChanged("TblColumn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RatingGroupResolutions(RatingGroupResolution entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroup = this;
		}
		
		private void detach_RatingGroupResolutions(RatingGroupResolution entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroup = null;
		}
		
		private void attach_RatingGroupStatusRecords(RatingGroupStatusRecord entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroup = this;
		}
		
		private void detach_RatingGroupStatusRecords(RatingGroupStatusRecord entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroup = null;
		}
		
		private void attach_UserRatingGroups(UserRatingGroup entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroup = this;
		}
		
		private void detach_UserRatingGroups(UserRatingGroup entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroup = null;
		}
		
		private void attach_UserRatingsToAdds(UserRatingsToAdd entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroup = this;
		}
		
		private void detach_UserRatingsToAdds(UserRatingsToAdd entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroup = null;
		}
		
		private void attach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroup = this;
		}
		
		private void detach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroup = null;
		}
		
		private void attach_Ratings1(Rating entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroup1 = this;
		}
		
		private void detach_Ratings1(Rating entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroup1 = null;
		}
		
		private void attach_Ratings2(Rating entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroup2 = this;
		}
		
		private void detach_Ratings2(Rating entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroup2 = null;
		}
		
		private void attach_VolatilityTrackers(VolatilityTracker entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroup = this;
		}
		
		private void detach_VolatilityTrackers(VolatilityTracker entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroup = null;
		}
		
		private void attach_RatingGroupPhaseStatus(RatingGroupPhaseStatus entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroup = this;
		}
		
		private void detach_RatingGroupPhaseStatus(RatingGroupPhaseStatus entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatabaseStatus")]
	public partial class DatabaseStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DatabaseStatusID;
		
		private bool _PreventChanges;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDatabaseStatusIDChanging(int value);
    partial void OnDatabaseStatusIDChanged();
    partial void OnPreventChangesChanging(bool value);
    partial void OnPreventChangesChanged();
    #endregion
		
		public DatabaseStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseStatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DatabaseStatusID
		{
			get
			{
				return this._DatabaseStatusID;
			}
			set
			{
				if ((this._DatabaseStatusID != value))
				{
					this.OnDatabaseStatusIDChanging(value);
					this.SendPropertyChanging();
					this._DatabaseStatusID = value;
					this.SendPropertyChanged("DatabaseStatusID");
					this.OnDatabaseStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreventChanges", DbType="Bit NOT NULL")]
		public bool PreventChanges
		{
			get
			{
				return this._PreventChanges;
			}
			set
			{
				if ((this._PreventChanges != value))
				{
					this.OnPreventChangesChanging(value);
					this.SendPropertyChanging();
					this._PreventChanges = value;
					this.SendPropertyChanged("PreventChanges");
					this.OnPreventChangesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleStatus")]
	public partial class RoleStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleStatusID;
		
		private string _RoleID;
		
		private System.Nullable<System.DateTime> _LastCheckIn;
		
		private bool _IsWorkerRole;
		
		private bool _IsBackgroundProcessing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleStatusIDChanging(int value);
    partial void OnRoleStatusIDChanged();
    partial void OnRoleIDChanging(string value);
    partial void OnRoleIDChanged();
    partial void OnLastCheckInChanging(System.Nullable<System.DateTime> value);
    partial void OnLastCheckInChanged();
    partial void OnIsWorkerRoleChanging(bool value);
    partial void OnIsWorkerRoleChanged();
    partial void OnIsBackgroundProcessingChanging(bool value);
    partial void OnIsBackgroundProcessingChanged();
    #endregion
		
		public RoleStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleStatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleStatusID
		{
			get
			{
				return this._RoleStatusID;
			}
			set
			{
				if ((this._RoleStatusID != value))
				{
					this.OnRoleStatusIDChanging(value);
					this.SendPropertyChanging();
					this._RoleStatusID = value;
					this.SendPropertyChanged("RoleStatusID");
					this.OnRoleStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCheckIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCheckIn
		{
			get
			{
				return this._LastCheckIn;
			}
			set
			{
				if ((this._LastCheckIn != value))
				{
					this.OnLastCheckInChanging(value);
					this.SendPropertyChanging();
					this._LastCheckIn = value;
					this.SendPropertyChanged("LastCheckIn");
					this.OnLastCheckInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWorkerRole", DbType="Bit NOT NULL")]
		public bool IsWorkerRole
		{
			get
			{
				return this._IsWorkerRole;
			}
			set
			{
				if ((this._IsWorkerRole != value))
				{
					this.OnIsWorkerRoleChanging(value);
					this.SendPropertyChanging();
					this._IsWorkerRole = value;
					this.SendPropertyChanged("IsWorkerRole");
					this.OnIsWorkerRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBackgroundProcessing", DbType="Bit NOT NULL")]
		public bool IsBackgroundProcessing
		{
			get
			{
				return this._IsBackgroundProcessing;
			}
			set
			{
				if ((this._IsBackgroundProcessing != value))
				{
					this.OnIsBackgroundProcessingChanging(value);
					this.SendPropertyChanging();
					this._IsBackgroundProcessing = value;
					this.SendPropertyChanged("IsBackgroundProcessing");
					this.OnIsBackgroundProcessingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserCheckIns")]
	public partial class UserCheckIn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserCheckInID;
		
		private System.DateTime _CheckInTime;
		
		private System.Nullable<int> _UserID;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserCheckInIDChanging(int value);
    partial void OnUserCheckInIDChanged();
    partial void OnCheckInTimeChanging(System.DateTime value);
    partial void OnCheckInTimeChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    #endregion
		
		public UserCheckIn()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCheckInID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserCheckInID
		{
			get
			{
				return this._UserCheckInID;
			}
			set
			{
				if ((this._UserCheckInID != value))
				{
					this.OnUserCheckInIDChanging(value);
					this.SendPropertyChanging();
					this._UserCheckInID = value;
					this.SendPropertyChanged("UserCheckInID");
					this.OnUserCheckInIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckInTime", DbType="DateTime NOT NULL")]
		public System.DateTime CheckInTime
		{
			get
			{
				return this._CheckInTime;
			}
			set
			{
				if ((this._CheckInTime != value))
				{
					this.OnCheckInTimeChanging(value);
					this.SendPropertyChanging();
					this._CheckInTime = value;
					this.SendPropertyChanged("CheckInTime");
					this.OnCheckInTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserCheckIn", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserCheckIns.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserCheckIns.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RatingConditions")]
	public partial class RatingCondition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RatingConditionID;
		
		private System.Nullable<int> _ConditionRatingID;
		
		private System.Nullable<decimal> _GreaterThan;
		
		private System.Nullable<decimal> _LessThan;
		
		private byte _Status;
		
		private EntitySet<RatingGroupAttribute> _RatingGroupAttributes;
		
		private EntityRef<Rating> _Rating;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatingConditionIDChanging(int value);
    partial void OnRatingConditionIDChanged();
    partial void OnConditionRatingIDChanging(System.Nullable<int> value);
    partial void OnConditionRatingIDChanged();
    partial void OnGreaterThanChanging(System.Nullable<decimal> value);
    partial void OnGreaterThanChanged();
    partial void OnLessThanChanging(System.Nullable<decimal> value);
    partial void OnLessThanChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public RatingCondition()
		{
			this._RatingGroupAttributes = new EntitySet<RatingGroupAttribute>(new Action<RatingGroupAttribute>(this.attach_RatingGroupAttributes), new Action<RatingGroupAttribute>(this.detach_RatingGroupAttributes));
			this._Rating = default(EntityRef<Rating>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingConditionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RatingConditionID
		{
			get
			{
				return this._RatingConditionID;
			}
			set
			{
				if ((this._RatingConditionID != value))
				{
					this.OnRatingConditionIDChanging(value);
					this.SendPropertyChanging();
					this._RatingConditionID = value;
					this.SendPropertyChanged("RatingConditionID");
					this.OnRatingConditionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionRatingID", DbType="Int")]
		public System.Nullable<int> ConditionRatingID
		{
			get
			{
				return this._ConditionRatingID;
			}
			set
			{
				if ((this._ConditionRatingID != value))
				{
					if (this._Rating.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConditionRatingIDChanging(value);
					this.SendPropertyChanging();
					this._ConditionRatingID = value;
					this.SendPropertyChanged("ConditionRatingID");
					this.OnConditionRatingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GreaterThan", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> GreaterThan
		{
			get
			{
				return this._GreaterThan;
			}
			set
			{
				if ((this._GreaterThan != value))
				{
					this.OnGreaterThanChanging(value);
					this.SendPropertyChanging();
					this._GreaterThan = value;
					this.SendPropertyChanged("GreaterThan");
					this.OnGreaterThanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LessThan", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> LessThan
		{
			get
			{
				return this._LessThan;
			}
			set
			{
				if ((this._LessThan != value))
				{
					this.OnLessThanChanging(value);
					this.SendPropertyChanging();
					this._LessThan = value;
					this.SendPropertyChanged("LessThan");
					this.OnLessThanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingCondition_RatingGroupAttribute", Storage="_RatingGroupAttributes", ThisKey="RatingConditionID", OtherKey="RatingConditionID")]
		public EntitySet<RatingGroupAttribute> RatingGroupAttributes
		{
			get
			{
				return this._RatingGroupAttributes;
			}
			set
			{
				this._RatingGroupAttributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rating_RatingCondition", Storage="_Rating", ThisKey="ConditionRatingID", OtherKey="RatingID", IsForeignKey=true)]
		public Rating Rating
		{
			get
			{
				return this._Rating.Entity;
			}
			set
			{
				Rating previousValue = this._Rating.Entity;
				if (((previousValue != value) 
							|| (this._Rating.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rating.Entity = null;
						previousValue.RatingConditions.Remove(this);
					}
					this._Rating.Entity = value;
					if ((value != null))
					{
						value.RatingConditions.Add(this);
						this._ConditionRatingID = value.RatingID;
					}
					else
					{
						this._ConditionRatingID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rating");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RatingGroupAttributes(RatingGroupAttribute entity)
		{
			this.SendPropertyChanging();
			entity.RatingCondition = this;
		}
		
		private void detach_RatingGroupAttributes(RatingGroupAttribute entity)
		{
			this.SendPropertyChanging();
			entity.RatingCondition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRatingsToAdd")]
	public partial class UserRatingsToAdd : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserRatingsToAddID;
		
		private int _UserID;
		
		private int _TopRatingGroupID;
		
		private System.Data.Linq.Binary _UserRatingHierarchy;
		
		private EntityRef<RatingGroup> _RatingGroup;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserRatingsToAddIDChanging(int value);
    partial void OnUserRatingsToAddIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnTopRatingGroupIDChanging(int value);
    partial void OnTopRatingGroupIDChanged();
    partial void OnUserRatingHierarchyChanging(System.Data.Linq.Binary value);
    partial void OnUserRatingHierarchyChanged();
    #endregion
		
		public UserRatingsToAdd()
		{
			this._RatingGroup = default(EntityRef<RatingGroup>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRatingsToAddID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserRatingsToAddID
		{
			get
			{
				return this._UserRatingsToAddID;
			}
			set
			{
				if ((this._UserRatingsToAddID != value))
				{
					this.OnUserRatingsToAddIDChanging(value);
					this.SendPropertyChanging();
					this._UserRatingsToAddID = value;
					this.SendPropertyChanged("UserRatingsToAddID");
					this.OnUserRatingsToAddIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopRatingGroupID", DbType="Int NOT NULL")]
		public int TopRatingGroupID
		{
			get
			{
				return this._TopRatingGroupID;
			}
			set
			{
				if ((this._TopRatingGroupID != value))
				{
					if (this._RatingGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTopRatingGroupIDChanging(value);
					this.SendPropertyChanging();
					this._TopRatingGroupID = value;
					this.SendPropertyChanged("TopRatingGroupID");
					this.OnTopRatingGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRatingHierarchy", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary UserRatingHierarchy
		{
			get
			{
				return this._UserRatingHierarchy;
			}
			set
			{
				if ((this._UserRatingHierarchy != value))
				{
					this.OnUserRatingHierarchyChanging(value);
					this.SendPropertyChanging();
					this._UserRatingHierarchy = value;
					this.SendPropertyChanged("UserRatingHierarchy");
					this.OnUserRatingHierarchyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroup_UserRatingsToAdd", Storage="_RatingGroup", ThisKey="TopRatingGroupID", OtherKey="RatingGroupID", IsForeignKey=true)]
		public RatingGroup RatingGroup
		{
			get
			{
				return this._RatingGroup.Entity;
			}
			set
			{
				RatingGroup previousValue = this._RatingGroup.Entity;
				if (((previousValue != value) 
							|| (this._RatingGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingGroup.Entity = null;
						previousValue.UserRatingsToAdds.Remove(this);
					}
					this._RatingGroup.Entity = value;
					if ((value != null))
					{
						value.UserRatingsToAdds.Add(this);
						this._TopRatingGroupID = value.RatingGroupID;
					}
					else
					{
						this._TopRatingGroupID = default(int);
					}
					this.SendPropertyChanged("RatingGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRatingsToAdd", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserRatingsToAdds.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserRatingsToAdds.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblTabs")]
	public partial class TblTab : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TblTabID;
		
		private int _TblID;
		
		private int _NumInTbl;
		
		private string _Name;
		
		private System.Nullable<int> _DefaultSortTblColumnID;
		
		private byte _Status;
		
		private EntitySet<TblColumn> _TblColumns;
		
		private EntityRef<Tbl> _Tbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTblTabIDChanging(int value);
    partial void OnTblTabIDChanged();
    partial void OnTblIDChanging(int value);
    partial void OnTblIDChanged();
    partial void OnNumInTblChanging(int value);
    partial void OnNumInTblChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDefaultSortTblColumnIDChanging(System.Nullable<int> value);
    partial void OnDefaultSortTblColumnIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public TblTab()
		{
			this._TblColumns = new EntitySet<TblColumn>(new Action<TblColumn>(this.attach_TblColumns), new Action<TblColumn>(this.detach_TblColumns));
			this._Tbl = default(EntityRef<Tbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblTabID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TblTabID
		{
			get
			{
				return this._TblTabID;
			}
			set
			{
				if ((this._TblTabID != value))
				{
					this.OnTblTabIDChanging(value);
					this.SendPropertyChanging();
					this._TblTabID = value;
					this.SendPropertyChanged("TblTabID");
					this.OnTblTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblID", DbType="Int NOT NULL")]
		public int TblID
		{
			get
			{
				return this._TblID;
			}
			set
			{
				if ((this._TblID != value))
				{
					if (this._Tbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblIDChanging(value);
					this.SendPropertyChanging();
					this._TblID = value;
					this.SendPropertyChanged("TblID");
					this.OnTblIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumInTbl", DbType="Int NOT NULL")]
		public int NumInTbl
		{
			get
			{
				return this._NumInTbl;
			}
			set
			{
				if ((this._NumInTbl != value))
				{
					this.OnNumInTblChanging(value);
					this.SendPropertyChanging();
					this._NumInTbl = value;
					this.SendPropertyChanged("NumInTbl");
					this.OnNumInTblChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultSortTblColumnID", DbType="Int")]
		public System.Nullable<int> DefaultSortTblColumnID
		{
			get
			{
				return this._DefaultSortTblColumnID;
			}
			set
			{
				if ((this._DefaultSortTblColumnID != value))
				{
					this.OnDefaultSortTblColumnIDChanging(value);
					this.SendPropertyChanging();
					this._DefaultSortTblColumnID = value;
					this.SendPropertyChanged("DefaultSortTblColumnID");
					this.OnDefaultSortTblColumnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblTab_TblColumn", Storage="_TblColumns", ThisKey="TblTabID", OtherKey="TblTabID")]
		public EntitySet<TblColumn> TblColumns
		{
			get
			{
				return this._TblColumns;
			}
			set
			{
				this._TblColumns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_TblTab", Storage="_Tbl", ThisKey="TblID", OtherKey="TblID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Tbl Tbl
		{
			get
			{
				return this._Tbl.Entity;
			}
			set
			{
				Tbl previousValue = this._Tbl.Entity;
				if (((previousValue != value) 
							|| (this._Tbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl.Entity = null;
						previousValue.TblTabs.Remove(this);
					}
					this._Tbl.Entity = value;
					if ((value != null))
					{
						value.TblTabs.Add(this);
						this._TblID = value.TblID;
					}
					else
					{
						this._TblID = default(int);
					}
					this.SendPropertyChanged("Tbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblColumns(TblColumn entity)
		{
			this.SendPropertyChanging();
			entity.TblTab = this;
		}
		
		private void detach_TblColumns(TblColumn entity)
		{
			this.SendPropertyChanging();
			entity.TblTab = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserActions")]
	public partial class UserAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserActionID;
		
		private string _Text;
		
		private bool _SuperUser;
		
		private EntitySet<ProposalEvaluationRatingSetting> _ProposalEvaluationRatingSettings;
		
		private EntitySet<RewardRatingSetting> _RewardRatingSettings;
		
		private EntitySet<AdministrationRight> _AdministrationRights;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserActionIDChanging(int value);
    partial void OnUserActionIDChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnSuperUserChanging(bool value);
    partial void OnSuperUserChanged();
    #endregion
		
		public UserAction()
		{
			this._ProposalEvaluationRatingSettings = new EntitySet<ProposalEvaluationRatingSetting>(new Action<ProposalEvaluationRatingSetting>(this.attach_ProposalEvaluationRatingSettings), new Action<ProposalEvaluationRatingSetting>(this.detach_ProposalEvaluationRatingSettings));
			this._RewardRatingSettings = new EntitySet<RewardRatingSetting>(new Action<RewardRatingSetting>(this.attach_RewardRatingSettings), new Action<RewardRatingSetting>(this.detach_RewardRatingSettings));
			this._AdministrationRights = new EntitySet<AdministrationRight>(new Action<AdministrationRight>(this.attach_AdministrationRights), new Action<AdministrationRight>(this.detach_AdministrationRights));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserActionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserActionID
		{
			get
			{
				return this._UserActionID;
			}
			set
			{
				if ((this._UserActionID != value))
				{
					this.OnUserActionIDChanging(value);
					this.SendPropertyChanging();
					this._UserActionID = value;
					this.SendPropertyChanged("UserActionID");
					this.OnUserActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperUser", DbType="Bit NOT NULL")]
		public bool SuperUser
		{
			get
			{
				return this._SuperUser;
			}
			set
			{
				if ((this._SuperUser != value))
				{
					this.OnSuperUserChanging(value);
					this.SendPropertyChanging();
					this._SuperUser = value;
					this.SendPropertyChanged("SuperUser");
					this.OnSuperUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAction_ProposalEvaluationRatingSetting", Storage="_ProposalEvaluationRatingSettings", ThisKey="UserActionID", OtherKey="UserActionID")]
		public EntitySet<ProposalEvaluationRatingSetting> ProposalEvaluationRatingSettings
		{
			get
			{
				return this._ProposalEvaluationRatingSettings;
			}
			set
			{
				this._ProposalEvaluationRatingSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAction_RewardRatingSetting", Storage="_RewardRatingSettings", ThisKey="UserActionID", OtherKey="UserActionID")]
		public EntitySet<RewardRatingSetting> RewardRatingSettings
		{
			get
			{
				return this._RewardRatingSettings;
			}
			set
			{
				this._RewardRatingSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAction_AdministrationRight", Storage="_AdministrationRights", ThisKey="UserActionID", OtherKey="UserActionID")]
		public EntitySet<AdministrationRight> AdministrationRights
		{
			get
			{
				return this._AdministrationRights;
			}
			set
			{
				this._AdministrationRights.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProposalEvaluationRatingSettings(ProposalEvaluationRatingSetting entity)
		{
			this.SendPropertyChanging();
			entity.UserAction = this;
		}
		
		private void detach_ProposalEvaluationRatingSettings(ProposalEvaluationRatingSetting entity)
		{
			this.SendPropertyChanging();
			entity.UserAction = null;
		}
		
		private void attach_RewardRatingSettings(RewardRatingSetting entity)
		{
			this.SendPropertyChanging();
			entity.UserAction = this;
		}
		
		private void detach_RewardRatingSettings(RewardRatingSetting entity)
		{
			this.SendPropertyChanging();
			entity.UserAction = null;
		}
		
		private void attach_AdministrationRights(AdministrationRight entity)
		{
			this.SendPropertyChanging();
			entity.UserAction = this;
		}
		
		private void detach_AdministrationRights(AdministrationRight entity)
		{
			this.SendPropertyChanging();
			entity.UserAction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChoiceGroupFieldDefinitions")]
	public partial class ChoiceGroupFieldDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChoiceGroupFieldDefinitionID;
		
		private int _ChoiceGroupID;
		
		private int _FieldDefinitionID;
		
		private System.Nullable<int> _DependentOnChoiceGroupFieldDefinitionID;
		
		private bool _TrackTrustBasedOnChoices;
		
		private byte _Status;
		
		private EntitySet<ChoiceGroupFieldDefinition> _ChoiceGroupFieldDefinitions;
		
		private EntityRef<ChoiceGroup> _ChoiceGroup;
		
		private EntityRef<ChoiceGroupFieldDefinition> _ChoiceGroupFieldDefinition1;
		
		private EntityRef<FieldDefinition> _FieldDefinition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChoiceGroupFieldDefinitionIDChanging(int value);
    partial void OnChoiceGroupFieldDefinitionIDChanged();
    partial void OnChoiceGroupIDChanging(int value);
    partial void OnChoiceGroupIDChanged();
    partial void OnFieldDefinitionIDChanging(int value);
    partial void OnFieldDefinitionIDChanged();
    partial void OnDependentOnChoiceGroupFieldDefinitionIDChanging(System.Nullable<int> value);
    partial void OnDependentOnChoiceGroupFieldDefinitionIDChanged();
    partial void OnTrackTrustBasedOnChoicesChanging(bool value);
    partial void OnTrackTrustBasedOnChoicesChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public ChoiceGroupFieldDefinition()
		{
			this._ChoiceGroupFieldDefinitions = new EntitySet<ChoiceGroupFieldDefinition>(new Action<ChoiceGroupFieldDefinition>(this.attach_ChoiceGroupFieldDefinitions), new Action<ChoiceGroupFieldDefinition>(this.detach_ChoiceGroupFieldDefinitions));
			this._ChoiceGroup = default(EntityRef<ChoiceGroup>);
			this._ChoiceGroupFieldDefinition1 = default(EntityRef<ChoiceGroupFieldDefinition>);
			this._FieldDefinition = default(EntityRef<FieldDefinition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceGroupFieldDefinitionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChoiceGroupFieldDefinitionID
		{
			get
			{
				return this._ChoiceGroupFieldDefinitionID;
			}
			set
			{
				if ((this._ChoiceGroupFieldDefinitionID != value))
				{
					this.OnChoiceGroupFieldDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._ChoiceGroupFieldDefinitionID = value;
					this.SendPropertyChanged("ChoiceGroupFieldDefinitionID");
					this.OnChoiceGroupFieldDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceGroupID", DbType="Int NOT NULL")]
		public int ChoiceGroupID
		{
			get
			{
				return this._ChoiceGroupID;
			}
			set
			{
				if ((this._ChoiceGroupID != value))
				{
					if (this._ChoiceGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChoiceGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ChoiceGroupID = value;
					this.SendPropertyChanged("ChoiceGroupID");
					this.OnChoiceGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldDefinitionID", DbType="Int NOT NULL")]
		public int FieldDefinitionID
		{
			get
			{
				return this._FieldDefinitionID;
			}
			set
			{
				if ((this._FieldDefinitionID != value))
				{
					if (this._FieldDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFieldDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._FieldDefinitionID = value;
					this.SendPropertyChanged("FieldDefinitionID");
					this.OnFieldDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DependentOnChoiceGroupFieldDefinitionID", DbType="Int")]
		public System.Nullable<int> DependentOnChoiceGroupFieldDefinitionID
		{
			get
			{
				return this._DependentOnChoiceGroupFieldDefinitionID;
			}
			set
			{
				if ((this._DependentOnChoiceGroupFieldDefinitionID != value))
				{
					if (this._ChoiceGroupFieldDefinition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDependentOnChoiceGroupFieldDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._DependentOnChoiceGroupFieldDefinitionID = value;
					this.SendPropertyChanged("DependentOnChoiceGroupFieldDefinitionID");
					this.OnDependentOnChoiceGroupFieldDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackTrustBasedOnChoices", DbType="Bit NOT NULL")]
		public bool TrackTrustBasedOnChoices
		{
			get
			{
				return this._TrackTrustBasedOnChoices;
			}
			set
			{
				if ((this._TrackTrustBasedOnChoices != value))
				{
					this.OnTrackTrustBasedOnChoicesChanging(value);
					this.SendPropertyChanging();
					this._TrackTrustBasedOnChoices = value;
					this.SendPropertyChanged("TrackTrustBasedOnChoices");
					this.OnTrackTrustBasedOnChoicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChoiceGroupFieldDefinition_ChoiceGroupFieldDefinition", Storage="_ChoiceGroupFieldDefinitions", ThisKey="ChoiceGroupFieldDefinitionID", OtherKey="DependentOnChoiceGroupFieldDefinitionID")]
		public EntitySet<ChoiceGroupFieldDefinition> ChoiceGroupFieldDefinitions
		{
			get
			{
				return this._ChoiceGroupFieldDefinitions;
			}
			set
			{
				this._ChoiceGroupFieldDefinitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChoiceGroup_ChoiceGroupFieldDefinition", Storage="_ChoiceGroup", ThisKey="ChoiceGroupID", OtherKey="ChoiceGroupID", IsForeignKey=true)]
		public ChoiceGroup ChoiceGroup
		{
			get
			{
				return this._ChoiceGroup.Entity;
			}
			set
			{
				ChoiceGroup previousValue = this._ChoiceGroup.Entity;
				if (((previousValue != value) 
							|| (this._ChoiceGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChoiceGroup.Entity = null;
						previousValue.ChoiceGroupFieldDefinitions.Remove(this);
					}
					this._ChoiceGroup.Entity = value;
					if ((value != null))
					{
						value.ChoiceGroupFieldDefinitions.Add(this);
						this._ChoiceGroupID = value.ChoiceGroupID;
					}
					else
					{
						this._ChoiceGroupID = default(int);
					}
					this.SendPropertyChanged("ChoiceGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChoiceGroupFieldDefinition_ChoiceGroupFieldDefinition", Storage="_ChoiceGroupFieldDefinition1", ThisKey="DependentOnChoiceGroupFieldDefinitionID", OtherKey="ChoiceGroupFieldDefinitionID", IsForeignKey=true)]
		public ChoiceGroupFieldDefinition ChoiceGroupFieldDefinition1
		{
			get
			{
				return this._ChoiceGroupFieldDefinition1.Entity;
			}
			set
			{
				ChoiceGroupFieldDefinition previousValue = this._ChoiceGroupFieldDefinition1.Entity;
				if (((previousValue != value) 
							|| (this._ChoiceGroupFieldDefinition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChoiceGroupFieldDefinition1.Entity = null;
						previousValue.ChoiceGroupFieldDefinitions.Remove(this);
					}
					this._ChoiceGroupFieldDefinition1.Entity = value;
					if ((value != null))
					{
						value.ChoiceGroupFieldDefinitions.Add(this);
						this._DependentOnChoiceGroupFieldDefinitionID = value.ChoiceGroupFieldDefinitionID;
					}
					else
					{
						this._DependentOnChoiceGroupFieldDefinitionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChoiceGroupFieldDefinition1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FieldDefinition_ChoiceGroupFieldDefinition", Storage="_FieldDefinition", ThisKey="FieldDefinitionID", OtherKey="FieldDefinitionID", IsForeignKey=true)]
		public FieldDefinition FieldDefinition
		{
			get
			{
				return this._FieldDefinition.Entity;
			}
			set
			{
				FieldDefinition previousValue = this._FieldDefinition.Entity;
				if (((previousValue != value) 
							|| (this._FieldDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FieldDefinition.Entity = null;
						previousValue.ChoiceGroupFieldDefinitions.Remove(this);
					}
					this._FieldDefinition.Entity = value;
					if ((value != null))
					{
						value.ChoiceGroupFieldDefinitions.Add(this);
						this._FieldDefinitionID = value.FieldDefinitionID;
					}
					else
					{
						this._FieldDefinitionID = default(int);
					}
					this.SendPropertyChanged("FieldDefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChoiceGroupFieldDefinitions(ChoiceGroupFieldDefinition entity)
		{
			this.SendPropertyChanging();
			entity.ChoiceGroupFieldDefinition1 = this;
		}
		
		private void detach_ChoiceGroupFieldDefinitions(ChoiceGroupFieldDefinition entity)
		{
			this.SendPropertyChanging();
			entity.ChoiceGroupFieldDefinition1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdministrationRights")]
	public partial class AdministrationRight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdministrationRightID;
		
		private int _AdministrationRightsGroupID;
		
		private System.Nullable<int> _UserActionID;
		
		private bool _AllowUserToMakeImmediateChanges;
		
		private bool _AllowUserToMakeProposals;
		
		private bool _AllowUserToSeekRewards;
		
		private bool _AllowUserNotToSeekRewards;
		
		private byte _Status;
		
		private EntityRef<UserAction> _UserAction;
		
		private EntityRef<AdministrationRightsGroup> _AdministrationRightsGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdministrationRightIDChanging(int value);
    partial void OnAdministrationRightIDChanged();
    partial void OnAdministrationRightsGroupIDChanging(int value);
    partial void OnAdministrationRightsGroupIDChanged();
    partial void OnUserActionIDChanging(System.Nullable<int> value);
    partial void OnUserActionIDChanged();
    partial void OnAllowUserToMakeImmediateChangesChanging(bool value);
    partial void OnAllowUserToMakeImmediateChangesChanged();
    partial void OnAllowUserToMakeProposalsChanging(bool value);
    partial void OnAllowUserToMakeProposalsChanged();
    partial void OnAllowUserToSeekRewardsChanging(bool value);
    partial void OnAllowUserToSeekRewardsChanged();
    partial void OnAllowUserNotToSeekRewardsChanging(bool value);
    partial void OnAllowUserNotToSeekRewardsChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public AdministrationRight()
		{
			this._UserAction = default(EntityRef<UserAction>);
			this._AdministrationRightsGroup = default(EntityRef<AdministrationRightsGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministrationRightID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdministrationRightID
		{
			get
			{
				return this._AdministrationRightID;
			}
			set
			{
				if ((this._AdministrationRightID != value))
				{
					this.OnAdministrationRightIDChanging(value);
					this.SendPropertyChanging();
					this._AdministrationRightID = value;
					this.SendPropertyChanged("AdministrationRightID");
					this.OnAdministrationRightIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministrationRightsGroupID", DbType="Int NOT NULL")]
		public int AdministrationRightsGroupID
		{
			get
			{
				return this._AdministrationRightsGroupID;
			}
			set
			{
				if ((this._AdministrationRightsGroupID != value))
				{
					if (this._AdministrationRightsGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdministrationRightsGroupIDChanging(value);
					this.SendPropertyChanging();
					this._AdministrationRightsGroupID = value;
					this.SendPropertyChanged("AdministrationRightsGroupID");
					this.OnAdministrationRightsGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserActionID", DbType="Int")]
		public System.Nullable<int> UserActionID
		{
			get
			{
				return this._UserActionID;
			}
			set
			{
				if ((this._UserActionID != value))
				{
					if (this._UserAction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserActionIDChanging(value);
					this.SendPropertyChanging();
					this._UserActionID = value;
					this.SendPropertyChanged("UserActionID");
					this.OnUserActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowUserToMakeImmediateChanges", DbType="Bit NOT NULL")]
		public bool AllowUserToMakeImmediateChanges
		{
			get
			{
				return this._AllowUserToMakeImmediateChanges;
			}
			set
			{
				if ((this._AllowUserToMakeImmediateChanges != value))
				{
					this.OnAllowUserToMakeImmediateChangesChanging(value);
					this.SendPropertyChanging();
					this._AllowUserToMakeImmediateChanges = value;
					this.SendPropertyChanged("AllowUserToMakeImmediateChanges");
					this.OnAllowUserToMakeImmediateChangesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowUserToMakeProposals", DbType="Bit NOT NULL")]
		public bool AllowUserToMakeProposals
		{
			get
			{
				return this._AllowUserToMakeProposals;
			}
			set
			{
				if ((this._AllowUserToMakeProposals != value))
				{
					this.OnAllowUserToMakeProposalsChanging(value);
					this.SendPropertyChanging();
					this._AllowUserToMakeProposals = value;
					this.SendPropertyChanged("AllowUserToMakeProposals");
					this.OnAllowUserToMakeProposalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowUserToSeekRewards", DbType="Bit NOT NULL")]
		public bool AllowUserToSeekRewards
		{
			get
			{
				return this._AllowUserToSeekRewards;
			}
			set
			{
				if ((this._AllowUserToSeekRewards != value))
				{
					this.OnAllowUserToSeekRewardsChanging(value);
					this.SendPropertyChanging();
					this._AllowUserToSeekRewards = value;
					this.SendPropertyChanged("AllowUserToSeekRewards");
					this.OnAllowUserToSeekRewardsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowUserNotToSeekRewards", DbType="Bit NOT NULL")]
		public bool AllowUserNotToSeekRewards
		{
			get
			{
				return this._AllowUserNotToSeekRewards;
			}
			set
			{
				if ((this._AllowUserNotToSeekRewards != value))
				{
					this.OnAllowUserNotToSeekRewardsChanging(value);
					this.SendPropertyChanging();
					this._AllowUserNotToSeekRewards = value;
					this.SendPropertyChanged("AllowUserNotToSeekRewards");
					this.OnAllowUserNotToSeekRewardsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAction_AdministrationRight", Storage="_UserAction", ThisKey="UserActionID", OtherKey="UserActionID", IsForeignKey=true)]
		public UserAction UserAction
		{
			get
			{
				return this._UserAction.Entity;
			}
			set
			{
				UserAction previousValue = this._UserAction.Entity;
				if (((previousValue != value) 
							|| (this._UserAction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAction.Entity = null;
						previousValue.AdministrationRights.Remove(this);
					}
					this._UserAction.Entity = value;
					if ((value != null))
					{
						value.AdministrationRights.Add(this);
						this._UserActionID = value.UserActionID;
					}
					else
					{
						this._UserActionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserAction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdministrationRightsGroup_AdministrationRight", Storage="_AdministrationRightsGroup", ThisKey="AdministrationRightsGroupID", OtherKey="AdministrationRightsGroupID", IsForeignKey=true)]
		public AdministrationRightsGroup AdministrationRightsGroup
		{
			get
			{
				return this._AdministrationRightsGroup.Entity;
			}
			set
			{
				AdministrationRightsGroup previousValue = this._AdministrationRightsGroup.Entity;
				if (((previousValue != value) 
							|| (this._AdministrationRightsGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdministrationRightsGroup.Entity = null;
						previousValue.AdministrationRights.Remove(this);
					}
					this._AdministrationRightsGroup.Entity = value;
					if ((value != null))
					{
						value.AdministrationRights.Add(this);
						this._AdministrationRightsGroupID = value.AdministrationRightsGroupID;
					}
					else
					{
						this._AdministrationRightsGroupID = default(int);
					}
					this.SendPropertyChanged("AdministrationRightsGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdministrationRightsGroups")]
	public partial class AdministrationRightsGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdministrationRightsGroupID;
		
		private System.Nullable<int> _PointsManagerID;
		
		private string _Name;
		
		private System.Nullable<int> _Creator;
		
		private byte _Status;
		
		private EntitySet<UsersAdministrationRightsGroup> _UsersAdministrationRightsGroups;
		
		private EntitySet<AdministrationRight> _AdministrationRights;
		
		private EntityRef<PointsManager> _PointsManager;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdministrationRightsGroupIDChanging(int value);
    partial void OnAdministrationRightsGroupIDChanged();
    partial void OnPointsManagerIDChanging(System.Nullable<int> value);
    partial void OnPointsManagerIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public AdministrationRightsGroup()
		{
			this._UsersAdministrationRightsGroups = new EntitySet<UsersAdministrationRightsGroup>(new Action<UsersAdministrationRightsGroup>(this.attach_UsersAdministrationRightsGroups), new Action<UsersAdministrationRightsGroup>(this.detach_UsersAdministrationRightsGroups));
			this._AdministrationRights = new EntitySet<AdministrationRight>(new Action<AdministrationRight>(this.attach_AdministrationRights), new Action<AdministrationRight>(this.detach_AdministrationRights));
			this._PointsManager = default(EntityRef<PointsManager>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministrationRightsGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdministrationRightsGroupID
		{
			get
			{
				return this._AdministrationRightsGroupID;
			}
			set
			{
				if ((this._AdministrationRightsGroupID != value))
				{
					this.OnAdministrationRightsGroupIDChanging(value);
					this.SendPropertyChanging();
					this._AdministrationRightsGroupID = value;
					this.SendPropertyChanged("AdministrationRightsGroupID");
					this.OnAdministrationRightsGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsManagerID", DbType="Int")]
		public System.Nullable<int> PointsManagerID
		{
			get
			{
				return this._PointsManagerID;
			}
			set
			{
				if ((this._PointsManagerID != value))
				{
					if (this._PointsManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPointsManagerIDChanging(value);
					this.SendPropertyChanging();
					this._PointsManagerID = value;
					this.SendPropertyChanged("PointsManagerID");
					this.OnPointsManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdministrationRightsGroup_UsersAdministrationRightsGroup", Storage="_UsersAdministrationRightsGroups", ThisKey="AdministrationRightsGroupID", OtherKey="AdministrationRightsGroupID")]
		public EntitySet<UsersAdministrationRightsGroup> UsersAdministrationRightsGroups
		{
			get
			{
				return this._UsersAdministrationRightsGroups;
			}
			set
			{
				this._UsersAdministrationRightsGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdministrationRightsGroup_AdministrationRight", Storage="_AdministrationRights", ThisKey="AdministrationRightsGroupID", OtherKey="AdministrationRightsGroupID")]
		public EntitySet<AdministrationRight> AdministrationRights
		{
			get
			{
				return this._AdministrationRights;
			}
			set
			{
				this._AdministrationRights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_AdministrationRightsGroup", Storage="_PointsManager", ThisKey="PointsManagerID", OtherKey="PointsManagerID", IsForeignKey=true)]
		public PointsManager PointsManager
		{
			get
			{
				return this._PointsManager.Entity;
			}
			set
			{
				PointsManager previousValue = this._PointsManager.Entity;
				if (((previousValue != value) 
							|| (this._PointsManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PointsManager.Entity = null;
						previousValue.AdministrationRightsGroups.Remove(this);
					}
					this._PointsManager.Entity = value;
					if ((value != null))
					{
						value.AdministrationRightsGroups.Add(this);
						this._PointsManagerID = value.PointsManagerID;
					}
					else
					{
						this._PointsManagerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PointsManager");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsersAdministrationRightsGroups(UsersAdministrationRightsGroup entity)
		{
			this.SendPropertyChanging();
			entity.AdministrationRightsGroup = this;
		}
		
		private void detach_UsersAdministrationRightsGroups(UsersAdministrationRightsGroup entity)
		{
			this.SendPropertyChanging();
			entity.AdministrationRightsGroup = null;
		}
		
		private void attach_AdministrationRights(AdministrationRight entity)
		{
			this.SendPropertyChanging();
			entity.AdministrationRightsGroup = this;
		}
		
		private void detach_AdministrationRights(AdministrationRight entity)
		{
			this.SendPropertyChanging();
			entity.AdministrationRightsGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserInfo")]
	public partial class UserInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserInfoID;
		
		private int _UserID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _WorkPhone;
		
		private string _HomePhone;
		
		private string _MobilePhone;
		
		private string _Password;
		
		private string _ZipCode;
		
		private string _City;
		
		private string _State;
		
		private string _Country;
		
		private bool _IsVerified;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserInfoIDChanging(int value);
    partial void OnUserInfoIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnWorkPhoneChanging(string value);
    partial void OnWorkPhoneChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnIsVerifiedChanging(bool value);
    partial void OnIsVerifiedChanged();
    #endregion
		
		public UserInfo()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserInfoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserInfoID
		{
			get
			{
				return this._UserInfoID;
			}
			set
			{
				if ((this._UserInfoID != value))
				{
					this.OnUserInfoIDChanging(value);
					this.SendPropertyChanging();
					this._UserInfoID = value;
					this.SendPropertyChanged("UserInfoID");
					this.OnUserInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPhone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WorkPhone
		{
			get
			{
				return this._WorkPhone;
			}
			set
			{
				if ((this._WorkPhone != value))
				{
					this.OnWorkPhoneChanging(value);
					this.SendPropertyChanging();
					this._WorkPhone = value;
					this.SendPropertyChanged("WorkPhone");
					this.OnWorkPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVerified", DbType="Bit NOT NULL")]
		public bool IsVerified
		{
			get
			{
				return this._IsVerified;
			}
			set
			{
				if ((this._IsVerified != value))
				{
					this.OnIsVerifiedChanging(value);
					this.SendPropertyChanging();
					this._IsVerified = value;
					this.SendPropertyChanged("IsVerified");
					this.OnIsVerifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserInfo", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserInfo = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserInfo = this;
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrustTrackerUnits")]
	public partial class TrustTrackerUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TrustTrackerUnitID;
		
		private short _SkepticalTrustThreshhold;
		
		private short _LastSkepticalTrustThreshhold;
		
		private int _MinUpdateIntervalSeconds;
		
		private int _MaxUpdateIntervalSeconds;
		
		private decimal _ExtendIntervalWhenChangeIsLessThanThis;
		
		private decimal _ExtendIntervalMultiplier;
		
		private EntitySet<PointsManager> _PointsManagers;
		
		private EntitySet<UserRating> _UserRatings;
		
		private EntitySet<TrustTracker> _TrustTrackers;
		
		private EntitySet<UserInteraction> _UserInteractions;
		
		private EntitySet<TblColumn> _TblColumns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrustTrackerUnitIDChanging(int value);
    partial void OnTrustTrackerUnitIDChanged();
    partial void OnSkepticalTrustThreshholdChanging(short value);
    partial void OnSkepticalTrustThreshholdChanged();
    partial void OnLastSkepticalTrustThreshholdChanging(short value);
    partial void OnLastSkepticalTrustThreshholdChanged();
    partial void OnMinUpdateIntervalSecondsChanging(int value);
    partial void OnMinUpdateIntervalSecondsChanged();
    partial void OnMaxUpdateIntervalSecondsChanging(int value);
    partial void OnMaxUpdateIntervalSecondsChanged();
    partial void OnExtendIntervalWhenChangeIsLessThanThisChanging(decimal value);
    partial void OnExtendIntervalWhenChangeIsLessThanThisChanged();
    partial void OnExtendIntervalMultiplierChanging(decimal value);
    partial void OnExtendIntervalMultiplierChanged();
    #endregion
		
		public TrustTrackerUnit()
		{
			this._PointsManagers = new EntitySet<PointsManager>(new Action<PointsManager>(this.attach_PointsManagers), new Action<PointsManager>(this.detach_PointsManagers));
			this._UserRatings = new EntitySet<UserRating>(new Action<UserRating>(this.attach_UserRatings), new Action<UserRating>(this.detach_UserRatings));
			this._TrustTrackers = new EntitySet<TrustTracker>(new Action<TrustTracker>(this.attach_TrustTrackers), new Action<TrustTracker>(this.detach_TrustTrackers));
			this._UserInteractions = new EntitySet<UserInteraction>(new Action<UserInteraction>(this.attach_UserInteractions), new Action<UserInteraction>(this.detach_UserInteractions));
			this._TblColumns = new EntitySet<TblColumn>(new Action<TblColumn>(this.attach_TblColumns), new Action<TblColumn>(this.detach_TblColumns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustTrackerUnitID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TrustTrackerUnitID
		{
			get
			{
				return this._TrustTrackerUnitID;
			}
			set
			{
				if ((this._TrustTrackerUnitID != value))
				{
					this.OnTrustTrackerUnitIDChanging(value);
					this.SendPropertyChanging();
					this._TrustTrackerUnitID = value;
					this.SendPropertyChanged("TrustTrackerUnitID");
					this.OnTrustTrackerUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkepticalTrustThreshhold", DbType="SmallInt NOT NULL")]
		public short SkepticalTrustThreshhold
		{
			get
			{
				return this._SkepticalTrustThreshhold;
			}
			set
			{
				if ((this._SkepticalTrustThreshhold != value))
				{
					this.OnSkepticalTrustThreshholdChanging(value);
					this.SendPropertyChanging();
					this._SkepticalTrustThreshhold = value;
					this.SendPropertyChanged("SkepticalTrustThreshhold");
					this.OnSkepticalTrustThreshholdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSkepticalTrustThreshhold", DbType="SmallInt NOT NULL")]
		public short LastSkepticalTrustThreshhold
		{
			get
			{
				return this._LastSkepticalTrustThreshhold;
			}
			set
			{
				if ((this._LastSkepticalTrustThreshhold != value))
				{
					this.OnLastSkepticalTrustThreshholdChanging(value);
					this.SendPropertyChanging();
					this._LastSkepticalTrustThreshhold = value;
					this.SendPropertyChanged("LastSkepticalTrustThreshhold");
					this.OnLastSkepticalTrustThreshholdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinUpdateIntervalSeconds", DbType="Int NOT NULL")]
		public int MinUpdateIntervalSeconds
		{
			get
			{
				return this._MinUpdateIntervalSeconds;
			}
			set
			{
				if ((this._MinUpdateIntervalSeconds != value))
				{
					this.OnMinUpdateIntervalSecondsChanging(value);
					this.SendPropertyChanging();
					this._MinUpdateIntervalSeconds = value;
					this.SendPropertyChanged("MinUpdateIntervalSeconds");
					this.OnMinUpdateIntervalSecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxUpdateIntervalSeconds", DbType="Int NOT NULL")]
		public int MaxUpdateIntervalSeconds
		{
			get
			{
				return this._MaxUpdateIntervalSeconds;
			}
			set
			{
				if ((this._MaxUpdateIntervalSeconds != value))
				{
					this.OnMaxUpdateIntervalSecondsChanging(value);
					this.SendPropertyChanging();
					this._MaxUpdateIntervalSeconds = value;
					this.SendPropertyChanged("MaxUpdateIntervalSeconds");
					this.OnMaxUpdateIntervalSecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendIntervalWhenChangeIsLessThanThis", DbType="Decimal(18,4) NOT NULL")]
		public decimal ExtendIntervalWhenChangeIsLessThanThis
		{
			get
			{
				return this._ExtendIntervalWhenChangeIsLessThanThis;
			}
			set
			{
				if ((this._ExtendIntervalWhenChangeIsLessThanThis != value))
				{
					this.OnExtendIntervalWhenChangeIsLessThanThisChanging(value);
					this.SendPropertyChanging();
					this._ExtendIntervalWhenChangeIsLessThanThis = value;
					this.SendPropertyChanged("ExtendIntervalWhenChangeIsLessThanThis");
					this.OnExtendIntervalWhenChangeIsLessThanThisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendIntervalMultiplier", DbType="Decimal(18,4) NOT NULL")]
		public decimal ExtendIntervalMultiplier
		{
			get
			{
				return this._ExtendIntervalMultiplier;
			}
			set
			{
				if ((this._ExtendIntervalMultiplier != value))
				{
					this.OnExtendIntervalMultiplierChanging(value);
					this.SendPropertyChanging();
					this._ExtendIntervalMultiplier = value;
					this.SendPropertyChanged("ExtendIntervalMultiplier");
					this.OnExtendIntervalMultiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrustTrackerUnit_PointsManager", Storage="_PointsManagers", ThisKey="TrustTrackerUnitID", OtherKey="TrustTrackerUnitID")]
		public EntitySet<PointsManager> PointsManagers
		{
			get
			{
				return this._PointsManagers;
			}
			set
			{
				this._PointsManagers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrustTrackerUnit_UserRating", Storage="_UserRatings", ThisKey="TrustTrackerUnitID", OtherKey="TrustTrackerUnitID")]
		public EntitySet<UserRating> UserRatings
		{
			get
			{
				return this._UserRatings;
			}
			set
			{
				this._UserRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrustTrackerUnit_TrustTracker", Storage="_TrustTrackers", ThisKey="TrustTrackerUnitID", OtherKey="TrustTrackerUnitID")]
		public EntitySet<TrustTracker> TrustTrackers
		{
			get
			{
				return this._TrustTrackers;
			}
			set
			{
				this._TrustTrackers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrustTrackerUnit_UserInteraction", Storage="_UserInteractions", ThisKey="TrustTrackerUnitID", OtherKey="TrustTrackerUnitID")]
		public EntitySet<UserInteraction> UserInteractions
		{
			get
			{
				return this._UserInteractions;
			}
			set
			{
				this._UserInteractions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrustTrackerUnit_TblColumn", Storage="_TblColumns", ThisKey="TrustTrackerUnitID", OtherKey="TrustTrackerUnitID")]
		public EntitySet<TblColumn> TblColumns
		{
			get
			{
				return this._TblColumns;
			}
			set
			{
				this._TblColumns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PointsManagers(PointsManager entity)
		{
			this.SendPropertyChanging();
			entity.TrustTrackerUnit = this;
		}
		
		private void detach_PointsManagers(PointsManager entity)
		{
			this.SendPropertyChanging();
			entity.TrustTrackerUnit = null;
		}
		
		private void attach_UserRatings(UserRating entity)
		{
			this.SendPropertyChanging();
			entity.TrustTrackerUnit = this;
		}
		
		private void detach_UserRatings(UserRating entity)
		{
			this.SendPropertyChanging();
			entity.TrustTrackerUnit = null;
		}
		
		private void attach_TrustTrackers(TrustTracker entity)
		{
			this.SendPropertyChanging();
			entity.TrustTrackerUnit = this;
		}
		
		private void detach_TrustTrackers(TrustTracker entity)
		{
			this.SendPropertyChanging();
			entity.TrustTrackerUnit = null;
		}
		
		private void attach_UserInteractions(UserInteraction entity)
		{
			this.SendPropertyChanging();
			entity.TrustTrackerUnit = this;
		}
		
		private void detach_UserInteractions(UserInteraction entity)
		{
			this.SendPropertyChanging();
			entity.TrustTrackerUnit = null;
		}
		
		private void attach_TblColumns(TblColumn entity)
		{
			this.SendPropertyChanging();
			entity.TrustTrackerUnit = this;
		}
		
		private void detach_TblColumns(TblColumn entity)
		{
			this.SendPropertyChanging();
			entity.TrustTrackerUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrustTrackerForChoiceInGroupsUserRatingLinks")]
	public partial class TrustTrackerForChoiceInGroupsUserRatingLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TrustTrackerForChoiceInGroupsUserRatingLinkID;
		
		private int _UserRatingID;
		
		private int _TrustTrackerForChoiceInGroupID;
		
		private EntityRef<TrustTrackerForChoiceInGroup> _TrustTrackerForChoiceInGroup;
		
		private EntityRef<UserRating> _UserRating;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrustTrackerForChoiceInGroupsUserRatingLinkIDChanging(int value);
    partial void OnTrustTrackerForChoiceInGroupsUserRatingLinkIDChanged();
    partial void OnUserRatingIDChanging(int value);
    partial void OnUserRatingIDChanged();
    partial void OnTrustTrackerForChoiceInGroupIDChanging(int value);
    partial void OnTrustTrackerForChoiceInGroupIDChanged();
    #endregion
		
		public TrustTrackerForChoiceInGroupsUserRatingLink()
		{
			this._TrustTrackerForChoiceInGroup = default(EntityRef<TrustTrackerForChoiceInGroup>);
			this._UserRating = default(EntityRef<UserRating>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustTrackerForChoiceInGroupsUserRatingLinkID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TrustTrackerForChoiceInGroupsUserRatingLinkID
		{
			get
			{
				return this._TrustTrackerForChoiceInGroupsUserRatingLinkID;
			}
			set
			{
				if ((this._TrustTrackerForChoiceInGroupsUserRatingLinkID != value))
				{
					this.OnTrustTrackerForChoiceInGroupsUserRatingLinkIDChanging(value);
					this.SendPropertyChanging();
					this._TrustTrackerForChoiceInGroupsUserRatingLinkID = value;
					this.SendPropertyChanged("TrustTrackerForChoiceInGroupsUserRatingLinkID");
					this.OnTrustTrackerForChoiceInGroupsUserRatingLinkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRatingID", DbType="Int NOT NULL")]
		public int UserRatingID
		{
			get
			{
				return this._UserRatingID;
			}
			set
			{
				if ((this._UserRatingID != value))
				{
					if (this._UserRating.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserRatingIDChanging(value);
					this.SendPropertyChanging();
					this._UserRatingID = value;
					this.SendPropertyChanged("UserRatingID");
					this.OnUserRatingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustTrackerForChoiceInGroupID", DbType="Int NOT NULL")]
		public int TrustTrackerForChoiceInGroupID
		{
			get
			{
				return this._TrustTrackerForChoiceInGroupID;
			}
			set
			{
				if ((this._TrustTrackerForChoiceInGroupID != value))
				{
					if (this._TrustTrackerForChoiceInGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrustTrackerForChoiceInGroupIDChanging(value);
					this.SendPropertyChanging();
					this._TrustTrackerForChoiceInGroupID = value;
					this.SendPropertyChanged("TrustTrackerForChoiceInGroupID");
					this.OnTrustTrackerForChoiceInGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrustTrackerForChoiceInGroup_TrustTrackerForChoiceInGroupsUserRatingLink", Storage="_TrustTrackerForChoiceInGroup", ThisKey="TrustTrackerForChoiceInGroupID", OtherKey="TrustTrackerForChoiceInGroupID", IsForeignKey=true)]
		public TrustTrackerForChoiceInGroup TrustTrackerForChoiceInGroup
		{
			get
			{
				return this._TrustTrackerForChoiceInGroup.Entity;
			}
			set
			{
				TrustTrackerForChoiceInGroup previousValue = this._TrustTrackerForChoiceInGroup.Entity;
				if (((previousValue != value) 
							|| (this._TrustTrackerForChoiceInGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrustTrackerForChoiceInGroup.Entity = null;
						previousValue.TrustTrackerForChoiceInGroupsUserRatingLinks.Remove(this);
					}
					this._TrustTrackerForChoiceInGroup.Entity = value;
					if ((value != null))
					{
						value.TrustTrackerForChoiceInGroupsUserRatingLinks.Add(this);
						this._TrustTrackerForChoiceInGroupID = value.TrustTrackerForChoiceInGroupID;
					}
					else
					{
						this._TrustTrackerForChoiceInGroupID = default(int);
					}
					this.SendPropertyChanged("TrustTrackerForChoiceInGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRating_TrustTrackerForChoiceInGroupsUserRatingLink", Storage="_UserRating", ThisKey="UserRatingID", OtherKey="UserRatingID", IsForeignKey=true)]
		public UserRating UserRating
		{
			get
			{
				return this._UserRating.Entity;
			}
			set
			{
				UserRating previousValue = this._UserRating.Entity;
				if (((previousValue != value) 
							|| (this._UserRating.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRating.Entity = null;
						previousValue.TrustTrackerForChoiceInGroupsUserRatingLinks.Remove(this);
					}
					this._UserRating.Entity = value;
					if ((value != null))
					{
						value.TrustTrackerForChoiceInGroupsUserRatingLinks.Add(this);
						this._UserRatingID = value.UserRatingID;
					}
					else
					{
						this._UserRatingID = default(int);
					}
					this.SendPropertyChanged("UserRating");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrustTrackerForChoiceInGroups")]
	public partial class TrustTrackerForChoiceInGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TrustTrackerForChoiceInGroupID;
		
		private int _UserID;
		
		private int _ChoiceInGroupID;
		
		private int _TblID;
		
		private float _SumAdjustmentPctTimesRatingMagnitude;
		
		private float _SumRatingMagnitudes;
		
		private float _TrustLevelForChoice;
		
		private EntitySet<TrustTrackerForChoiceInGroupsUserRatingLink> _TrustTrackerForChoiceInGroupsUserRatingLinks;
		
		private EntityRef<ChoiceInGroup> _ChoiceInGroup;
		
		private EntityRef<User> _User;
		
		private EntityRef<Tbl> _Tbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrustTrackerForChoiceInGroupIDChanging(int value);
    partial void OnTrustTrackerForChoiceInGroupIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnChoiceInGroupIDChanging(int value);
    partial void OnChoiceInGroupIDChanged();
    partial void OnTblIDChanging(int value);
    partial void OnTblIDChanged();
    partial void OnSumAdjustmentPctTimesRatingMagnitudeChanging(float value);
    partial void OnSumAdjustmentPctTimesRatingMagnitudeChanged();
    partial void OnSumRatingMagnitudesChanging(float value);
    partial void OnSumRatingMagnitudesChanged();
    partial void OnTrustLevelForChoiceChanging(float value);
    partial void OnTrustLevelForChoiceChanged();
    #endregion
		
		public TrustTrackerForChoiceInGroup()
		{
			this._TrustTrackerForChoiceInGroupsUserRatingLinks = new EntitySet<TrustTrackerForChoiceInGroupsUserRatingLink>(new Action<TrustTrackerForChoiceInGroupsUserRatingLink>(this.attach_TrustTrackerForChoiceInGroupsUserRatingLinks), new Action<TrustTrackerForChoiceInGroupsUserRatingLink>(this.detach_TrustTrackerForChoiceInGroupsUserRatingLinks));
			this._ChoiceInGroup = default(EntityRef<ChoiceInGroup>);
			this._User = default(EntityRef<User>);
			this._Tbl = default(EntityRef<Tbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustTrackerForChoiceInGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TrustTrackerForChoiceInGroupID
		{
			get
			{
				return this._TrustTrackerForChoiceInGroupID;
			}
			set
			{
				if ((this._TrustTrackerForChoiceInGroupID != value))
				{
					this.OnTrustTrackerForChoiceInGroupIDChanging(value);
					this.SendPropertyChanging();
					this._TrustTrackerForChoiceInGroupID = value;
					this.SendPropertyChanged("TrustTrackerForChoiceInGroupID");
					this.OnTrustTrackerForChoiceInGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceInGroupID", DbType="Int NOT NULL")]
		public int ChoiceInGroupID
		{
			get
			{
				return this._ChoiceInGroupID;
			}
			set
			{
				if ((this._ChoiceInGroupID != value))
				{
					if (this._ChoiceInGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChoiceInGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ChoiceInGroupID = value;
					this.SendPropertyChanged("ChoiceInGroupID");
					this.OnChoiceInGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblID", DbType="Int NOT NULL")]
		public int TblID
		{
			get
			{
				return this._TblID;
			}
			set
			{
				if ((this._TblID != value))
				{
					if (this._Tbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblIDChanging(value);
					this.SendPropertyChanging();
					this._TblID = value;
					this.SendPropertyChanged("TblID");
					this.OnTblIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumAdjustmentPctTimesRatingMagnitude", DbType="Real NOT NULL")]
		public float SumAdjustmentPctTimesRatingMagnitude
		{
			get
			{
				return this._SumAdjustmentPctTimesRatingMagnitude;
			}
			set
			{
				if ((this._SumAdjustmentPctTimesRatingMagnitude != value))
				{
					this.OnSumAdjustmentPctTimesRatingMagnitudeChanging(value);
					this.SendPropertyChanging();
					this._SumAdjustmentPctTimesRatingMagnitude = value;
					this.SendPropertyChanged("SumAdjustmentPctTimesRatingMagnitude");
					this.OnSumAdjustmentPctTimesRatingMagnitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumRatingMagnitudes", DbType="Real NOT NULL")]
		public float SumRatingMagnitudes
		{
			get
			{
				return this._SumRatingMagnitudes;
			}
			set
			{
				if ((this._SumRatingMagnitudes != value))
				{
					this.OnSumRatingMagnitudesChanging(value);
					this.SendPropertyChanging();
					this._SumRatingMagnitudes = value;
					this.SendPropertyChanged("SumRatingMagnitudes");
					this.OnSumRatingMagnitudesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustLevelForChoice", DbType="Real NOT NULL")]
		public float TrustLevelForChoice
		{
			get
			{
				return this._TrustLevelForChoice;
			}
			set
			{
				if ((this._TrustLevelForChoice != value))
				{
					this.OnTrustLevelForChoiceChanging(value);
					this.SendPropertyChanging();
					this._TrustLevelForChoice = value;
					this.SendPropertyChanged("TrustLevelForChoice");
					this.OnTrustLevelForChoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrustTrackerForChoiceInGroup_TrustTrackerForChoiceInGroupsUserRatingLink", Storage="_TrustTrackerForChoiceInGroupsUserRatingLinks", ThisKey="TrustTrackerForChoiceInGroupID", OtherKey="TrustTrackerForChoiceInGroupID")]
		public EntitySet<TrustTrackerForChoiceInGroupsUserRatingLink> TrustTrackerForChoiceInGroupsUserRatingLinks
		{
			get
			{
				return this._TrustTrackerForChoiceInGroupsUserRatingLinks;
			}
			set
			{
				this._TrustTrackerForChoiceInGroupsUserRatingLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChoiceInGroup_TrustTrackerForChoiceInGroup", Storage="_ChoiceInGroup", ThisKey="ChoiceInGroupID", OtherKey="ChoiceInGroupID", IsForeignKey=true)]
		public ChoiceInGroup ChoiceInGroup
		{
			get
			{
				return this._ChoiceInGroup.Entity;
			}
			set
			{
				ChoiceInGroup previousValue = this._ChoiceInGroup.Entity;
				if (((previousValue != value) 
							|| (this._ChoiceInGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChoiceInGroup.Entity = null;
						previousValue.TrustTrackerForChoiceInGroups.Remove(this);
					}
					this._ChoiceInGroup.Entity = value;
					if ((value != null))
					{
						value.TrustTrackerForChoiceInGroups.Add(this);
						this._ChoiceInGroupID = value.ChoiceInGroupID;
					}
					else
					{
						this._ChoiceInGroupID = default(int);
					}
					this.SendPropertyChanged("ChoiceInGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TrustTrackerForChoiceInGroup", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TrustTrackerForChoiceInGroups.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TrustTrackerForChoiceInGroups.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_TrustTrackerForChoiceInGroup", Storage="_Tbl", ThisKey="TblID", OtherKey="TblID", IsForeignKey=true)]
		public Tbl Tbl
		{
			get
			{
				return this._Tbl.Entity;
			}
			set
			{
				Tbl previousValue = this._Tbl.Entity;
				if (((previousValue != value) 
							|| (this._Tbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl.Entity = null;
						previousValue.TrustTrackerForChoiceInGroups.Remove(this);
					}
					this._Tbl.Entity = value;
					if ((value != null))
					{
						value.TrustTrackerForChoiceInGroups.Add(this);
						this._TblID = value.TblID;
					}
					else
					{
						this._TblID = default(int);
					}
					this.SendPropertyChanged("Tbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrustTrackerForChoiceInGroupsUserRatingLinks(TrustTrackerForChoiceInGroupsUserRatingLink entity)
		{
			this.SendPropertyChanging();
			entity.TrustTrackerForChoiceInGroup = this;
		}
		
		private void detach_TrustTrackerForChoiceInGroupsUserRatingLinks(TrustTrackerForChoiceInGroupsUserRatingLink entity)
		{
			this.SendPropertyChanging();
			entity.TrustTrackerForChoiceInGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PointsManagers")]
	public partial class PointsManager : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PointsManagerID;
		
		private int _DomainID;
		
		private System.Nullable<int> _TrustTrackerUnitID;
		
		private decimal _CurrentPeriodDollarSubsidy;
		
		private System.Nullable<System.DateTime> _EndOfDollarSubsidyPeriod;
		
		private System.Nullable<decimal> _NextPeriodDollarSubsidy;
		
		private System.Nullable<int> _NextPeriodLength;
		
		private short _NumPrizes;
		
		private System.Nullable<decimal> _MinimumPayment;
		
		private decimal _TotalUserPoints;
		
		private decimal _CurrentUserPoints;
		
		private decimal _CurrentUserPendingPoints;
		
		private decimal _CurrentUserNotYetPendingPoints;
		
		private decimal _CurrentPointsToCount;
		
		private int _NumUsersMeetingUltimateStandard;
		
		private int _NumUsersMeetingCurrentStandard;
		
		private decimal _HighStakesProbability;
		
		private decimal _HighStakesSecretMultiplier;
		
		private System.Nullable<decimal> _HighStakesKnownMultiplier;
		
		private bool _HighStakesNoviceOn;
		
		private int _HighStakesNoviceNumAutomatic;
		
		private int _HighStakesNoviceNumOneThird;
		
		private int _HighStakesNoviceNumOneTenth;
		
		private decimal _DatabaseChangeSelectHighStakesNoviceNumPct;
		
		private int _HighStakesNoviceNumActive;
		
		private int _HighStakesNoviceTargetNum;
		
		private decimal _DollarValuePerPoint;
		
		private decimal _DiscountForGuarantees;
		
		private decimal _MaximumTotalGuarantees;
		
		private decimal _MaximumGuaranteePaymentPerHour;
		
		private decimal _TotalUnconditionalGuaranteesEarnedEver;
		
		private decimal _TotalConditionalGuaranteesEarnedEver;
		
		private decimal _TotalConditionalGuaranteesPending;
		
		private bool _AllowApplicationsWhenNoConditionalGuaranteesAvailable;
		
		private bool _ConditionalGuaranteesAvailableForNewUsers;
		
		private bool _ConditionalGuaranteesAvailableForExistingUsers;
		
		private int _ConditionalGuaranteeTimeBlockInHours;
		
		private int _ConditionalGuaranteeApplicationsReceived;
		
		private string _Name;
		
		private System.Nullable<int> _Creator;
		
		private byte _Status;
		
		private EntitySet<ChangesGroup> _ChangesGroups;
		
		private EntitySet<ChoiceGroup> _ChoiceGroups;
		
		private EntitySet<InsertableContent> _InsertableContents;
		
		private EntitySet<PointsAdjustment> _PointsAdjustments;
		
		private EntitySet<ProposalEvaluationRatingSetting> _ProposalEvaluationRatingSettings;
		
		private EntitySet<RewardRatingSetting> _RewardRatingSettings;
		
		private EntitySet<UsersAdministrationRightsGroup> _UsersAdministrationRightsGroups;
		
		private EntitySet<UsersRight> _UsersRights;
		
		private EntitySet<AdministrationRightsGroup> _AdministrationRightsGroups;
		
		private EntitySet<RatingGroupAttribute> _RatingGroupAttributes;
		
		private EntitySet<PointsTotal> _PointsTotals;
		
		private EntitySet<Tbl> _Tbls;
		
		private EntitySet<ProposalSetting> _ProposalSettings;
		
		private EntityRef<TrustTrackerUnit> _TrustTrackerUnit;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPointsManagerIDChanging(int value);
    partial void OnPointsManagerIDChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnTrustTrackerUnitIDChanging(System.Nullable<int> value);
    partial void OnTrustTrackerUnitIDChanged();
    partial void OnCurrentPeriodDollarSubsidyChanging(decimal value);
    partial void OnCurrentPeriodDollarSubsidyChanged();
    partial void OnEndOfDollarSubsidyPeriodChanging(System.Nullable<System.DateTime> value);
    partial void OnEndOfDollarSubsidyPeriodChanged();
    partial void OnNextPeriodDollarSubsidyChanging(System.Nullable<decimal> value);
    partial void OnNextPeriodDollarSubsidyChanged();
    partial void OnNextPeriodLengthChanging(System.Nullable<int> value);
    partial void OnNextPeriodLengthChanged();
    partial void OnNumPrizesChanging(short value);
    partial void OnNumPrizesChanged();
    partial void OnMinimumPaymentChanging(System.Nullable<decimal> value);
    partial void OnMinimumPaymentChanged();
    partial void OnTotalUserPointsChanging(decimal value);
    partial void OnTotalUserPointsChanged();
    partial void OnCurrentUserPointsChanging(decimal value);
    partial void OnCurrentUserPointsChanged();
    partial void OnCurrentUserPendingPointsChanging(decimal value);
    partial void OnCurrentUserPendingPointsChanged();
    partial void OnCurrentUserNotYetPendingPointsChanging(decimal value);
    partial void OnCurrentUserNotYetPendingPointsChanged();
    partial void OnCurrentPointsToCountChanging(decimal value);
    partial void OnCurrentPointsToCountChanged();
    partial void OnNumUsersMeetingUltimateStandardChanging(int value);
    partial void OnNumUsersMeetingUltimateStandardChanged();
    partial void OnNumUsersMeetingCurrentStandardChanging(int value);
    partial void OnNumUsersMeetingCurrentStandardChanged();
    partial void OnHighStakesProbabilityChanging(decimal value);
    partial void OnHighStakesProbabilityChanged();
    partial void OnHighStakesSecretMultiplierChanging(decimal value);
    partial void OnHighStakesSecretMultiplierChanged();
    partial void OnHighStakesKnownMultiplierChanging(System.Nullable<decimal> value);
    partial void OnHighStakesKnownMultiplierChanged();
    partial void OnHighStakesNoviceOnChanging(bool value);
    partial void OnHighStakesNoviceOnChanged();
    partial void OnHighStakesNoviceNumAutomaticChanging(int value);
    partial void OnHighStakesNoviceNumAutomaticChanged();
    partial void OnHighStakesNoviceNumOneThirdChanging(int value);
    partial void OnHighStakesNoviceNumOneThirdChanged();
    partial void OnHighStakesNoviceNumOneTenthChanging(int value);
    partial void OnHighStakesNoviceNumOneTenthChanged();
    partial void OnDatabaseChangeSelectHighStakesNoviceNumPctChanging(decimal value);
    partial void OnDatabaseChangeSelectHighStakesNoviceNumPctChanged();
    partial void OnHighStakesNoviceNumActiveChanging(int value);
    partial void OnHighStakesNoviceNumActiveChanged();
    partial void OnHighStakesNoviceTargetNumChanging(int value);
    partial void OnHighStakesNoviceTargetNumChanged();
    partial void OnDollarValuePerPointChanging(decimal value);
    partial void OnDollarValuePerPointChanged();
    partial void OnDiscountForGuaranteesChanging(decimal value);
    partial void OnDiscountForGuaranteesChanged();
    partial void OnMaximumTotalGuaranteesChanging(decimal value);
    partial void OnMaximumTotalGuaranteesChanged();
    partial void OnMaximumGuaranteePaymentPerHourChanging(decimal value);
    partial void OnMaximumGuaranteePaymentPerHourChanged();
    partial void OnTotalUnconditionalGuaranteesEarnedEverChanging(decimal value);
    partial void OnTotalUnconditionalGuaranteesEarnedEverChanged();
    partial void OnTotalConditionalGuaranteesEarnedEverChanging(decimal value);
    partial void OnTotalConditionalGuaranteesEarnedEverChanged();
    partial void OnTotalConditionalGuaranteesPendingChanging(decimal value);
    partial void OnTotalConditionalGuaranteesPendingChanged();
    partial void OnAllowApplicationsWhenNoConditionalGuaranteesAvailableChanging(bool value);
    partial void OnAllowApplicationsWhenNoConditionalGuaranteesAvailableChanged();
    partial void OnConditionalGuaranteesAvailableForNewUsersChanging(bool value);
    partial void OnConditionalGuaranteesAvailableForNewUsersChanged();
    partial void OnConditionalGuaranteesAvailableForExistingUsersChanging(bool value);
    partial void OnConditionalGuaranteesAvailableForExistingUsersChanged();
    partial void OnConditionalGuaranteeTimeBlockInHoursChanging(int value);
    partial void OnConditionalGuaranteeTimeBlockInHoursChanged();
    partial void OnConditionalGuaranteeApplicationsReceivedChanging(int value);
    partial void OnConditionalGuaranteeApplicationsReceivedChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public PointsManager()
		{
			this._ChangesGroups = new EntitySet<ChangesGroup>(new Action<ChangesGroup>(this.attach_ChangesGroups), new Action<ChangesGroup>(this.detach_ChangesGroups));
			this._ChoiceGroups = new EntitySet<ChoiceGroup>(new Action<ChoiceGroup>(this.attach_ChoiceGroups), new Action<ChoiceGroup>(this.detach_ChoiceGroups));
			this._InsertableContents = new EntitySet<InsertableContent>(new Action<InsertableContent>(this.attach_InsertableContents), new Action<InsertableContent>(this.detach_InsertableContents));
			this._PointsAdjustments = new EntitySet<PointsAdjustment>(new Action<PointsAdjustment>(this.attach_PointsAdjustments), new Action<PointsAdjustment>(this.detach_PointsAdjustments));
			this._ProposalEvaluationRatingSettings = new EntitySet<ProposalEvaluationRatingSetting>(new Action<ProposalEvaluationRatingSetting>(this.attach_ProposalEvaluationRatingSettings), new Action<ProposalEvaluationRatingSetting>(this.detach_ProposalEvaluationRatingSettings));
			this._RewardRatingSettings = new EntitySet<RewardRatingSetting>(new Action<RewardRatingSetting>(this.attach_RewardRatingSettings), new Action<RewardRatingSetting>(this.detach_RewardRatingSettings));
			this._UsersAdministrationRightsGroups = new EntitySet<UsersAdministrationRightsGroup>(new Action<UsersAdministrationRightsGroup>(this.attach_UsersAdministrationRightsGroups), new Action<UsersAdministrationRightsGroup>(this.detach_UsersAdministrationRightsGroups));
			this._UsersRights = new EntitySet<UsersRight>(new Action<UsersRight>(this.attach_UsersRights), new Action<UsersRight>(this.detach_UsersRights));
			this._AdministrationRightsGroups = new EntitySet<AdministrationRightsGroup>(new Action<AdministrationRightsGroup>(this.attach_AdministrationRightsGroups), new Action<AdministrationRightsGroup>(this.detach_AdministrationRightsGroups));
			this._RatingGroupAttributes = new EntitySet<RatingGroupAttribute>(new Action<RatingGroupAttribute>(this.attach_RatingGroupAttributes), new Action<RatingGroupAttribute>(this.detach_RatingGroupAttributes));
			this._PointsTotals = new EntitySet<PointsTotal>(new Action<PointsTotal>(this.attach_PointsTotals), new Action<PointsTotal>(this.detach_PointsTotals));
			this._Tbls = new EntitySet<Tbl>(new Action<Tbl>(this.attach_Tbls), new Action<Tbl>(this.detach_Tbls));
			this._ProposalSettings = new EntitySet<ProposalSetting>(new Action<ProposalSetting>(this.attach_ProposalSettings), new Action<ProposalSetting>(this.detach_ProposalSettings));
			this._TrustTrackerUnit = default(EntityRef<TrustTrackerUnit>);
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsManagerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PointsManagerID
		{
			get
			{
				return this._PointsManagerID;
			}
			set
			{
				if ((this._PointsManagerID != value))
				{
					this.OnPointsManagerIDChanging(value);
					this.SendPropertyChanging();
					this._PointsManagerID = value;
					this.SendPropertyChanged("PointsManagerID");
					this.OnPointsManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainID", DbType="Int NOT NULL")]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustTrackerUnitID", DbType="Int")]
		public System.Nullable<int> TrustTrackerUnitID
		{
			get
			{
				return this._TrustTrackerUnitID;
			}
			set
			{
				if ((this._TrustTrackerUnitID != value))
				{
					if (this._TrustTrackerUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrustTrackerUnitIDChanging(value);
					this.SendPropertyChanging();
					this._TrustTrackerUnitID = value;
					this.SendPropertyChanged("TrustTrackerUnitID");
					this.OnTrustTrackerUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPeriodDollarSubsidy", DbType="Decimal(18,2) NOT NULL")]
		public decimal CurrentPeriodDollarSubsidy
		{
			get
			{
				return this._CurrentPeriodDollarSubsidy;
			}
			set
			{
				if ((this._CurrentPeriodDollarSubsidy != value))
				{
					this.OnCurrentPeriodDollarSubsidyChanging(value);
					this.SendPropertyChanging();
					this._CurrentPeriodDollarSubsidy = value;
					this.SendPropertyChanged("CurrentPeriodDollarSubsidy");
					this.OnCurrentPeriodDollarSubsidyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndOfDollarSubsidyPeriod", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndOfDollarSubsidyPeriod
		{
			get
			{
				return this._EndOfDollarSubsidyPeriod;
			}
			set
			{
				if ((this._EndOfDollarSubsidyPeriod != value))
				{
					this.OnEndOfDollarSubsidyPeriodChanging(value);
					this.SendPropertyChanging();
					this._EndOfDollarSubsidyPeriod = value;
					this.SendPropertyChanged("EndOfDollarSubsidyPeriod");
					this.OnEndOfDollarSubsidyPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextPeriodDollarSubsidy", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> NextPeriodDollarSubsidy
		{
			get
			{
				return this._NextPeriodDollarSubsidy;
			}
			set
			{
				if ((this._NextPeriodDollarSubsidy != value))
				{
					this.OnNextPeriodDollarSubsidyChanging(value);
					this.SendPropertyChanging();
					this._NextPeriodDollarSubsidy = value;
					this.SendPropertyChanged("NextPeriodDollarSubsidy");
					this.OnNextPeriodDollarSubsidyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextPeriodLength", DbType="Int")]
		public System.Nullable<int> NextPeriodLength
		{
			get
			{
				return this._NextPeriodLength;
			}
			set
			{
				if ((this._NextPeriodLength != value))
				{
					this.OnNextPeriodLengthChanging(value);
					this.SendPropertyChanging();
					this._NextPeriodLength = value;
					this.SendPropertyChanged("NextPeriodLength");
					this.OnNextPeriodLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumPrizes", DbType="SmallInt NOT NULL")]
		public short NumPrizes
		{
			get
			{
				return this._NumPrizes;
			}
			set
			{
				if ((this._NumPrizes != value))
				{
					this.OnNumPrizesChanging(value);
					this.SendPropertyChanging();
					this._NumPrizes = value;
					this.SendPropertyChanged("NumPrizes");
					this.OnNumPrizesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumPayment", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MinimumPayment
		{
			get
			{
				return this._MinimumPayment;
			}
			set
			{
				if ((this._MinimumPayment != value))
				{
					this.OnMinimumPaymentChanging(value);
					this.SendPropertyChanging();
					this._MinimumPayment = value;
					this.SendPropertyChanged("MinimumPayment");
					this.OnMinimumPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalUserPoints", DbType="Decimal(18,4) NOT NULL")]
		public decimal TotalUserPoints
		{
			get
			{
				return this._TotalUserPoints;
			}
			set
			{
				if ((this._TotalUserPoints != value))
				{
					this.OnTotalUserPointsChanging(value);
					this.SendPropertyChanging();
					this._TotalUserPoints = value;
					this.SendPropertyChanged("TotalUserPoints");
					this.OnTotalUserPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentUserPoints", DbType="Decimal(18,4) NOT NULL")]
		public decimal CurrentUserPoints
		{
			get
			{
				return this._CurrentUserPoints;
			}
			set
			{
				if ((this._CurrentUserPoints != value))
				{
					this.OnCurrentUserPointsChanging(value);
					this.SendPropertyChanging();
					this._CurrentUserPoints = value;
					this.SendPropertyChanged("CurrentUserPoints");
					this.OnCurrentUserPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentUserPendingPoints", DbType="Decimal(18,4) NOT NULL")]
		public decimal CurrentUserPendingPoints
		{
			get
			{
				return this._CurrentUserPendingPoints;
			}
			set
			{
				if ((this._CurrentUserPendingPoints != value))
				{
					this.OnCurrentUserPendingPointsChanging(value);
					this.SendPropertyChanging();
					this._CurrentUserPendingPoints = value;
					this.SendPropertyChanged("CurrentUserPendingPoints");
					this.OnCurrentUserPendingPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentUserNotYetPendingPoints", DbType="Decimal(18,4) NOT NULL")]
		public decimal CurrentUserNotYetPendingPoints
		{
			get
			{
				return this._CurrentUserNotYetPendingPoints;
			}
			set
			{
				if ((this._CurrentUserNotYetPendingPoints != value))
				{
					this.OnCurrentUserNotYetPendingPointsChanging(value);
					this.SendPropertyChanging();
					this._CurrentUserNotYetPendingPoints = value;
					this.SendPropertyChanged("CurrentUserNotYetPendingPoints");
					this.OnCurrentUserNotYetPendingPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPointsToCount", DbType="Decimal(18,4) NOT NULL")]
		public decimal CurrentPointsToCount
		{
			get
			{
				return this._CurrentPointsToCount;
			}
			set
			{
				if ((this._CurrentPointsToCount != value))
				{
					this.OnCurrentPointsToCountChanging(value);
					this.SendPropertyChanging();
					this._CurrentPointsToCount = value;
					this.SendPropertyChanged("CurrentPointsToCount");
					this.OnCurrentPointsToCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumUsersMeetingUltimateStandard", DbType="Int NOT NULL")]
		public int NumUsersMeetingUltimateStandard
		{
			get
			{
				return this._NumUsersMeetingUltimateStandard;
			}
			set
			{
				if ((this._NumUsersMeetingUltimateStandard != value))
				{
					this.OnNumUsersMeetingUltimateStandardChanging(value);
					this.SendPropertyChanging();
					this._NumUsersMeetingUltimateStandard = value;
					this.SendPropertyChanged("NumUsersMeetingUltimateStandard");
					this.OnNumUsersMeetingUltimateStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumUsersMeetingCurrentStandard", DbType="Int NOT NULL")]
		public int NumUsersMeetingCurrentStandard
		{
			get
			{
				return this._NumUsersMeetingCurrentStandard;
			}
			set
			{
				if ((this._NumUsersMeetingCurrentStandard != value))
				{
					this.OnNumUsersMeetingCurrentStandardChanging(value);
					this.SendPropertyChanging();
					this._NumUsersMeetingCurrentStandard = value;
					this.SendPropertyChanged("NumUsersMeetingCurrentStandard");
					this.OnNumUsersMeetingCurrentStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighStakesProbability", DbType="Decimal(18,4) NOT NULL")]
		public decimal HighStakesProbability
		{
			get
			{
				return this._HighStakesProbability;
			}
			set
			{
				if ((this._HighStakesProbability != value))
				{
					this.OnHighStakesProbabilityChanging(value);
					this.SendPropertyChanging();
					this._HighStakesProbability = value;
					this.SendPropertyChanged("HighStakesProbability");
					this.OnHighStakesProbabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighStakesSecretMultiplier", DbType="Decimal(18,4) NOT NULL")]
		public decimal HighStakesSecretMultiplier
		{
			get
			{
				return this._HighStakesSecretMultiplier;
			}
			set
			{
				if ((this._HighStakesSecretMultiplier != value))
				{
					this.OnHighStakesSecretMultiplierChanging(value);
					this.SendPropertyChanging();
					this._HighStakesSecretMultiplier = value;
					this.SendPropertyChanged("HighStakesSecretMultiplier");
					this.OnHighStakesSecretMultiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighStakesKnownMultiplier", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> HighStakesKnownMultiplier
		{
			get
			{
				return this._HighStakesKnownMultiplier;
			}
			set
			{
				if ((this._HighStakesKnownMultiplier != value))
				{
					this.OnHighStakesKnownMultiplierChanging(value);
					this.SendPropertyChanging();
					this._HighStakesKnownMultiplier = value;
					this.SendPropertyChanged("HighStakesKnownMultiplier");
					this.OnHighStakesKnownMultiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighStakesNoviceOn", DbType="Bit NOT NULL")]
		public bool HighStakesNoviceOn
		{
			get
			{
				return this._HighStakesNoviceOn;
			}
			set
			{
				if ((this._HighStakesNoviceOn != value))
				{
					this.OnHighStakesNoviceOnChanging(value);
					this.SendPropertyChanging();
					this._HighStakesNoviceOn = value;
					this.SendPropertyChanged("HighStakesNoviceOn");
					this.OnHighStakesNoviceOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighStakesNoviceNumAutomatic", DbType="Int NOT NULL")]
		public int HighStakesNoviceNumAutomatic
		{
			get
			{
				return this._HighStakesNoviceNumAutomatic;
			}
			set
			{
				if ((this._HighStakesNoviceNumAutomatic != value))
				{
					this.OnHighStakesNoviceNumAutomaticChanging(value);
					this.SendPropertyChanging();
					this._HighStakesNoviceNumAutomatic = value;
					this.SendPropertyChanged("HighStakesNoviceNumAutomatic");
					this.OnHighStakesNoviceNumAutomaticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighStakesNoviceNumOneThird", DbType="Int NOT NULL")]
		public int HighStakesNoviceNumOneThird
		{
			get
			{
				return this._HighStakesNoviceNumOneThird;
			}
			set
			{
				if ((this._HighStakesNoviceNumOneThird != value))
				{
					this.OnHighStakesNoviceNumOneThirdChanging(value);
					this.SendPropertyChanging();
					this._HighStakesNoviceNumOneThird = value;
					this.SendPropertyChanged("HighStakesNoviceNumOneThird");
					this.OnHighStakesNoviceNumOneThirdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighStakesNoviceNumOneTenth", DbType="Int NOT NULL")]
		public int HighStakesNoviceNumOneTenth
		{
			get
			{
				return this._HighStakesNoviceNumOneTenth;
			}
			set
			{
				if ((this._HighStakesNoviceNumOneTenth != value))
				{
					this.OnHighStakesNoviceNumOneTenthChanging(value);
					this.SendPropertyChanging();
					this._HighStakesNoviceNumOneTenth = value;
					this.SendPropertyChanged("HighStakesNoviceNumOneTenth");
					this.OnHighStakesNoviceNumOneTenthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseChangeSelectHighStakesNoviceNumPct", DbType="Decimal(18,4) NOT NULL")]
		public decimal DatabaseChangeSelectHighStakesNoviceNumPct
		{
			get
			{
				return this._DatabaseChangeSelectHighStakesNoviceNumPct;
			}
			set
			{
				if ((this._DatabaseChangeSelectHighStakesNoviceNumPct != value))
				{
					this.OnDatabaseChangeSelectHighStakesNoviceNumPctChanging(value);
					this.SendPropertyChanging();
					this._DatabaseChangeSelectHighStakesNoviceNumPct = value;
					this.SendPropertyChanged("DatabaseChangeSelectHighStakesNoviceNumPct");
					this.OnDatabaseChangeSelectHighStakesNoviceNumPctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighStakesNoviceNumActive", DbType="Int NOT NULL")]
		public int HighStakesNoviceNumActive
		{
			get
			{
				return this._HighStakesNoviceNumActive;
			}
			set
			{
				if ((this._HighStakesNoviceNumActive != value))
				{
					this.OnHighStakesNoviceNumActiveChanging(value);
					this.SendPropertyChanging();
					this._HighStakesNoviceNumActive = value;
					this.SendPropertyChanged("HighStakesNoviceNumActive");
					this.OnHighStakesNoviceNumActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighStakesNoviceTargetNum", DbType="Int NOT NULL")]
		public int HighStakesNoviceTargetNum
		{
			get
			{
				return this._HighStakesNoviceTargetNum;
			}
			set
			{
				if ((this._HighStakesNoviceTargetNum != value))
				{
					this.OnHighStakesNoviceTargetNumChanging(value);
					this.SendPropertyChanging();
					this._HighStakesNoviceTargetNum = value;
					this.SendPropertyChanged("HighStakesNoviceTargetNum");
					this.OnHighStakesNoviceTargetNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DollarValuePerPoint", DbType="Decimal(18,8) NOT NULL")]
		public decimal DollarValuePerPoint
		{
			get
			{
				return this._DollarValuePerPoint;
			}
			set
			{
				if ((this._DollarValuePerPoint != value))
				{
					this.OnDollarValuePerPointChanging(value);
					this.SendPropertyChanging();
					this._DollarValuePerPoint = value;
					this.SendPropertyChanged("DollarValuePerPoint");
					this.OnDollarValuePerPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountForGuarantees", DbType="Decimal(18,4) NOT NULL")]
		public decimal DiscountForGuarantees
		{
			get
			{
				return this._DiscountForGuarantees;
			}
			set
			{
				if ((this._DiscountForGuarantees != value))
				{
					this.OnDiscountForGuaranteesChanging(value);
					this.SendPropertyChanging();
					this._DiscountForGuarantees = value;
					this.SendPropertyChanged("DiscountForGuarantees");
					this.OnDiscountForGuaranteesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumTotalGuarantees", DbType="Decimal(18,4) NOT NULL")]
		public decimal MaximumTotalGuarantees
		{
			get
			{
				return this._MaximumTotalGuarantees;
			}
			set
			{
				if ((this._MaximumTotalGuarantees != value))
				{
					this.OnMaximumTotalGuaranteesChanging(value);
					this.SendPropertyChanging();
					this._MaximumTotalGuarantees = value;
					this.SendPropertyChanged("MaximumTotalGuarantees");
					this.OnMaximumTotalGuaranteesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumGuaranteePaymentPerHour", DbType="Decimal(18,2) NOT NULL")]
		public decimal MaximumGuaranteePaymentPerHour
		{
			get
			{
				return this._MaximumGuaranteePaymentPerHour;
			}
			set
			{
				if ((this._MaximumGuaranteePaymentPerHour != value))
				{
					this.OnMaximumGuaranteePaymentPerHourChanging(value);
					this.SendPropertyChanging();
					this._MaximumGuaranteePaymentPerHour = value;
					this.SendPropertyChanged("MaximumGuaranteePaymentPerHour");
					this.OnMaximumGuaranteePaymentPerHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalUnconditionalGuaranteesEarnedEver", DbType="Decimal(18,4) NOT NULL")]
		public decimal TotalUnconditionalGuaranteesEarnedEver
		{
			get
			{
				return this._TotalUnconditionalGuaranteesEarnedEver;
			}
			set
			{
				if ((this._TotalUnconditionalGuaranteesEarnedEver != value))
				{
					this.OnTotalUnconditionalGuaranteesEarnedEverChanging(value);
					this.SendPropertyChanging();
					this._TotalUnconditionalGuaranteesEarnedEver = value;
					this.SendPropertyChanged("TotalUnconditionalGuaranteesEarnedEver");
					this.OnTotalUnconditionalGuaranteesEarnedEverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalConditionalGuaranteesEarnedEver", DbType="Decimal(18,4) NOT NULL")]
		public decimal TotalConditionalGuaranteesEarnedEver
		{
			get
			{
				return this._TotalConditionalGuaranteesEarnedEver;
			}
			set
			{
				if ((this._TotalConditionalGuaranteesEarnedEver != value))
				{
					this.OnTotalConditionalGuaranteesEarnedEverChanging(value);
					this.SendPropertyChanging();
					this._TotalConditionalGuaranteesEarnedEver = value;
					this.SendPropertyChanged("TotalConditionalGuaranteesEarnedEver");
					this.OnTotalConditionalGuaranteesEarnedEverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalConditionalGuaranteesPending", DbType="Decimal(18,4) NOT NULL")]
		public decimal TotalConditionalGuaranteesPending
		{
			get
			{
				return this._TotalConditionalGuaranteesPending;
			}
			set
			{
				if ((this._TotalConditionalGuaranteesPending != value))
				{
					this.OnTotalConditionalGuaranteesPendingChanging(value);
					this.SendPropertyChanging();
					this._TotalConditionalGuaranteesPending = value;
					this.SendPropertyChanged("TotalConditionalGuaranteesPending");
					this.OnTotalConditionalGuaranteesPendingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowApplicationsWhenNoConditionalGuaranteesAvailable", DbType="Bit NOT NULL")]
		public bool AllowApplicationsWhenNoConditionalGuaranteesAvailable
		{
			get
			{
				return this._AllowApplicationsWhenNoConditionalGuaranteesAvailable;
			}
			set
			{
				if ((this._AllowApplicationsWhenNoConditionalGuaranteesAvailable != value))
				{
					this.OnAllowApplicationsWhenNoConditionalGuaranteesAvailableChanging(value);
					this.SendPropertyChanging();
					this._AllowApplicationsWhenNoConditionalGuaranteesAvailable = value;
					this.SendPropertyChanged("AllowApplicationsWhenNoConditionalGuaranteesAvailable");
					this.OnAllowApplicationsWhenNoConditionalGuaranteesAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionalGuaranteesAvailableForNewUsers", DbType="Bit NOT NULL")]
		public bool ConditionalGuaranteesAvailableForNewUsers
		{
			get
			{
				return this._ConditionalGuaranteesAvailableForNewUsers;
			}
			set
			{
				if ((this._ConditionalGuaranteesAvailableForNewUsers != value))
				{
					this.OnConditionalGuaranteesAvailableForNewUsersChanging(value);
					this.SendPropertyChanging();
					this._ConditionalGuaranteesAvailableForNewUsers = value;
					this.SendPropertyChanged("ConditionalGuaranteesAvailableForNewUsers");
					this.OnConditionalGuaranteesAvailableForNewUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionalGuaranteesAvailableForExistingUsers", DbType="Bit NOT NULL")]
		public bool ConditionalGuaranteesAvailableForExistingUsers
		{
			get
			{
				return this._ConditionalGuaranteesAvailableForExistingUsers;
			}
			set
			{
				if ((this._ConditionalGuaranteesAvailableForExistingUsers != value))
				{
					this.OnConditionalGuaranteesAvailableForExistingUsersChanging(value);
					this.SendPropertyChanging();
					this._ConditionalGuaranteesAvailableForExistingUsers = value;
					this.SendPropertyChanged("ConditionalGuaranteesAvailableForExistingUsers");
					this.OnConditionalGuaranteesAvailableForExistingUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionalGuaranteeTimeBlockInHours", DbType="Int NOT NULL")]
		public int ConditionalGuaranteeTimeBlockInHours
		{
			get
			{
				return this._ConditionalGuaranteeTimeBlockInHours;
			}
			set
			{
				if ((this._ConditionalGuaranteeTimeBlockInHours != value))
				{
					this.OnConditionalGuaranteeTimeBlockInHoursChanging(value);
					this.SendPropertyChanging();
					this._ConditionalGuaranteeTimeBlockInHours = value;
					this.SendPropertyChanged("ConditionalGuaranteeTimeBlockInHours");
					this.OnConditionalGuaranteeTimeBlockInHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionalGuaranteeApplicationsReceived", DbType="Int NOT NULL")]
		public int ConditionalGuaranteeApplicationsReceived
		{
			get
			{
				return this._ConditionalGuaranteeApplicationsReceived;
			}
			set
			{
				if ((this._ConditionalGuaranteeApplicationsReceived != value))
				{
					this.OnConditionalGuaranteeApplicationsReceivedChanging(value);
					this.SendPropertyChanging();
					this._ConditionalGuaranteeApplicationsReceived = value;
					this.SendPropertyChanged("ConditionalGuaranteeApplicationsReceived");
					this.OnConditionalGuaranteeApplicationsReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_ChangesGroup", Storage="_ChangesGroups", ThisKey="PointsManagerID", OtherKey="PointsManagerID")]
		public EntitySet<ChangesGroup> ChangesGroups
		{
			get
			{
				return this._ChangesGroups;
			}
			set
			{
				this._ChangesGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_ChoiceGroup", Storage="_ChoiceGroups", ThisKey="PointsManagerID", OtherKey="PointsManagerID")]
		public EntitySet<ChoiceGroup> ChoiceGroups
		{
			get
			{
				return this._ChoiceGroups;
			}
			set
			{
				this._ChoiceGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_InsertableContent", Storage="_InsertableContents", ThisKey="PointsManagerID", OtherKey="PointsManagerID")]
		public EntitySet<InsertableContent> InsertableContents
		{
			get
			{
				return this._InsertableContents;
			}
			set
			{
				this._InsertableContents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_PointsAdjustment", Storage="_PointsAdjustments", ThisKey="PointsManagerID", OtherKey="PointsManagerID")]
		public EntitySet<PointsAdjustment> PointsAdjustments
		{
			get
			{
				return this._PointsAdjustments;
			}
			set
			{
				this._PointsAdjustments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_ProposalEvaluationRatingSetting", Storage="_ProposalEvaluationRatingSettings", ThisKey="PointsManagerID", OtherKey="PointsManagerID")]
		public EntitySet<ProposalEvaluationRatingSetting> ProposalEvaluationRatingSettings
		{
			get
			{
				return this._ProposalEvaluationRatingSettings;
			}
			set
			{
				this._ProposalEvaluationRatingSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_RewardRatingSetting", Storage="_RewardRatingSettings", ThisKey="PointsManagerID", OtherKey="PointsManagerID")]
		public EntitySet<RewardRatingSetting> RewardRatingSettings
		{
			get
			{
				return this._RewardRatingSettings;
			}
			set
			{
				this._RewardRatingSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_UsersAdministrationRightsGroup", Storage="_UsersAdministrationRightsGroups", ThisKey="PointsManagerID", OtherKey="PointsManagerID")]
		public EntitySet<UsersAdministrationRightsGroup> UsersAdministrationRightsGroups
		{
			get
			{
				return this._UsersAdministrationRightsGroups;
			}
			set
			{
				this._UsersAdministrationRightsGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_UsersRight", Storage="_UsersRights", ThisKey="PointsManagerID", OtherKey="PointsManagerID")]
		public EntitySet<UsersRight> UsersRights
		{
			get
			{
				return this._UsersRights;
			}
			set
			{
				this._UsersRights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_AdministrationRightsGroup", Storage="_AdministrationRightsGroups", ThisKey="PointsManagerID", OtherKey="PointsManagerID")]
		public EntitySet<AdministrationRightsGroup> AdministrationRightsGroups
		{
			get
			{
				return this._AdministrationRightsGroups;
			}
			set
			{
				this._AdministrationRightsGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_RatingGroupAttribute", Storage="_RatingGroupAttributes", ThisKey="PointsManagerID", OtherKey="PointsManagerID")]
		public EntitySet<RatingGroupAttribute> RatingGroupAttributes
		{
			get
			{
				return this._RatingGroupAttributes;
			}
			set
			{
				this._RatingGroupAttributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_PointsTotal", Storage="_PointsTotals", ThisKey="PointsManagerID", OtherKey="PointsManagerID")]
		public EntitySet<PointsTotal> PointsTotals
		{
			get
			{
				return this._PointsTotals;
			}
			set
			{
				this._PointsTotals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_Tbl", Storage="_Tbls", ThisKey="PointsManagerID", OtherKey="PointsManagerID")]
		public EntitySet<Tbl> Tbls
		{
			get
			{
				return this._Tbls;
			}
			set
			{
				this._Tbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_ProposalSetting", Storage="_ProposalSettings", ThisKey="PointsManagerID", OtherKey="PointsManagerID")]
		public EntitySet<ProposalSetting> ProposalSettings
		{
			get
			{
				return this._ProposalSettings;
			}
			set
			{
				this._ProposalSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrustTrackerUnit_PointsManager", Storage="_TrustTrackerUnit", ThisKey="TrustTrackerUnitID", OtherKey="TrustTrackerUnitID", IsForeignKey=true)]
		public TrustTrackerUnit TrustTrackerUnit
		{
			get
			{
				return this._TrustTrackerUnit.Entity;
			}
			set
			{
				TrustTrackerUnit previousValue = this._TrustTrackerUnit.Entity;
				if (((previousValue != value) 
							|| (this._TrustTrackerUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrustTrackerUnit.Entity = null;
						previousValue.PointsManagers.Remove(this);
					}
					this._TrustTrackerUnit.Entity = value;
					if ((value != null))
					{
						value.PointsManagers.Add(this);
						this._TrustTrackerUnitID = value.TrustTrackerUnitID;
					}
					else
					{
						this._TrustTrackerUnitID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrustTrackerUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Domain_PointsManager", Storage="_Domain", ThisKey="DomainID", OtherKey="DomainID", IsForeignKey=true)]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.PointsManagers.Remove(this);
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.PointsManagers.Add(this);
						this._DomainID = value.DomainID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChangesGroups(ChangesGroup entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = this;
		}
		
		private void detach_ChangesGroups(ChangesGroup entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = null;
		}
		
		private void attach_ChoiceGroups(ChoiceGroup entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = this;
		}
		
		private void detach_ChoiceGroups(ChoiceGroup entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = null;
		}
		
		private void attach_InsertableContents(InsertableContent entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = this;
		}
		
		private void detach_InsertableContents(InsertableContent entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = null;
		}
		
		private void attach_PointsAdjustments(PointsAdjustment entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = this;
		}
		
		private void detach_PointsAdjustments(PointsAdjustment entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = null;
		}
		
		private void attach_ProposalEvaluationRatingSettings(ProposalEvaluationRatingSetting entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = this;
		}
		
		private void detach_ProposalEvaluationRatingSettings(ProposalEvaluationRatingSetting entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = null;
		}
		
		private void attach_RewardRatingSettings(RewardRatingSetting entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = this;
		}
		
		private void detach_RewardRatingSettings(RewardRatingSetting entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = null;
		}
		
		private void attach_UsersAdministrationRightsGroups(UsersAdministrationRightsGroup entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = this;
		}
		
		private void detach_UsersAdministrationRightsGroups(UsersAdministrationRightsGroup entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = null;
		}
		
		private void attach_UsersRights(UsersRight entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = this;
		}
		
		private void detach_UsersRights(UsersRight entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = null;
		}
		
		private void attach_AdministrationRightsGroups(AdministrationRightsGroup entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = this;
		}
		
		private void detach_AdministrationRightsGroups(AdministrationRightsGroup entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = null;
		}
		
		private void attach_RatingGroupAttributes(RatingGroupAttribute entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = this;
		}
		
		private void detach_RatingGroupAttributes(RatingGroupAttribute entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = null;
		}
		
		private void attach_PointsTotals(PointsTotal entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = this;
		}
		
		private void detach_PointsTotals(PointsTotal entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = null;
		}
		
		private void attach_Tbls(Tbl entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = this;
		}
		
		private void detach_Tbls(Tbl entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = null;
		}
		
		private void attach_ProposalSettings(ProposalSetting entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = this;
		}
		
		private void detach_ProposalSettings(ProposalSetting entity)
		{
			this.SendPropertyChanging();
			entity.PointsManager = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RatingPhaseStatus")]
	public partial class RatingPhaseStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RatingPhaseStatusID;
		
		private int _RatingGroupPhaseStatusID;
		
		private int _RatingID;
		
		private System.Nullable<decimal> _ShortTermResolutionValue;
		
		private int _NumUserRatingsMadeDuringPhase;
		
		private bool _TriggerUserRatingsUpdate;
		
		private EntitySet<UserRating> _UserRatings;
		
		private EntityRef<Rating> _Rating;
		
		private EntityRef<RatingGroupPhaseStatus> _RatingGroupPhaseStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatingPhaseStatusIDChanging(int value);
    partial void OnRatingPhaseStatusIDChanged();
    partial void OnRatingGroupPhaseStatusIDChanging(int value);
    partial void OnRatingGroupPhaseStatusIDChanged();
    partial void OnRatingIDChanging(int value);
    partial void OnRatingIDChanged();
    partial void OnShortTermResolutionValueChanging(System.Nullable<decimal> value);
    partial void OnShortTermResolutionValueChanged();
    partial void OnNumUserRatingsMadeDuringPhaseChanging(int value);
    partial void OnNumUserRatingsMadeDuringPhaseChanged();
    partial void OnTriggerUserRatingsUpdateChanging(bool value);
    partial void OnTriggerUserRatingsUpdateChanged();
    #endregion
		
		public RatingPhaseStatus()
		{
			this._UserRatings = new EntitySet<UserRating>(new Action<UserRating>(this.attach_UserRatings), new Action<UserRating>(this.detach_UserRatings));
			this._Rating = default(EntityRef<Rating>);
			this._RatingGroupPhaseStatus = default(EntityRef<RatingGroupPhaseStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingPhaseStatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RatingPhaseStatusID
		{
			get
			{
				return this._RatingPhaseStatusID;
			}
			set
			{
				if ((this._RatingPhaseStatusID != value))
				{
					this.OnRatingPhaseStatusIDChanging(value);
					this.SendPropertyChanging();
					this._RatingPhaseStatusID = value;
					this.SendPropertyChanged("RatingPhaseStatusID");
					this.OnRatingPhaseStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingGroupPhaseStatusID", DbType="Int NOT NULL")]
		public int RatingGroupPhaseStatusID
		{
			get
			{
				return this._RatingGroupPhaseStatusID;
			}
			set
			{
				if ((this._RatingGroupPhaseStatusID != value))
				{
					if (this._RatingGroupPhaseStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingGroupPhaseStatusIDChanging(value);
					this.SendPropertyChanging();
					this._RatingGroupPhaseStatusID = value;
					this.SendPropertyChanged("RatingGroupPhaseStatusID");
					this.OnRatingGroupPhaseStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingID", DbType="Int NOT NULL")]
		public int RatingID
		{
			get
			{
				return this._RatingID;
			}
			set
			{
				if ((this._RatingID != value))
				{
					if (this._Rating.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingIDChanging(value);
					this.SendPropertyChanging();
					this._RatingID = value;
					this.SendPropertyChanged("RatingID");
					this.OnRatingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortTermResolutionValue", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ShortTermResolutionValue
		{
			get
			{
				return this._ShortTermResolutionValue;
			}
			set
			{
				if ((this._ShortTermResolutionValue != value))
				{
					this.OnShortTermResolutionValueChanging(value);
					this.SendPropertyChanging();
					this._ShortTermResolutionValue = value;
					this.SendPropertyChanged("ShortTermResolutionValue");
					this.OnShortTermResolutionValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumUserRatingsMadeDuringPhase", DbType="Int NOT NULL")]
		public int NumUserRatingsMadeDuringPhase
		{
			get
			{
				return this._NumUserRatingsMadeDuringPhase;
			}
			set
			{
				if ((this._NumUserRatingsMadeDuringPhase != value))
				{
					this.OnNumUserRatingsMadeDuringPhaseChanging(value);
					this.SendPropertyChanging();
					this._NumUserRatingsMadeDuringPhase = value;
					this.SendPropertyChanged("NumUserRatingsMadeDuringPhase");
					this.OnNumUserRatingsMadeDuringPhaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerUserRatingsUpdate", DbType="Bit NOT NULL")]
		public bool TriggerUserRatingsUpdate
		{
			get
			{
				return this._TriggerUserRatingsUpdate;
			}
			set
			{
				if ((this._TriggerUserRatingsUpdate != value))
				{
					this.OnTriggerUserRatingsUpdateChanging(value);
					this.SendPropertyChanging();
					this._TriggerUserRatingsUpdate = value;
					this.SendPropertyChanged("TriggerUserRatingsUpdate");
					this.OnTriggerUserRatingsUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingPhaseStatus_UserRating", Storage="_UserRatings", ThisKey="RatingPhaseStatusID", OtherKey="RatingPhaseStatusID")]
		public EntitySet<UserRating> UserRatings
		{
			get
			{
				return this._UserRatings;
			}
			set
			{
				this._UserRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rating_RatingPhaseStatus", Storage="_Rating", ThisKey="RatingID", OtherKey="RatingID", IsForeignKey=true)]
		public Rating Rating
		{
			get
			{
				return this._Rating.Entity;
			}
			set
			{
				Rating previousValue = this._Rating.Entity;
				if (((previousValue != value) 
							|| (this._Rating.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rating.Entity = null;
						previousValue.RatingPhaseStatus.Remove(this);
					}
					this._Rating.Entity = value;
					if ((value != null))
					{
						value.RatingPhaseStatus.Add(this);
						this._RatingID = value.RatingID;
					}
					else
					{
						this._RatingID = default(int);
					}
					this.SendPropertyChanged("Rating");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroupPhaseStatus_RatingPhaseStatus", Storage="_RatingGroupPhaseStatus", ThisKey="RatingGroupPhaseStatusID", OtherKey="RatingGroupPhaseStatusID", IsForeignKey=true)]
		public RatingGroupPhaseStatus RatingGroupPhaseStatus
		{
			get
			{
				return this._RatingGroupPhaseStatus.Entity;
			}
			set
			{
				RatingGroupPhaseStatus previousValue = this._RatingGroupPhaseStatus.Entity;
				if (((previousValue != value) 
							|| (this._RatingGroupPhaseStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingGroupPhaseStatus.Entity = null;
						previousValue.RatingPhaseStatus.Remove(this);
					}
					this._RatingGroupPhaseStatus.Entity = value;
					if ((value != null))
					{
						value.RatingPhaseStatus.Add(this);
						this._RatingGroupPhaseStatusID = value.RatingGroupPhaseStatusID;
					}
					else
					{
						this._RatingGroupPhaseStatusID = default(int);
					}
					this.SendPropertyChanged("RatingGroupPhaseStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRatings(UserRating entity)
		{
			this.SendPropertyChanging();
			entity.RatingPhaseStatus = this;
		}
		
		private void detach_UserRatings(UserRating entity)
		{
			this.SendPropertyChanging();
			entity.RatingPhaseStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ratings")]
	public partial class Rating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RatingID;
		
		private int _RatingGroupID;
		
		private int _RatingCharacteristicsID;
		
		private System.Nullable<int> _OwnedRatingGroupID;
		
		private int _TopmostRatingGroupID;
		
		private System.Nullable<int> _MostRecentUserRatingID;
		
		private int _NumInGroup;
		
		private int _TotalUserRatings;
		
		private string _Name;
		
		private System.Nullable<int> _Creator;
		
		private System.Nullable<decimal> _CurrentValue;
		
		private System.Nullable<decimal> _LastTrustedValue;
		
		private System.DateTime _LastModifiedResolutionTimeOrCurrentValue;
		
		private System.Nullable<System.DateTime> _ReviewRecentUserRatingsAfter;
		
		private EntitySet<ChangesGroup> _ChangesGroups;
		
		private EntitySet<RatingCondition> _RatingConditions;
		
		private EntitySet<RatingPhaseStatus> _RatingPhaseStatus;
		
		private EntitySet<UserRating> _UserRatings;
		
		private EntityRef<RatingCharacteristic> _RatingCharacteristic;
		
		private EntityRef<RatingGroup> _RatingGroup;
		
		private EntityRef<RatingGroup> _RatingGroup1;
		
		private EntityRef<RatingGroup> _RatingGroup2;
		
		private EntityRef<User> _User;
		
		private EntityRef<UserRating> _UserRating;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatingIDChanging(int value);
    partial void OnRatingIDChanged();
    partial void OnRatingGroupIDChanging(int value);
    partial void OnRatingGroupIDChanged();
    partial void OnRatingCharacteristicsIDChanging(int value);
    partial void OnRatingCharacteristicsIDChanged();
    partial void OnOwnedRatingGroupIDChanging(System.Nullable<int> value);
    partial void OnOwnedRatingGroupIDChanged();
    partial void OnTopmostRatingGroupIDChanging(int value);
    partial void OnTopmostRatingGroupIDChanged();
    partial void OnMostRecentUserRatingIDChanging(System.Nullable<int> value);
    partial void OnMostRecentUserRatingIDChanged();
    partial void OnNumInGroupChanging(int value);
    partial void OnNumInGroupChanged();
    partial void OnTotalUserRatingsChanging(int value);
    partial void OnTotalUserRatingsChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnCurrentValueChanging(System.Nullable<decimal> value);
    partial void OnCurrentValueChanged();
    partial void OnLastTrustedValueChanging(System.Nullable<decimal> value);
    partial void OnLastTrustedValueChanged();
    partial void OnLastModifiedResolutionTimeOrCurrentValueChanging(System.DateTime value);
    partial void OnLastModifiedResolutionTimeOrCurrentValueChanged();
    partial void OnReviewRecentUserRatingsAfterChanging(System.Nullable<System.DateTime> value);
    partial void OnReviewRecentUserRatingsAfterChanged();
    #endregion
		
		public Rating()
		{
			this._ChangesGroups = new EntitySet<ChangesGroup>(new Action<ChangesGroup>(this.attach_ChangesGroups), new Action<ChangesGroup>(this.detach_ChangesGroups));
			this._RatingConditions = new EntitySet<RatingCondition>(new Action<RatingCondition>(this.attach_RatingConditions), new Action<RatingCondition>(this.detach_RatingConditions));
			this._RatingPhaseStatus = new EntitySet<RatingPhaseStatus>(new Action<RatingPhaseStatus>(this.attach_RatingPhaseStatus), new Action<RatingPhaseStatus>(this.detach_RatingPhaseStatus));
			this._UserRatings = new EntitySet<UserRating>(new Action<UserRating>(this.attach_UserRatings), new Action<UserRating>(this.detach_UserRatings));
			this._RatingCharacteristic = default(EntityRef<RatingCharacteristic>);
			this._RatingGroup = default(EntityRef<RatingGroup>);
			this._RatingGroup1 = default(EntityRef<RatingGroup>);
			this._RatingGroup2 = default(EntityRef<RatingGroup>);
			this._User = default(EntityRef<User>);
			this._UserRating = default(EntityRef<UserRating>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RatingID
		{
			get
			{
				return this._RatingID;
			}
			set
			{
				if ((this._RatingID != value))
				{
					this.OnRatingIDChanging(value);
					this.SendPropertyChanging();
					this._RatingID = value;
					this.SendPropertyChanged("RatingID");
					this.OnRatingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingGroupID", DbType="Int NOT NULL")]
		public int RatingGroupID
		{
			get
			{
				return this._RatingGroupID;
			}
			set
			{
				if ((this._RatingGroupID != value))
				{
					if (this._RatingGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingGroupIDChanging(value);
					this.SendPropertyChanging();
					this._RatingGroupID = value;
					this.SendPropertyChanged("RatingGroupID");
					this.OnRatingGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingCharacteristicsID", DbType="Int NOT NULL")]
		public int RatingCharacteristicsID
		{
			get
			{
				return this._RatingCharacteristicsID;
			}
			set
			{
				if ((this._RatingCharacteristicsID != value))
				{
					if (this._RatingCharacteristic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingCharacteristicsIDChanging(value);
					this.SendPropertyChanging();
					this._RatingCharacteristicsID = value;
					this.SendPropertyChanged("RatingCharacteristicsID");
					this.OnRatingCharacteristicsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnedRatingGroupID", DbType="Int")]
		public System.Nullable<int> OwnedRatingGroupID
		{
			get
			{
				return this._OwnedRatingGroupID;
			}
			set
			{
				if ((this._OwnedRatingGroupID != value))
				{
					if (this._RatingGroup1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnedRatingGroupIDChanging(value);
					this.SendPropertyChanging();
					this._OwnedRatingGroupID = value;
					this.SendPropertyChanged("OwnedRatingGroupID");
					this.OnOwnedRatingGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopmostRatingGroupID", DbType="Int NOT NULL")]
		public int TopmostRatingGroupID
		{
			get
			{
				return this._TopmostRatingGroupID;
			}
			set
			{
				if ((this._TopmostRatingGroupID != value))
				{
					if (this._RatingGroup2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTopmostRatingGroupIDChanging(value);
					this.SendPropertyChanging();
					this._TopmostRatingGroupID = value;
					this.SendPropertyChanged("TopmostRatingGroupID");
					this.OnTopmostRatingGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MostRecentUserRatingID", DbType="Int")]
		public System.Nullable<int> MostRecentUserRatingID
		{
			get
			{
				return this._MostRecentUserRatingID;
			}
			set
			{
				if ((this._MostRecentUserRatingID != value))
				{
					if (this._UserRating.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMostRecentUserRatingIDChanging(value);
					this.SendPropertyChanging();
					this._MostRecentUserRatingID = value;
					this.SendPropertyChanged("MostRecentUserRatingID");
					this.OnMostRecentUserRatingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumInGroup", DbType="Int NOT NULL")]
		public int NumInGroup
		{
			get
			{
				return this._NumInGroup;
			}
			set
			{
				if ((this._NumInGroup != value))
				{
					this.OnNumInGroupChanging(value);
					this.SendPropertyChanging();
					this._NumInGroup = value;
					this.SendPropertyChanged("NumInGroup");
					this.OnNumInGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalUserRatings", DbType="Int NOT NULL")]
		public int TotalUserRatings
		{
			get
			{
				return this._TotalUserRatings;
			}
			set
			{
				if ((this._TotalUserRatings != value))
				{
					this.OnTotalUserRatingsChanging(value);
					this.SendPropertyChanging();
					this._TotalUserRatings = value;
					this.SendPropertyChanged("TotalUserRatings");
					this.OnTotalUserRatingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentValue", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> CurrentValue
		{
			get
			{
				return this._CurrentValue;
			}
			set
			{
				if ((this._CurrentValue != value))
				{
					this.OnCurrentValueChanging(value);
					this.SendPropertyChanging();
					this._CurrentValue = value;
					this.SendPropertyChanged("CurrentValue");
					this.OnCurrentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTrustedValue", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> LastTrustedValue
		{
			get
			{
				return this._LastTrustedValue;
			}
			set
			{
				if ((this._LastTrustedValue != value))
				{
					this.OnLastTrustedValueChanging(value);
					this.SendPropertyChanging();
					this._LastTrustedValue = value;
					this.SendPropertyChanged("LastTrustedValue");
					this.OnLastTrustedValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedResolutionTimeOrCurrentValue", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedResolutionTimeOrCurrentValue
		{
			get
			{
				return this._LastModifiedResolutionTimeOrCurrentValue;
			}
			set
			{
				if ((this._LastModifiedResolutionTimeOrCurrentValue != value))
				{
					this.OnLastModifiedResolutionTimeOrCurrentValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedResolutionTimeOrCurrentValue = value;
					this.SendPropertyChanged("LastModifiedResolutionTimeOrCurrentValue");
					this.OnLastModifiedResolutionTimeOrCurrentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewRecentUserRatingsAfter", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReviewRecentUserRatingsAfter
		{
			get
			{
				return this._ReviewRecentUserRatingsAfter;
			}
			set
			{
				if ((this._ReviewRecentUserRatingsAfter != value))
				{
					this.OnReviewRecentUserRatingsAfterChanging(value);
					this.SendPropertyChanging();
					this._ReviewRecentUserRatingsAfter = value;
					this.SendPropertyChanged("ReviewRecentUserRatingsAfter");
					this.OnReviewRecentUserRatingsAfterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rating_ChangesGroup", Storage="_ChangesGroups", ThisKey="RatingID", OtherKey="RewardRatingID")]
		public EntitySet<ChangesGroup> ChangesGroups
		{
			get
			{
				return this._ChangesGroups;
			}
			set
			{
				this._ChangesGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rating_RatingCondition", Storage="_RatingConditions", ThisKey="RatingID", OtherKey="ConditionRatingID")]
		public EntitySet<RatingCondition> RatingConditions
		{
			get
			{
				return this._RatingConditions;
			}
			set
			{
				this._RatingConditions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rating_RatingPhaseStatus", Storage="_RatingPhaseStatus", ThisKey="RatingID", OtherKey="RatingID")]
		public EntitySet<RatingPhaseStatus> RatingPhaseStatus
		{
			get
			{
				return this._RatingPhaseStatus;
			}
			set
			{
				this._RatingPhaseStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rating_UserRating", Storage="_UserRatings", ThisKey="RatingID", OtherKey="RatingID")]
		public EntitySet<UserRating> UserRatings
		{
			get
			{
				return this._UserRatings;
			}
			set
			{
				this._UserRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingCharacteristic_Rating", Storage="_RatingCharacteristic", ThisKey="RatingCharacteristicsID", OtherKey="RatingCharacteristicsID", IsForeignKey=true)]
		public RatingCharacteristic RatingCharacteristic
		{
			get
			{
				return this._RatingCharacteristic.Entity;
			}
			set
			{
				RatingCharacteristic previousValue = this._RatingCharacteristic.Entity;
				if (((previousValue != value) 
							|| (this._RatingCharacteristic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingCharacteristic.Entity = null;
						previousValue.Ratings.Remove(this);
					}
					this._RatingCharacteristic.Entity = value;
					if ((value != null))
					{
						value.Ratings.Add(this);
						this._RatingCharacteristicsID = value.RatingCharacteristicsID;
					}
					else
					{
						this._RatingCharacteristicsID = default(int);
					}
					this.SendPropertyChanged("RatingCharacteristic");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroup_Rating", Storage="_RatingGroup", ThisKey="RatingGroupID", OtherKey="RatingGroupID", IsForeignKey=true)]
		public RatingGroup RatingGroup
		{
			get
			{
				return this._RatingGroup.Entity;
			}
			set
			{
				RatingGroup previousValue = this._RatingGroup.Entity;
				if (((previousValue != value) 
							|| (this._RatingGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingGroup.Entity = null;
						previousValue.Ratings.Remove(this);
					}
					this._RatingGroup.Entity = value;
					if ((value != null))
					{
						value.Ratings.Add(this);
						this._RatingGroupID = value.RatingGroupID;
					}
					else
					{
						this._RatingGroupID = default(int);
					}
					this.SendPropertyChanged("RatingGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroup_Rating1", Storage="_RatingGroup1", ThisKey="OwnedRatingGroupID", OtherKey="RatingGroupID", IsForeignKey=true)]
		public RatingGroup RatingGroup1
		{
			get
			{
				return this._RatingGroup1.Entity;
			}
			set
			{
				RatingGroup previousValue = this._RatingGroup1.Entity;
				if (((previousValue != value) 
							|| (this._RatingGroup1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingGroup1.Entity = null;
						previousValue.Ratings1.Remove(this);
					}
					this._RatingGroup1.Entity = value;
					if ((value != null))
					{
						value.Ratings1.Add(this);
						this._OwnedRatingGroupID = value.RatingGroupID;
					}
					else
					{
						this._OwnedRatingGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RatingGroup1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroup_Rating2", Storage="_RatingGroup2", ThisKey="TopmostRatingGroupID", OtherKey="RatingGroupID", IsForeignKey=true)]
		public RatingGroup RatingGroup2
		{
			get
			{
				return this._RatingGroup2.Entity;
			}
			set
			{
				RatingGroup previousValue = this._RatingGroup2.Entity;
				if (((previousValue != value) 
							|| (this._RatingGroup2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingGroup2.Entity = null;
						previousValue.Ratings2.Remove(this);
					}
					this._RatingGroup2.Entity = value;
					if ((value != null))
					{
						value.Ratings2.Add(this);
						this._TopmostRatingGroupID = value.RatingGroupID;
					}
					else
					{
						this._TopmostRatingGroupID = default(int);
					}
					this.SendPropertyChanged("RatingGroup2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Rating", Storage="_User", ThisKey="Creator", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Ratings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Ratings.Add(this);
						this._Creator = value.UserID;
					}
					else
					{
						this._Creator = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRating_Rating", Storage="_UserRating", ThisKey="MostRecentUserRatingID", OtherKey="UserRatingID", IsForeignKey=true, DeleteRule="CASCADE")]
		public UserRating UserRating
		{
			get
			{
				return this._UserRating.Entity;
			}
			set
			{
				UserRating previousValue = this._UserRating.Entity;
				if (((previousValue != value) 
							|| (this._UserRating.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRating.Entity = null;
						previousValue.Ratings.Remove(this);
					}
					this._UserRating.Entity = value;
					if ((value != null))
					{
						value.Ratings.Add(this);
						this._MostRecentUserRatingID = value.UserRatingID;
					}
					else
					{
						this._MostRecentUserRatingID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserRating");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChangesGroups(ChangesGroup entity)
		{
			this.SendPropertyChanging();
			entity.Rating = this;
		}
		
		private void detach_ChangesGroups(ChangesGroup entity)
		{
			this.SendPropertyChanging();
			entity.Rating = null;
		}
		
		private void attach_RatingConditions(RatingCondition entity)
		{
			this.SendPropertyChanging();
			entity.Rating = this;
		}
		
		private void detach_RatingConditions(RatingCondition entity)
		{
			this.SendPropertyChanging();
			entity.Rating = null;
		}
		
		private void attach_RatingPhaseStatus(RatingPhaseStatus entity)
		{
			this.SendPropertyChanging();
			entity.Rating = this;
		}
		
		private void detach_RatingPhaseStatus(RatingPhaseStatus entity)
		{
			this.SendPropertyChanging();
			entity.Rating = null;
		}
		
		private void attach_UserRatings(UserRating entity)
		{
			this.SendPropertyChanging();
			entity.Rating = this;
		}
		
		private void detach_UserRatings(UserRating entity)
		{
			this.SendPropertyChanging();
			entity.Rating = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RatingGroupAttributes")]
	public partial class RatingGroupAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RatingGroupAttributesID;
		
		private int _RatingCharacteristicsID;
		
		private System.Nullable<int> _RatingConditionID;
		
		private System.Nullable<int> _PointsManagerID;
		
		private System.Nullable<decimal> _ConstrainedSum;
		
		private string _Name;
		
		private System.Nullable<byte> _TypeOfRatingGroup;
		
		private string _Description;
		
		private bool _RatingEndingTimeVaries;
		
		private bool _RatingsCanBeAutocalculated;
		
		private decimal _LongTermPointsWeight;
		
		private int _MinimumDaysToTrackLongTerm;
		
		private System.Nullable<int> _Creator;
		
		private byte _Status;
		
		private EntitySet<OverrideCharacteristic> _OverrideCharacteristics;
		
		private EntitySet<ProposalEvaluationRatingSetting> _ProposalEvaluationRatingSettings;
		
		private EntitySet<RatingPlan> _RatingPlans;
		
		private EntitySet<RatingPlan> _RatingPlans1;
		
		private EntitySet<RewardRatingSetting> _RewardRatingSettings;
		
		private EntitySet<RatingGroup> _RatingGroups;
		
		private EntitySet<TblColumn> _TblColumns;
		
		private EntityRef<PointsManager> _PointsManager;
		
		private EntityRef<RatingCharacteristic> _RatingCharacteristic;
		
		private EntityRef<RatingCondition> _RatingCondition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatingGroupAttributesIDChanging(int value);
    partial void OnRatingGroupAttributesIDChanged();
    partial void OnRatingCharacteristicsIDChanging(int value);
    partial void OnRatingCharacteristicsIDChanged();
    partial void OnRatingConditionIDChanging(System.Nullable<int> value);
    partial void OnRatingConditionIDChanged();
    partial void OnPointsManagerIDChanging(System.Nullable<int> value);
    partial void OnPointsManagerIDChanged();
    partial void OnConstrainedSumChanging(System.Nullable<decimal> value);
    partial void OnConstrainedSumChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeOfRatingGroupChanging(System.Nullable<byte> value);
    partial void OnTypeOfRatingGroupChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRatingEndingTimeVariesChanging(bool value);
    partial void OnRatingEndingTimeVariesChanged();
    partial void OnRatingsCanBeAutocalculatedChanging(bool value);
    partial void OnRatingsCanBeAutocalculatedChanged();
    partial void OnLongTermPointsWeightChanging(decimal value);
    partial void OnLongTermPointsWeightChanged();
    partial void OnMinimumDaysToTrackLongTermChanging(int value);
    partial void OnMinimumDaysToTrackLongTermChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public RatingGroupAttribute()
		{
			this._OverrideCharacteristics = new EntitySet<OverrideCharacteristic>(new Action<OverrideCharacteristic>(this.attach_OverrideCharacteristics), new Action<OverrideCharacteristic>(this.detach_OverrideCharacteristics));
			this._ProposalEvaluationRatingSettings = new EntitySet<ProposalEvaluationRatingSetting>(new Action<ProposalEvaluationRatingSetting>(this.attach_ProposalEvaluationRatingSettings), new Action<ProposalEvaluationRatingSetting>(this.detach_ProposalEvaluationRatingSettings));
			this._RatingPlans = new EntitySet<RatingPlan>(new Action<RatingPlan>(this.attach_RatingPlans), new Action<RatingPlan>(this.detach_RatingPlans));
			this._RatingPlans1 = new EntitySet<RatingPlan>(new Action<RatingPlan>(this.attach_RatingPlans1), new Action<RatingPlan>(this.detach_RatingPlans1));
			this._RewardRatingSettings = new EntitySet<RewardRatingSetting>(new Action<RewardRatingSetting>(this.attach_RewardRatingSettings), new Action<RewardRatingSetting>(this.detach_RewardRatingSettings));
			this._RatingGroups = new EntitySet<RatingGroup>(new Action<RatingGroup>(this.attach_RatingGroups), new Action<RatingGroup>(this.detach_RatingGroups));
			this._TblColumns = new EntitySet<TblColumn>(new Action<TblColumn>(this.attach_TblColumns), new Action<TblColumn>(this.detach_TblColumns));
			this._PointsManager = default(EntityRef<PointsManager>);
			this._RatingCharacteristic = default(EntityRef<RatingCharacteristic>);
			this._RatingCondition = default(EntityRef<RatingCondition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingGroupAttributesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RatingGroupAttributesID
		{
			get
			{
				return this._RatingGroupAttributesID;
			}
			set
			{
				if ((this._RatingGroupAttributesID != value))
				{
					this.OnRatingGroupAttributesIDChanging(value);
					this.SendPropertyChanging();
					this._RatingGroupAttributesID = value;
					this.SendPropertyChanged("RatingGroupAttributesID");
					this.OnRatingGroupAttributesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingCharacteristicsID", DbType="Int NOT NULL")]
		public int RatingCharacteristicsID
		{
			get
			{
				return this._RatingCharacteristicsID;
			}
			set
			{
				if ((this._RatingCharacteristicsID != value))
				{
					if (this._RatingCharacteristic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingCharacteristicsIDChanging(value);
					this.SendPropertyChanging();
					this._RatingCharacteristicsID = value;
					this.SendPropertyChanged("RatingCharacteristicsID");
					this.OnRatingCharacteristicsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingConditionID", DbType="Int")]
		public System.Nullable<int> RatingConditionID
		{
			get
			{
				return this._RatingConditionID;
			}
			set
			{
				if ((this._RatingConditionID != value))
				{
					if (this._RatingCondition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingConditionIDChanging(value);
					this.SendPropertyChanging();
					this._RatingConditionID = value;
					this.SendPropertyChanged("RatingConditionID");
					this.OnRatingConditionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsManagerID", DbType="Int")]
		public System.Nullable<int> PointsManagerID
		{
			get
			{
				return this._PointsManagerID;
			}
			set
			{
				if ((this._PointsManagerID != value))
				{
					if (this._PointsManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPointsManagerIDChanging(value);
					this.SendPropertyChanging();
					this._PointsManagerID = value;
					this.SendPropertyChanged("PointsManagerID");
					this.OnPointsManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstrainedSum", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ConstrainedSum
		{
			get
			{
				return this._ConstrainedSum;
			}
			set
			{
				if ((this._ConstrainedSum != value))
				{
					this.OnConstrainedSumChanging(value);
					this.SendPropertyChanging();
					this._ConstrainedSum = value;
					this.SendPropertyChanged("ConstrainedSum");
					this.OnConstrainedSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfRatingGroup", DbType="TinyInt")]
		public System.Nullable<byte> TypeOfRatingGroup
		{
			get
			{
				return this._TypeOfRatingGroup;
			}
			set
			{
				if ((this._TypeOfRatingGroup != value))
				{
					this.OnTypeOfRatingGroupChanging(value);
					this.SendPropertyChanging();
					this._TypeOfRatingGroup = value;
					this.SendPropertyChanged("TypeOfRatingGroup");
					this.OnTypeOfRatingGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingEndingTimeVaries", DbType="Bit NOT NULL")]
		public bool RatingEndingTimeVaries
		{
			get
			{
				return this._RatingEndingTimeVaries;
			}
			set
			{
				if ((this._RatingEndingTimeVaries != value))
				{
					this.OnRatingEndingTimeVariesChanging(value);
					this.SendPropertyChanging();
					this._RatingEndingTimeVaries = value;
					this.SendPropertyChanged("RatingEndingTimeVaries");
					this.OnRatingEndingTimeVariesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingsCanBeAutocalculated", DbType="Bit NOT NULL")]
		public bool RatingsCanBeAutocalculated
		{
			get
			{
				return this._RatingsCanBeAutocalculated;
			}
			set
			{
				if ((this._RatingsCanBeAutocalculated != value))
				{
					this.OnRatingsCanBeAutocalculatedChanging(value);
					this.SendPropertyChanging();
					this._RatingsCanBeAutocalculated = value;
					this.SendPropertyChanged("RatingsCanBeAutocalculated");
					this.OnRatingsCanBeAutocalculatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongTermPointsWeight", DbType="Decimal(18,4) NOT NULL")]
		public decimal LongTermPointsWeight
		{
			get
			{
				return this._LongTermPointsWeight;
			}
			set
			{
				if ((this._LongTermPointsWeight != value))
				{
					this.OnLongTermPointsWeightChanging(value);
					this.SendPropertyChanging();
					this._LongTermPointsWeight = value;
					this.SendPropertyChanged("LongTermPointsWeight");
					this.OnLongTermPointsWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumDaysToTrackLongTerm", DbType="Int NOT NULL")]
		public int MinimumDaysToTrackLongTerm
		{
			get
			{
				return this._MinimumDaysToTrackLongTerm;
			}
			set
			{
				if ((this._MinimumDaysToTrackLongTerm != value))
				{
					this.OnMinimumDaysToTrackLongTermChanging(value);
					this.SendPropertyChanging();
					this._MinimumDaysToTrackLongTerm = value;
					this.SendPropertyChanged("MinimumDaysToTrackLongTerm");
					this.OnMinimumDaysToTrackLongTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroupAttribute_OverrideCharacteristic", Storage="_OverrideCharacteristics", ThisKey="RatingGroupAttributesID", OtherKey="RatingGroupAttributesID")]
		public EntitySet<OverrideCharacteristic> OverrideCharacteristics
		{
			get
			{
				return this._OverrideCharacteristics;
			}
			set
			{
				this._OverrideCharacteristics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroupAttribute_ProposalEvaluationRatingSetting", Storage="_ProposalEvaluationRatingSettings", ThisKey="RatingGroupAttributesID", OtherKey="RatingGroupAttributesID")]
		public EntitySet<ProposalEvaluationRatingSetting> ProposalEvaluationRatingSettings
		{
			get
			{
				return this._ProposalEvaluationRatingSettings;
			}
			set
			{
				this._ProposalEvaluationRatingSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroupAttribute_RatingPlan", Storage="_RatingPlans", ThisKey="RatingGroupAttributesID", OtherKey="RatingGroupAttributesID")]
		public EntitySet<RatingPlan> RatingPlans
		{
			get
			{
				return this._RatingPlans;
			}
			set
			{
				this._RatingPlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroupAttribute_RatingPlan1", Storage="_RatingPlans1", ThisKey="RatingGroupAttributesID", OtherKey="OwnedRatingGroupAttributesID")]
		public EntitySet<RatingPlan> RatingPlans1
		{
			get
			{
				return this._RatingPlans1;
			}
			set
			{
				this._RatingPlans1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroupAttribute_RewardRatingSetting", Storage="_RewardRatingSettings", ThisKey="RatingGroupAttributesID", OtherKey="RatingGroupAttributesID")]
		public EntitySet<RewardRatingSetting> RewardRatingSettings
		{
			get
			{
				return this._RewardRatingSettings;
			}
			set
			{
				this._RewardRatingSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroupAttribute_RatingGroup", Storage="_RatingGroups", ThisKey="RatingGroupAttributesID", OtherKey="RatingGroupAttributesID")]
		public EntitySet<RatingGroup> RatingGroups
		{
			get
			{
				return this._RatingGroups;
			}
			set
			{
				this._RatingGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroupAttribute_TblColumn", Storage="_TblColumns", ThisKey="RatingGroupAttributesID", OtherKey="DefaultRatingGroupAttributesID")]
		public EntitySet<TblColumn> TblColumns
		{
			get
			{
				return this._TblColumns;
			}
			set
			{
				this._TblColumns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_RatingGroupAttribute", Storage="_PointsManager", ThisKey="PointsManagerID", OtherKey="PointsManagerID", IsForeignKey=true)]
		public PointsManager PointsManager
		{
			get
			{
				return this._PointsManager.Entity;
			}
			set
			{
				PointsManager previousValue = this._PointsManager.Entity;
				if (((previousValue != value) 
							|| (this._PointsManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PointsManager.Entity = null;
						previousValue.RatingGroupAttributes.Remove(this);
					}
					this._PointsManager.Entity = value;
					if ((value != null))
					{
						value.RatingGroupAttributes.Add(this);
						this._PointsManagerID = value.PointsManagerID;
					}
					else
					{
						this._PointsManagerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PointsManager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingCharacteristic_RatingGroupAttribute", Storage="_RatingCharacteristic", ThisKey="RatingCharacteristicsID", OtherKey="RatingCharacteristicsID", IsForeignKey=true)]
		public RatingCharacteristic RatingCharacteristic
		{
			get
			{
				return this._RatingCharacteristic.Entity;
			}
			set
			{
				RatingCharacteristic previousValue = this._RatingCharacteristic.Entity;
				if (((previousValue != value) 
							|| (this._RatingCharacteristic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingCharacteristic.Entity = null;
						previousValue.RatingGroupAttributes.Remove(this);
					}
					this._RatingCharacteristic.Entity = value;
					if ((value != null))
					{
						value.RatingGroupAttributes.Add(this);
						this._RatingCharacteristicsID = value.RatingCharacteristicsID;
					}
					else
					{
						this._RatingCharacteristicsID = default(int);
					}
					this.SendPropertyChanged("RatingCharacteristic");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingCondition_RatingGroupAttribute", Storage="_RatingCondition", ThisKey="RatingConditionID", OtherKey="RatingConditionID", IsForeignKey=true)]
		public RatingCondition RatingCondition
		{
			get
			{
				return this._RatingCondition.Entity;
			}
			set
			{
				RatingCondition previousValue = this._RatingCondition.Entity;
				if (((previousValue != value) 
							|| (this._RatingCondition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingCondition.Entity = null;
						previousValue.RatingGroupAttributes.Remove(this);
					}
					this._RatingCondition.Entity = value;
					if ((value != null))
					{
						value.RatingGroupAttributes.Add(this);
						this._RatingConditionID = value.RatingConditionID;
					}
					else
					{
						this._RatingConditionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RatingCondition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OverrideCharacteristics(OverrideCharacteristic entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroupAttribute = this;
		}
		
		private void detach_OverrideCharacteristics(OverrideCharacteristic entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroupAttribute = null;
		}
		
		private void attach_ProposalEvaluationRatingSettings(ProposalEvaluationRatingSetting entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroupAttribute = this;
		}
		
		private void detach_ProposalEvaluationRatingSettings(ProposalEvaluationRatingSetting entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroupAttribute = null;
		}
		
		private void attach_RatingPlans(RatingPlan entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroupAttribute = this;
		}
		
		private void detach_RatingPlans(RatingPlan entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroupAttribute = null;
		}
		
		private void attach_RatingPlans1(RatingPlan entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroupAttribute1 = this;
		}
		
		private void detach_RatingPlans1(RatingPlan entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroupAttribute1 = null;
		}
		
		private void attach_RewardRatingSettings(RewardRatingSetting entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroupAttribute = this;
		}
		
		private void detach_RewardRatingSettings(RewardRatingSetting entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroupAttribute = null;
		}
		
		private void attach_RatingGroups(RatingGroup entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroupAttribute = this;
		}
		
		private void detach_RatingGroups(RatingGroup entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroupAttribute = null;
		}
		
		private void attach_TblColumns(TblColumn entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroupAttribute = this;
		}
		
		private void detach_TblColumns(TblColumn entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroupAttribute = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VolatilityTblRowTrackers")]
	public partial class VolatilityTblRowTracker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VolatilityTblRowTrackerID;
		
		private int _TblRowID;
		
		private byte _DurationType;
		
		private decimal _TotalMovement;
		
		private decimal _DistanceFromStart;
		
		private decimal _Pushback;
		
		private decimal _PushbackProportion;
		
		private EntitySet<VolatilityTracker> _VolatilityTrackers;
		
		private EntityRef<TblRow> _TblRow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVolatilityTblRowTrackerIDChanging(int value);
    partial void OnVolatilityTblRowTrackerIDChanged();
    partial void OnTblRowIDChanging(int value);
    partial void OnTblRowIDChanged();
    partial void OnDurationTypeChanging(byte value);
    partial void OnDurationTypeChanged();
    partial void OnTotalMovementChanging(decimal value);
    partial void OnTotalMovementChanged();
    partial void OnDistanceFromStartChanging(decimal value);
    partial void OnDistanceFromStartChanged();
    partial void OnPushbackChanging(decimal value);
    partial void OnPushbackChanged();
    partial void OnPushbackProportionChanging(decimal value);
    partial void OnPushbackProportionChanged();
    #endregion
		
		public VolatilityTblRowTracker()
		{
			this._VolatilityTrackers = new EntitySet<VolatilityTracker>(new Action<VolatilityTracker>(this.attach_VolatilityTrackers), new Action<VolatilityTracker>(this.detach_VolatilityTrackers));
			this._TblRow = default(EntityRef<TblRow>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolatilityTblRowTrackerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VolatilityTblRowTrackerID
		{
			get
			{
				return this._VolatilityTblRowTrackerID;
			}
			set
			{
				if ((this._VolatilityTblRowTrackerID != value))
				{
					this.OnVolatilityTblRowTrackerIDChanging(value);
					this.SendPropertyChanging();
					this._VolatilityTblRowTrackerID = value;
					this.SendPropertyChanged("VolatilityTblRowTrackerID");
					this.OnVolatilityTblRowTrackerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblRowID", DbType="Int NOT NULL")]
		public int TblRowID
		{
			get
			{
				return this._TblRowID;
			}
			set
			{
				if ((this._TblRowID != value))
				{
					if (this._TblRow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblRowIDChanging(value);
					this.SendPropertyChanging();
					this._TblRowID = value;
					this.SendPropertyChanged("TblRowID");
					this.OnTblRowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationType", DbType="TinyInt NOT NULL")]
		public byte DurationType
		{
			get
			{
				return this._DurationType;
			}
			set
			{
				if ((this._DurationType != value))
				{
					this.OnDurationTypeChanging(value);
					this.SendPropertyChanging();
					this._DurationType = value;
					this.SendPropertyChanged("DurationType");
					this.OnDurationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMovement", DbType="Decimal(18,4) NOT NULL")]
		public decimal TotalMovement
		{
			get
			{
				return this._TotalMovement;
			}
			set
			{
				if ((this._TotalMovement != value))
				{
					this.OnTotalMovementChanging(value);
					this.SendPropertyChanging();
					this._TotalMovement = value;
					this.SendPropertyChanged("TotalMovement");
					this.OnTotalMovementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceFromStart", DbType="Decimal(18,4) NOT NULL")]
		public decimal DistanceFromStart
		{
			get
			{
				return this._DistanceFromStart;
			}
			set
			{
				if ((this._DistanceFromStart != value))
				{
					this.OnDistanceFromStartChanging(value);
					this.SendPropertyChanging();
					this._DistanceFromStart = value;
					this.SendPropertyChanged("DistanceFromStart");
					this.OnDistanceFromStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pushback", DbType="Decimal(18,4) NOT NULL")]
		public decimal Pushback
		{
			get
			{
				return this._Pushback;
			}
			set
			{
				if ((this._Pushback != value))
				{
					this.OnPushbackChanging(value);
					this.SendPropertyChanging();
					this._Pushback = value;
					this.SendPropertyChanged("Pushback");
					this.OnPushbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushbackProportion", DbType="Decimal(18,4) NOT NULL")]
		public decimal PushbackProportion
		{
			get
			{
				return this._PushbackProportion;
			}
			set
			{
				if ((this._PushbackProportion != value))
				{
					this.OnPushbackProportionChanging(value);
					this.SendPropertyChanging();
					this._PushbackProportion = value;
					this.SendPropertyChanged("PushbackProportion");
					this.OnPushbackProportionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VolatilityTblRowTracker_VolatilityTracker", Storage="_VolatilityTrackers", ThisKey="VolatilityTblRowTrackerID", OtherKey="VolatilityTblRowTrackerID")]
		public EntitySet<VolatilityTracker> VolatilityTrackers
		{
			get
			{
				return this._VolatilityTrackers;
			}
			set
			{
				this._VolatilityTrackers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblRow_VolatilityTblRowTracker", Storage="_TblRow", ThisKey="TblRowID", OtherKey="TblRowID", IsForeignKey=true)]
		public TblRow TblRow
		{
			get
			{
				return this._TblRow.Entity;
			}
			set
			{
				TblRow previousValue = this._TblRow.Entity;
				if (((previousValue != value) 
							|| (this._TblRow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblRow.Entity = null;
						previousValue.VolatilityTblRowTrackers.Remove(this);
					}
					this._TblRow.Entity = value;
					if ((value != null))
					{
						value.VolatilityTblRowTrackers.Add(this);
						this._TblRowID = value.TblRowID;
					}
					else
					{
						this._TblRowID = default(int);
					}
					this.SendPropertyChanged("TblRow");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VolatilityTrackers(VolatilityTracker entity)
		{
			this.SendPropertyChanging();
			entity.VolatilityTblRowTracker = this;
		}
		
		private void detach_VolatilityTrackers(VolatilityTracker entity)
		{
			this.SendPropertyChanging();
			entity.VolatilityTblRowTracker = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VolatilityTrackers")]
	public partial class VolatilityTracker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VolatilityTrackerID;
		
		private int _RatingGroupID;
		
		private int _VolatilityTblRowTrackerID;
		
		private byte _DurationType;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private decimal _TotalMovement;
		
		private decimal _DistanceFromStart;
		
		private decimal _Pushback;
		
		private decimal _PushbackProportion;
		
		private EntityRef<RatingGroup> _RatingGroup;
		
		private EntityRef<VolatilityTblRowTracker> _VolatilityTblRowTracker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVolatilityTrackerIDChanging(int value);
    partial void OnVolatilityTrackerIDChanged();
    partial void OnRatingGroupIDChanging(int value);
    partial void OnRatingGroupIDChanged();
    partial void OnVolatilityTblRowTrackerIDChanging(int value);
    partial void OnVolatilityTblRowTrackerIDChanged();
    partial void OnDurationTypeChanging(byte value);
    partial void OnDurationTypeChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnTotalMovementChanging(decimal value);
    partial void OnTotalMovementChanged();
    partial void OnDistanceFromStartChanging(decimal value);
    partial void OnDistanceFromStartChanged();
    partial void OnPushbackChanging(decimal value);
    partial void OnPushbackChanged();
    partial void OnPushbackProportionChanging(decimal value);
    partial void OnPushbackProportionChanged();
    #endregion
		
		public VolatilityTracker()
		{
			this._RatingGroup = default(EntityRef<RatingGroup>);
			this._VolatilityTblRowTracker = default(EntityRef<VolatilityTblRowTracker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolatilityTrackerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VolatilityTrackerID
		{
			get
			{
				return this._VolatilityTrackerID;
			}
			set
			{
				if ((this._VolatilityTrackerID != value))
				{
					this.OnVolatilityTrackerIDChanging(value);
					this.SendPropertyChanging();
					this._VolatilityTrackerID = value;
					this.SendPropertyChanged("VolatilityTrackerID");
					this.OnVolatilityTrackerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingGroupID", DbType="Int NOT NULL")]
		public int RatingGroupID
		{
			get
			{
				return this._RatingGroupID;
			}
			set
			{
				if ((this._RatingGroupID != value))
				{
					if (this._RatingGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingGroupIDChanging(value);
					this.SendPropertyChanging();
					this._RatingGroupID = value;
					this.SendPropertyChanged("RatingGroupID");
					this.OnRatingGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolatilityTblRowTrackerID", DbType="Int NOT NULL")]
		public int VolatilityTblRowTrackerID
		{
			get
			{
				return this._VolatilityTblRowTrackerID;
			}
			set
			{
				if ((this._VolatilityTblRowTrackerID != value))
				{
					if (this._VolatilityTblRowTracker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVolatilityTblRowTrackerIDChanging(value);
					this.SendPropertyChanging();
					this._VolatilityTblRowTrackerID = value;
					this.SendPropertyChanged("VolatilityTblRowTrackerID");
					this.OnVolatilityTblRowTrackerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationType", DbType="TinyInt NOT NULL")]
		public byte DurationType
		{
			get
			{
				return this._DurationType;
			}
			set
			{
				if ((this._DurationType != value))
				{
					this.OnDurationTypeChanging(value);
					this.SendPropertyChanging();
					this._DurationType = value;
					this.SendPropertyChanged("DurationType");
					this.OnDurationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMovement", DbType="Decimal(18,4) NOT NULL")]
		public decimal TotalMovement
		{
			get
			{
				return this._TotalMovement;
			}
			set
			{
				if ((this._TotalMovement != value))
				{
					this.OnTotalMovementChanging(value);
					this.SendPropertyChanging();
					this._TotalMovement = value;
					this.SendPropertyChanged("TotalMovement");
					this.OnTotalMovementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceFromStart", DbType="Decimal(18,4) NOT NULL")]
		public decimal DistanceFromStart
		{
			get
			{
				return this._DistanceFromStart;
			}
			set
			{
				if ((this._DistanceFromStart != value))
				{
					this.OnDistanceFromStartChanging(value);
					this.SendPropertyChanging();
					this._DistanceFromStart = value;
					this.SendPropertyChanged("DistanceFromStart");
					this.OnDistanceFromStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pushback", DbType="Decimal(18,4) NOT NULL")]
		public decimal Pushback
		{
			get
			{
				return this._Pushback;
			}
			set
			{
				if ((this._Pushback != value))
				{
					this.OnPushbackChanging(value);
					this.SendPropertyChanging();
					this._Pushback = value;
					this.SendPropertyChanged("Pushback");
					this.OnPushbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushbackProportion", DbType="Decimal(18,4) NOT NULL")]
		public decimal PushbackProportion
		{
			get
			{
				return this._PushbackProportion;
			}
			set
			{
				if ((this._PushbackProportion != value))
				{
					this.OnPushbackProportionChanging(value);
					this.SendPropertyChanging();
					this._PushbackProportion = value;
					this.SendPropertyChanged("PushbackProportion");
					this.OnPushbackProportionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroup_VolatilityTracker", Storage="_RatingGroup", ThisKey="RatingGroupID", OtherKey="RatingGroupID", IsForeignKey=true)]
		public RatingGroup RatingGroup
		{
			get
			{
				return this._RatingGroup.Entity;
			}
			set
			{
				RatingGroup previousValue = this._RatingGroup.Entity;
				if (((previousValue != value) 
							|| (this._RatingGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingGroup.Entity = null;
						previousValue.VolatilityTrackers.Remove(this);
					}
					this._RatingGroup.Entity = value;
					if ((value != null))
					{
						value.VolatilityTrackers.Add(this);
						this._RatingGroupID = value.RatingGroupID;
					}
					else
					{
						this._RatingGroupID = default(int);
					}
					this.SendPropertyChanged("RatingGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VolatilityTblRowTracker_VolatilityTracker", Storage="_VolatilityTblRowTracker", ThisKey="VolatilityTblRowTrackerID", OtherKey="VolatilityTblRowTrackerID", IsForeignKey=true)]
		public VolatilityTblRowTracker VolatilityTblRowTracker
		{
			get
			{
				return this._VolatilityTblRowTracker.Entity;
			}
			set
			{
				VolatilityTblRowTracker previousValue = this._VolatilityTblRowTracker.Entity;
				if (((previousValue != value) 
							|| (this._VolatilityTblRowTracker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VolatilityTblRowTracker.Entity = null;
						previousValue.VolatilityTrackers.Remove(this);
					}
					this._VolatilityTblRowTracker.Entity = value;
					if ((value != null))
					{
						value.VolatilityTrackers.Add(this);
						this._VolatilityTblRowTrackerID = value.VolatilityTblRowTrackerID;
					}
					else
					{
						this._VolatilityTblRowTrackerID = default(int);
					}
					this.SendPropertyChanged("VolatilityTblRowTracker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRatings")]
	public partial class UserRating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserRatingID;
		
		private int _UserRatingGroupID;
		
		private int _RatingID;
		
		private int _RatingPhaseStatusID;
		
		private int _UserID;
		
		private System.Nullable<int> _TrustTrackerUnitID;
		
		private System.Nullable<int> _RewardPendingPointsTrackerID;
		
		private System.Nullable<int> _MostRecentUserRatingID;
		
		private decimal _PreviousRatingOrVirtualRating;
		
		private System.Nullable<decimal> _PreviousDisplayedRating;
		
		private decimal _EnteredUserRating;
		
		private decimal _NewUserRating;
		
		private decimal _OriginalAdjustmentPct;
		
		private decimal _OriginalTrustLevel;
		
		private decimal _MaxGain;
		
		private decimal _MaxLoss;
		
		private decimal _PotentialPointsShortTerm;
		
		private decimal _PotentialPointsLongTerm;
		
		private decimal _PotentialPointsLongTermUnweighted;
		
		private decimal _LongTermPointsWeight;
		
		private System.Nullable<decimal> _PointsPumpingProportion;
		
		private decimal _PastPointsPumpingProportion;
		
		private decimal _PercentPreviousRatings;
		
		private bool _IsTrusted;
		
		private bool _MadeDirectly;
		
		private bool _LongTermResolutionReflected;
		
		private bool _ShortTermResolutionReflected;
		
		private bool _PointsHaveBecomePending;
		
		private bool _ForceRecalculate;
		
		private bool _HighStakesPreviouslySecret;
		
		private bool _HighStakesKnown;
		
		private bool _PreviouslyRated;
		
		private bool _SubsequentlyRated;
		
		private bool _IsMostRecent10Pct;
		
		private bool _IsMostRecent30Pct;
		
		private bool _IsMostRecent70Pct;
		
		private bool _IsMostRecent90Pct;
		
		private bool _IsUsersFirstWeek;
		
		private System.Nullable<decimal> _LogarithmicBase;
		
		private System.Nullable<decimal> _HighStakesMultiplierOverride;
		
		private System.Nullable<System.DateTime> _WhenPointsBecomePending;
		
		private System.DateTime _LastModifiedTime;
		
		private byte _VolatilityTrackingNextTimeFrameToRemove;
		
		private decimal _LastWeekDistanceFromStart;
		
		private decimal _LastWeekPushback;
		
		private decimal _LastYearPushback;
		
		private int _UserRatingNumberForUser;
		
		private System.Nullable<int> _NextRecencyUpdateAtUserRatingNum;
		
		private EntitySet<TrustTrackerForChoiceInGroupsUserRatingLink> _TrustTrackerForChoiceInGroupsUserRatingLinks;
		
		private EntitySet<Rating> _Ratings;
		
		private EntitySet<UserRating> _UserRatings;
		
		private EntityRef<RatingPhaseStatus> _RatingPhaseStatus;
		
		private EntityRef<Rating> _Rating;
		
		private EntityRef<RewardPendingPointsTracker> _RewardPendingPointsTracker;
		
		private EntityRef<TrustTrackerUnit> _TrustTrackerUnit;
		
		private EntityRef<UserRatingGroup> _UserRatingGroup;
		
		private EntityRef<UserRating> _UserRating1;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserRatingIDChanging(int value);
    partial void OnUserRatingIDChanged();
    partial void OnUserRatingGroupIDChanging(int value);
    partial void OnUserRatingGroupIDChanged();
    partial void OnRatingIDChanging(int value);
    partial void OnRatingIDChanged();
    partial void OnRatingPhaseStatusIDChanging(int value);
    partial void OnRatingPhaseStatusIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnTrustTrackerUnitIDChanging(System.Nullable<int> value);
    partial void OnTrustTrackerUnitIDChanged();
    partial void OnRewardPendingPointsTrackerIDChanging(System.Nullable<int> value);
    partial void OnRewardPendingPointsTrackerIDChanged();
    partial void OnMostRecentUserRatingIDChanging(System.Nullable<int> value);
    partial void OnMostRecentUserRatingIDChanged();
    partial void OnPreviousRatingOrVirtualRatingChanging(decimal value);
    partial void OnPreviousRatingOrVirtualRatingChanged();
    partial void OnPreviousDisplayedRatingChanging(System.Nullable<decimal> value);
    partial void OnPreviousDisplayedRatingChanged();
    partial void OnEnteredUserRatingChanging(decimal value);
    partial void OnEnteredUserRatingChanged();
    partial void OnNewUserRatingChanging(decimal value);
    partial void OnNewUserRatingChanged();
    partial void OnOriginalAdjustmentPctChanging(decimal value);
    partial void OnOriginalAdjustmentPctChanged();
    partial void OnOriginalTrustLevelChanging(decimal value);
    partial void OnOriginalTrustLevelChanged();
    partial void OnMaxGainChanging(decimal value);
    partial void OnMaxGainChanged();
    partial void OnMaxLossChanging(decimal value);
    partial void OnMaxLossChanged();
    partial void OnPotentialPointsShortTermChanging(decimal value);
    partial void OnPotentialPointsShortTermChanged();
    partial void OnPotentialPointsLongTermChanging(decimal value);
    partial void OnPotentialPointsLongTermChanged();
    partial void OnPotentialPointsLongTermUnweightedChanging(decimal value);
    partial void OnPotentialPointsLongTermUnweightedChanged();
    partial void OnLongTermPointsWeightChanging(decimal value);
    partial void OnLongTermPointsWeightChanged();
    partial void OnPointsPumpingProportionChanging(System.Nullable<decimal> value);
    partial void OnPointsPumpingProportionChanged();
    partial void OnPastPointsPumpingProportionChanging(decimal value);
    partial void OnPastPointsPumpingProportionChanged();
    partial void OnPercentPreviousRatingsChanging(decimal value);
    partial void OnPercentPreviousRatingsChanged();
    partial void OnIsTrustedChanging(bool value);
    partial void OnIsTrustedChanged();
    partial void OnMadeDirectlyChanging(bool value);
    partial void OnMadeDirectlyChanged();
    partial void OnLongTermResolutionReflectedChanging(bool value);
    partial void OnLongTermResolutionReflectedChanged();
    partial void OnShortTermResolutionReflectedChanging(bool value);
    partial void OnShortTermResolutionReflectedChanged();
    partial void OnPointsHaveBecomePendingChanging(bool value);
    partial void OnPointsHaveBecomePendingChanged();
    partial void OnForceRecalculateChanging(bool value);
    partial void OnForceRecalculateChanged();
    partial void OnHighStakesPreviouslySecretChanging(bool value);
    partial void OnHighStakesPreviouslySecretChanged();
    partial void OnHighStakesKnownChanging(bool value);
    partial void OnHighStakesKnownChanged();
    partial void OnPreviouslyRatedChanging(bool value);
    partial void OnPreviouslyRatedChanged();
    partial void OnSubsequentlyRatedChanging(bool value);
    partial void OnSubsequentlyRatedChanged();
    partial void OnIsMostRecent10PctChanging(bool value);
    partial void OnIsMostRecent10PctChanged();
    partial void OnIsMostRecent30PctChanging(bool value);
    partial void OnIsMostRecent30PctChanged();
    partial void OnIsMostRecent70PctChanging(bool value);
    partial void OnIsMostRecent70PctChanged();
    partial void OnIsMostRecent90PctChanging(bool value);
    partial void OnIsMostRecent90PctChanged();
    partial void OnIsUsersFirstWeekChanging(bool value);
    partial void OnIsUsersFirstWeekChanged();
    partial void OnLogarithmicBaseChanging(System.Nullable<decimal> value);
    partial void OnLogarithmicBaseChanged();
    partial void OnHighStakesMultiplierOverrideChanging(System.Nullable<decimal> value);
    partial void OnHighStakesMultiplierOverrideChanged();
    partial void OnWhenPointsBecomePendingChanging(System.Nullable<System.DateTime> value);
    partial void OnWhenPointsBecomePendingChanged();
    partial void OnLastModifiedTimeChanging(System.DateTime value);
    partial void OnLastModifiedTimeChanged();
    partial void OnVolatilityTrackingNextTimeFrameToRemoveChanging(byte value);
    partial void OnVolatilityTrackingNextTimeFrameToRemoveChanged();
    partial void OnLastWeekDistanceFromStartChanging(decimal value);
    partial void OnLastWeekDistanceFromStartChanged();
    partial void OnLastWeekPushbackChanging(decimal value);
    partial void OnLastWeekPushbackChanged();
    partial void OnLastYearPushbackChanging(decimal value);
    partial void OnLastYearPushbackChanged();
    partial void OnUserRatingNumberForUserChanging(int value);
    partial void OnUserRatingNumberForUserChanged();
    partial void OnNextRecencyUpdateAtUserRatingNumChanging(System.Nullable<int> value);
    partial void OnNextRecencyUpdateAtUserRatingNumChanged();
    #endregion
		
		public UserRating()
		{
			this._TrustTrackerForChoiceInGroupsUserRatingLinks = new EntitySet<TrustTrackerForChoiceInGroupsUserRatingLink>(new Action<TrustTrackerForChoiceInGroupsUserRatingLink>(this.attach_TrustTrackerForChoiceInGroupsUserRatingLinks), new Action<TrustTrackerForChoiceInGroupsUserRatingLink>(this.detach_TrustTrackerForChoiceInGroupsUserRatingLinks));
			this._Ratings = new EntitySet<Rating>(new Action<Rating>(this.attach_Ratings), new Action<Rating>(this.detach_Ratings));
			this._UserRatings = new EntitySet<UserRating>(new Action<UserRating>(this.attach_UserRatings), new Action<UserRating>(this.detach_UserRatings));
			this._RatingPhaseStatus = default(EntityRef<RatingPhaseStatus>);
			this._Rating = default(EntityRef<Rating>);
			this._RewardPendingPointsTracker = default(EntityRef<RewardPendingPointsTracker>);
			this._TrustTrackerUnit = default(EntityRef<TrustTrackerUnit>);
			this._UserRatingGroup = default(EntityRef<UserRatingGroup>);
			this._UserRating1 = default(EntityRef<UserRating>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRatingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserRatingID
		{
			get
			{
				return this._UserRatingID;
			}
			set
			{
				if ((this._UserRatingID != value))
				{
					this.OnUserRatingIDChanging(value);
					this.SendPropertyChanging();
					this._UserRatingID = value;
					this.SendPropertyChanged("UserRatingID");
					this.OnUserRatingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRatingGroupID", DbType="Int NOT NULL")]
		public int UserRatingGroupID
		{
			get
			{
				return this._UserRatingGroupID;
			}
			set
			{
				if ((this._UserRatingGroupID != value))
				{
					if (this._UserRatingGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserRatingGroupIDChanging(value);
					this.SendPropertyChanging();
					this._UserRatingGroupID = value;
					this.SendPropertyChanged("UserRatingGroupID");
					this.OnUserRatingGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingID", DbType="Int NOT NULL")]
		public int RatingID
		{
			get
			{
				return this._RatingID;
			}
			set
			{
				if ((this._RatingID != value))
				{
					if (this._Rating.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingIDChanging(value);
					this.SendPropertyChanging();
					this._RatingID = value;
					this.SendPropertyChanged("RatingID");
					this.OnRatingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingPhaseStatusID", DbType="Int NOT NULL")]
		public int RatingPhaseStatusID
		{
			get
			{
				return this._RatingPhaseStatusID;
			}
			set
			{
				if ((this._RatingPhaseStatusID != value))
				{
					if (this._RatingPhaseStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingPhaseStatusIDChanging(value);
					this.SendPropertyChanging();
					this._RatingPhaseStatusID = value;
					this.SendPropertyChanged("RatingPhaseStatusID");
					this.OnRatingPhaseStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustTrackerUnitID", DbType="Int")]
		public System.Nullable<int> TrustTrackerUnitID
		{
			get
			{
				return this._TrustTrackerUnitID;
			}
			set
			{
				if ((this._TrustTrackerUnitID != value))
				{
					if (this._TrustTrackerUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrustTrackerUnitIDChanging(value);
					this.SendPropertyChanging();
					this._TrustTrackerUnitID = value;
					this.SendPropertyChanged("TrustTrackerUnitID");
					this.OnTrustTrackerUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RewardPendingPointsTrackerID", DbType="Int")]
		public System.Nullable<int> RewardPendingPointsTrackerID
		{
			get
			{
				return this._RewardPendingPointsTrackerID;
			}
			set
			{
				if ((this._RewardPendingPointsTrackerID != value))
				{
					if (this._RewardPendingPointsTracker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRewardPendingPointsTrackerIDChanging(value);
					this.SendPropertyChanging();
					this._RewardPendingPointsTrackerID = value;
					this.SendPropertyChanged("RewardPendingPointsTrackerID");
					this.OnRewardPendingPointsTrackerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MostRecentUserRatingID", DbType="Int")]
		public System.Nullable<int> MostRecentUserRatingID
		{
			get
			{
				return this._MostRecentUserRatingID;
			}
			set
			{
				if ((this._MostRecentUserRatingID != value))
				{
					if (this._UserRating1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMostRecentUserRatingIDChanging(value);
					this.SendPropertyChanging();
					this._MostRecentUserRatingID = value;
					this.SendPropertyChanged("MostRecentUserRatingID");
					this.OnMostRecentUserRatingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousRatingOrVirtualRating", DbType="Decimal(18,4) NOT NULL")]
		public decimal PreviousRatingOrVirtualRating
		{
			get
			{
				return this._PreviousRatingOrVirtualRating;
			}
			set
			{
				if ((this._PreviousRatingOrVirtualRating != value))
				{
					this.OnPreviousRatingOrVirtualRatingChanging(value);
					this.SendPropertyChanging();
					this._PreviousRatingOrVirtualRating = value;
					this.SendPropertyChanged("PreviousRatingOrVirtualRating");
					this.OnPreviousRatingOrVirtualRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousDisplayedRating", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> PreviousDisplayedRating
		{
			get
			{
				return this._PreviousDisplayedRating;
			}
			set
			{
				if ((this._PreviousDisplayedRating != value))
				{
					this.OnPreviousDisplayedRatingChanging(value);
					this.SendPropertyChanging();
					this._PreviousDisplayedRating = value;
					this.SendPropertyChanged("PreviousDisplayedRating");
					this.OnPreviousDisplayedRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUserRating", DbType="Decimal(18,4) NOT NULL")]
		public decimal EnteredUserRating
		{
			get
			{
				return this._EnteredUserRating;
			}
			set
			{
				if ((this._EnteredUserRating != value))
				{
					this.OnEnteredUserRatingChanging(value);
					this.SendPropertyChanging();
					this._EnteredUserRating = value;
					this.SendPropertyChanged("EnteredUserRating");
					this.OnEnteredUserRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUserRating", DbType="Decimal(18,4) NOT NULL")]
		public decimal NewUserRating
		{
			get
			{
				return this._NewUserRating;
			}
			set
			{
				if ((this._NewUserRating != value))
				{
					this.OnNewUserRatingChanging(value);
					this.SendPropertyChanging();
					this._NewUserRating = value;
					this.SendPropertyChanged("NewUserRating");
					this.OnNewUserRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalAdjustmentPct", DbType="Decimal(7,4) NOT NULL")]
		public decimal OriginalAdjustmentPct
		{
			get
			{
				return this._OriginalAdjustmentPct;
			}
			set
			{
				if ((this._OriginalAdjustmentPct != value))
				{
					this.OnOriginalAdjustmentPctChanging(value);
					this.SendPropertyChanging();
					this._OriginalAdjustmentPct = value;
					this.SendPropertyChanged("OriginalAdjustmentPct");
					this.OnOriginalAdjustmentPctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalTrustLevel", DbType="Decimal(7,4) NOT NULL")]
		public decimal OriginalTrustLevel
		{
			get
			{
				return this._OriginalTrustLevel;
			}
			set
			{
				if ((this._OriginalTrustLevel != value))
				{
					this.OnOriginalTrustLevelChanging(value);
					this.SendPropertyChanging();
					this._OriginalTrustLevel = value;
					this.SendPropertyChanged("OriginalTrustLevel");
					this.OnOriginalTrustLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxGain", DbType="Decimal(18,4) NOT NULL")]
		public decimal MaxGain
		{
			get
			{
				return this._MaxGain;
			}
			set
			{
				if ((this._MaxGain != value))
				{
					this.OnMaxGainChanging(value);
					this.SendPropertyChanging();
					this._MaxGain = value;
					this.SendPropertyChanged("MaxGain");
					this.OnMaxGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxLoss", DbType="Decimal(18,4) NOT NULL")]
		public decimal MaxLoss
		{
			get
			{
				return this._MaxLoss;
			}
			set
			{
				if ((this._MaxLoss != value))
				{
					this.OnMaxLossChanging(value);
					this.SendPropertyChanging();
					this._MaxLoss = value;
					this.SendPropertyChanged("MaxLoss");
					this.OnMaxLossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PotentialPointsShortTerm", DbType="Decimal(18,4) NOT NULL")]
		public decimal PotentialPointsShortTerm
		{
			get
			{
				return this._PotentialPointsShortTerm;
			}
			set
			{
				if ((this._PotentialPointsShortTerm != value))
				{
					this.OnPotentialPointsShortTermChanging(value);
					this.SendPropertyChanging();
					this._PotentialPointsShortTerm = value;
					this.SendPropertyChanged("PotentialPointsShortTerm");
					this.OnPotentialPointsShortTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PotentialPointsLongTerm", DbType="Decimal(18,4) NOT NULL")]
		public decimal PotentialPointsLongTerm
		{
			get
			{
				return this._PotentialPointsLongTerm;
			}
			set
			{
				if ((this._PotentialPointsLongTerm != value))
				{
					this.OnPotentialPointsLongTermChanging(value);
					this.SendPropertyChanging();
					this._PotentialPointsLongTerm = value;
					this.SendPropertyChanged("PotentialPointsLongTerm");
					this.OnPotentialPointsLongTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PotentialPointsLongTermUnweighted", DbType="Decimal(18,4) NOT NULL")]
		public decimal PotentialPointsLongTermUnweighted
		{
			get
			{
				return this._PotentialPointsLongTermUnweighted;
			}
			set
			{
				if ((this._PotentialPointsLongTermUnweighted != value))
				{
					this.OnPotentialPointsLongTermUnweightedChanging(value);
					this.SendPropertyChanging();
					this._PotentialPointsLongTermUnweighted = value;
					this.SendPropertyChanged("PotentialPointsLongTermUnweighted");
					this.OnPotentialPointsLongTermUnweightedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongTermPointsWeight", DbType="Decimal(18,4) NOT NULL")]
		public decimal LongTermPointsWeight
		{
			get
			{
				return this._LongTermPointsWeight;
			}
			set
			{
				if ((this._LongTermPointsWeight != value))
				{
					this.OnLongTermPointsWeightChanging(value);
					this.SendPropertyChanging();
					this._LongTermPointsWeight = value;
					this.SendPropertyChanged("LongTermPointsWeight");
					this.OnLongTermPointsWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPumpingProportion", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> PointsPumpingProportion
		{
			get
			{
				return this._PointsPumpingProportion;
			}
			set
			{
				if ((this._PointsPumpingProportion != value))
				{
					this.OnPointsPumpingProportionChanging(value);
					this.SendPropertyChanging();
					this._PointsPumpingProportion = value;
					this.SendPropertyChanged("PointsPumpingProportion");
					this.OnPointsPumpingProportionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastPointsPumpingProportion", DbType="Decimal(18,4) NOT NULL")]
		public decimal PastPointsPumpingProportion
		{
			get
			{
				return this._PastPointsPumpingProportion;
			}
			set
			{
				if ((this._PastPointsPumpingProportion != value))
				{
					this.OnPastPointsPumpingProportionChanging(value);
					this.SendPropertyChanging();
					this._PastPointsPumpingProportion = value;
					this.SendPropertyChanged("PastPointsPumpingProportion");
					this.OnPastPointsPumpingProportionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentPreviousRatings", DbType="Decimal(18,4) NOT NULL")]
		public decimal PercentPreviousRatings
		{
			get
			{
				return this._PercentPreviousRatings;
			}
			set
			{
				if ((this._PercentPreviousRatings != value))
				{
					this.OnPercentPreviousRatingsChanging(value);
					this.SendPropertyChanging();
					this._PercentPreviousRatings = value;
					this.SendPropertyChanged("PercentPreviousRatings");
					this.OnPercentPreviousRatingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTrusted", DbType="Bit NOT NULL")]
		public bool IsTrusted
		{
			get
			{
				return this._IsTrusted;
			}
			set
			{
				if ((this._IsTrusted != value))
				{
					this.OnIsTrustedChanging(value);
					this.SendPropertyChanging();
					this._IsTrusted = value;
					this.SendPropertyChanged("IsTrusted");
					this.OnIsTrustedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MadeDirectly", DbType="Bit NOT NULL")]
		public bool MadeDirectly
		{
			get
			{
				return this._MadeDirectly;
			}
			set
			{
				if ((this._MadeDirectly != value))
				{
					this.OnMadeDirectlyChanging(value);
					this.SendPropertyChanging();
					this._MadeDirectly = value;
					this.SendPropertyChanged("MadeDirectly");
					this.OnMadeDirectlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongTermResolutionReflected", DbType="Bit NOT NULL")]
		public bool LongTermResolutionReflected
		{
			get
			{
				return this._LongTermResolutionReflected;
			}
			set
			{
				if ((this._LongTermResolutionReflected != value))
				{
					this.OnLongTermResolutionReflectedChanging(value);
					this.SendPropertyChanging();
					this._LongTermResolutionReflected = value;
					this.SendPropertyChanged("LongTermResolutionReflected");
					this.OnLongTermResolutionReflectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortTermResolutionReflected", DbType="Bit NOT NULL")]
		public bool ShortTermResolutionReflected
		{
			get
			{
				return this._ShortTermResolutionReflected;
			}
			set
			{
				if ((this._ShortTermResolutionReflected != value))
				{
					this.OnShortTermResolutionReflectedChanging(value);
					this.SendPropertyChanging();
					this._ShortTermResolutionReflected = value;
					this.SendPropertyChanged("ShortTermResolutionReflected");
					this.OnShortTermResolutionReflectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsHaveBecomePending", DbType="Bit NOT NULL")]
		public bool PointsHaveBecomePending
		{
			get
			{
				return this._PointsHaveBecomePending;
			}
			set
			{
				if ((this._PointsHaveBecomePending != value))
				{
					this.OnPointsHaveBecomePendingChanging(value);
					this.SendPropertyChanging();
					this._PointsHaveBecomePending = value;
					this.SendPropertyChanged("PointsHaveBecomePending");
					this.OnPointsHaveBecomePendingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForceRecalculate", DbType="Bit NOT NULL")]
		public bool ForceRecalculate
		{
			get
			{
				return this._ForceRecalculate;
			}
			set
			{
				if ((this._ForceRecalculate != value))
				{
					this.OnForceRecalculateChanging(value);
					this.SendPropertyChanging();
					this._ForceRecalculate = value;
					this.SendPropertyChanged("ForceRecalculate");
					this.OnForceRecalculateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighStakesPreviouslySecret", DbType="Bit NOT NULL")]
		public bool HighStakesPreviouslySecret
		{
			get
			{
				return this._HighStakesPreviouslySecret;
			}
			set
			{
				if ((this._HighStakesPreviouslySecret != value))
				{
					this.OnHighStakesPreviouslySecretChanging(value);
					this.SendPropertyChanging();
					this._HighStakesPreviouslySecret = value;
					this.SendPropertyChanged("HighStakesPreviouslySecret");
					this.OnHighStakesPreviouslySecretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighStakesKnown", DbType="Bit NOT NULL")]
		public bool HighStakesKnown
		{
			get
			{
				return this._HighStakesKnown;
			}
			set
			{
				if ((this._HighStakesKnown != value))
				{
					this.OnHighStakesKnownChanging(value);
					this.SendPropertyChanging();
					this._HighStakesKnown = value;
					this.SendPropertyChanged("HighStakesKnown");
					this.OnHighStakesKnownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviouslyRated", DbType="Bit NOT NULL")]
		public bool PreviouslyRated
		{
			get
			{
				return this._PreviouslyRated;
			}
			set
			{
				if ((this._PreviouslyRated != value))
				{
					this.OnPreviouslyRatedChanging(value);
					this.SendPropertyChanging();
					this._PreviouslyRated = value;
					this.SendPropertyChanged("PreviouslyRated");
					this.OnPreviouslyRatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubsequentlyRated", DbType="Bit NOT NULL")]
		public bool SubsequentlyRated
		{
			get
			{
				return this._SubsequentlyRated;
			}
			set
			{
				if ((this._SubsequentlyRated != value))
				{
					this.OnSubsequentlyRatedChanging(value);
					this.SendPropertyChanging();
					this._SubsequentlyRated = value;
					this.SendPropertyChanged("SubsequentlyRated");
					this.OnSubsequentlyRatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMostRecent10Pct", DbType="Bit NOT NULL")]
		public bool IsMostRecent10Pct
		{
			get
			{
				return this._IsMostRecent10Pct;
			}
			set
			{
				if ((this._IsMostRecent10Pct != value))
				{
					this.OnIsMostRecent10PctChanging(value);
					this.SendPropertyChanging();
					this._IsMostRecent10Pct = value;
					this.SendPropertyChanged("IsMostRecent10Pct");
					this.OnIsMostRecent10PctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMostRecent30Pct", DbType="Bit NOT NULL")]
		public bool IsMostRecent30Pct
		{
			get
			{
				return this._IsMostRecent30Pct;
			}
			set
			{
				if ((this._IsMostRecent30Pct != value))
				{
					this.OnIsMostRecent30PctChanging(value);
					this.SendPropertyChanging();
					this._IsMostRecent30Pct = value;
					this.SendPropertyChanged("IsMostRecent30Pct");
					this.OnIsMostRecent30PctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMostRecent70Pct", DbType="Bit NOT NULL")]
		public bool IsMostRecent70Pct
		{
			get
			{
				return this._IsMostRecent70Pct;
			}
			set
			{
				if ((this._IsMostRecent70Pct != value))
				{
					this.OnIsMostRecent70PctChanging(value);
					this.SendPropertyChanging();
					this._IsMostRecent70Pct = value;
					this.SendPropertyChanged("IsMostRecent70Pct");
					this.OnIsMostRecent70PctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMostRecent90Pct", DbType="Bit NOT NULL")]
		public bool IsMostRecent90Pct
		{
			get
			{
				return this._IsMostRecent90Pct;
			}
			set
			{
				if ((this._IsMostRecent90Pct != value))
				{
					this.OnIsMostRecent90PctChanging(value);
					this.SendPropertyChanging();
					this._IsMostRecent90Pct = value;
					this.SendPropertyChanged("IsMostRecent90Pct");
					this.OnIsMostRecent90PctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsersFirstWeek", DbType="Bit NOT NULL")]
		public bool IsUsersFirstWeek
		{
			get
			{
				return this._IsUsersFirstWeek;
			}
			set
			{
				if ((this._IsUsersFirstWeek != value))
				{
					this.OnIsUsersFirstWeekChanging(value);
					this.SendPropertyChanging();
					this._IsUsersFirstWeek = value;
					this.SendPropertyChanged("IsUsersFirstWeek");
					this.OnIsUsersFirstWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogarithmicBase", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> LogarithmicBase
		{
			get
			{
				return this._LogarithmicBase;
			}
			set
			{
				if ((this._LogarithmicBase != value))
				{
					this.OnLogarithmicBaseChanging(value);
					this.SendPropertyChanging();
					this._LogarithmicBase = value;
					this.SendPropertyChanged("LogarithmicBase");
					this.OnLogarithmicBaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighStakesMultiplierOverride", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> HighStakesMultiplierOverride
		{
			get
			{
				return this._HighStakesMultiplierOverride;
			}
			set
			{
				if ((this._HighStakesMultiplierOverride != value))
				{
					this.OnHighStakesMultiplierOverrideChanging(value);
					this.SendPropertyChanging();
					this._HighStakesMultiplierOverride = value;
					this.SendPropertyChanged("HighStakesMultiplierOverride");
					this.OnHighStakesMultiplierOverrideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhenPointsBecomePending", DbType="DateTime")]
		public System.Nullable<System.DateTime> WhenPointsBecomePending
		{
			get
			{
				return this._WhenPointsBecomePending;
			}
			set
			{
				if ((this._WhenPointsBecomePending != value))
				{
					this.OnWhenPointsBecomePendingChanging(value);
					this.SendPropertyChanging();
					this._WhenPointsBecomePending = value;
					this.SendPropertyChanged("WhenPointsBecomePending");
					this.OnWhenPointsBecomePendingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedTime
		{
			get
			{
				return this._LastModifiedTime;
			}
			set
			{
				if ((this._LastModifiedTime != value))
				{
					this.OnLastModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedTime = value;
					this.SendPropertyChanged("LastModifiedTime");
					this.OnLastModifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolatilityTrackingNextTimeFrameToRemove", DbType="TinyInt NOT NULL")]
		public byte VolatilityTrackingNextTimeFrameToRemove
		{
			get
			{
				return this._VolatilityTrackingNextTimeFrameToRemove;
			}
			set
			{
				if ((this._VolatilityTrackingNextTimeFrameToRemove != value))
				{
					this.OnVolatilityTrackingNextTimeFrameToRemoveChanging(value);
					this.SendPropertyChanging();
					this._VolatilityTrackingNextTimeFrameToRemove = value;
					this.SendPropertyChanged("VolatilityTrackingNextTimeFrameToRemove");
					this.OnVolatilityTrackingNextTimeFrameToRemoveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastWeekDistanceFromStart", DbType="Decimal(18,4) NOT NULL")]
		public decimal LastWeekDistanceFromStart
		{
			get
			{
				return this._LastWeekDistanceFromStart;
			}
			set
			{
				if ((this._LastWeekDistanceFromStart != value))
				{
					this.OnLastWeekDistanceFromStartChanging(value);
					this.SendPropertyChanging();
					this._LastWeekDistanceFromStart = value;
					this.SendPropertyChanged("LastWeekDistanceFromStart");
					this.OnLastWeekDistanceFromStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastWeekPushback", DbType="Decimal(18,4) NOT NULL")]
		public decimal LastWeekPushback
		{
			get
			{
				return this._LastWeekPushback;
			}
			set
			{
				if ((this._LastWeekPushback != value))
				{
					this.OnLastWeekPushbackChanging(value);
					this.SendPropertyChanging();
					this._LastWeekPushback = value;
					this.SendPropertyChanged("LastWeekPushback");
					this.OnLastWeekPushbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastYearPushback", DbType="Decimal(18,4) NOT NULL")]
		public decimal LastYearPushback
		{
			get
			{
				return this._LastYearPushback;
			}
			set
			{
				if ((this._LastYearPushback != value))
				{
					this.OnLastYearPushbackChanging(value);
					this.SendPropertyChanging();
					this._LastYearPushback = value;
					this.SendPropertyChanged("LastYearPushback");
					this.OnLastYearPushbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRatingNumberForUser", DbType="Int NOT NULL")]
		public int UserRatingNumberForUser
		{
			get
			{
				return this._UserRatingNumberForUser;
			}
			set
			{
				if ((this._UserRatingNumberForUser != value))
				{
					this.OnUserRatingNumberForUserChanging(value);
					this.SendPropertyChanging();
					this._UserRatingNumberForUser = value;
					this.SendPropertyChanged("UserRatingNumberForUser");
					this.OnUserRatingNumberForUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextRecencyUpdateAtUserRatingNum", DbType="Int")]
		public System.Nullable<int> NextRecencyUpdateAtUserRatingNum
		{
			get
			{
				return this._NextRecencyUpdateAtUserRatingNum;
			}
			set
			{
				if ((this._NextRecencyUpdateAtUserRatingNum != value))
				{
					this.OnNextRecencyUpdateAtUserRatingNumChanging(value);
					this.SendPropertyChanging();
					this._NextRecencyUpdateAtUserRatingNum = value;
					this.SendPropertyChanged("NextRecencyUpdateAtUserRatingNum");
					this.OnNextRecencyUpdateAtUserRatingNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRating_TrustTrackerForChoiceInGroupsUserRatingLink", Storage="_TrustTrackerForChoiceInGroupsUserRatingLinks", ThisKey="UserRatingID", OtherKey="UserRatingID")]
		public EntitySet<TrustTrackerForChoiceInGroupsUserRatingLink> TrustTrackerForChoiceInGroupsUserRatingLinks
		{
			get
			{
				return this._TrustTrackerForChoiceInGroupsUserRatingLinks;
			}
			set
			{
				this._TrustTrackerForChoiceInGroupsUserRatingLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRating_Rating", Storage="_Ratings", ThisKey="UserRatingID", OtherKey="MostRecentUserRatingID")]
		public EntitySet<Rating> Ratings
		{
			get
			{
				return this._Ratings;
			}
			set
			{
				this._Ratings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRating_UserRating", Storage="_UserRatings", ThisKey="UserRatingID", OtherKey="MostRecentUserRatingID")]
		public EntitySet<UserRating> UserRatings
		{
			get
			{
				return this._UserRatings;
			}
			set
			{
				this._UserRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingPhaseStatus_UserRating", Storage="_RatingPhaseStatus", ThisKey="RatingPhaseStatusID", OtherKey="RatingPhaseStatusID", IsForeignKey=true)]
		public RatingPhaseStatus RatingPhaseStatus
		{
			get
			{
				return this._RatingPhaseStatus.Entity;
			}
			set
			{
				RatingPhaseStatus previousValue = this._RatingPhaseStatus.Entity;
				if (((previousValue != value) 
							|| (this._RatingPhaseStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingPhaseStatus.Entity = null;
						previousValue.UserRatings.Remove(this);
					}
					this._RatingPhaseStatus.Entity = value;
					if ((value != null))
					{
						value.UserRatings.Add(this);
						this._RatingPhaseStatusID = value.RatingPhaseStatusID;
					}
					else
					{
						this._RatingPhaseStatusID = default(int);
					}
					this.SendPropertyChanged("RatingPhaseStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rating_UserRating", Storage="_Rating", ThisKey="RatingID", OtherKey="RatingID", IsForeignKey=true)]
		public Rating Rating
		{
			get
			{
				return this._Rating.Entity;
			}
			set
			{
				Rating previousValue = this._Rating.Entity;
				if (((previousValue != value) 
							|| (this._Rating.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rating.Entity = null;
						previousValue.UserRatings.Remove(this);
					}
					this._Rating.Entity = value;
					if ((value != null))
					{
						value.UserRatings.Add(this);
						this._RatingID = value.RatingID;
					}
					else
					{
						this._RatingID = default(int);
					}
					this.SendPropertyChanged("Rating");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RewardPendingPointsTracker_UserRating", Storage="_RewardPendingPointsTracker", ThisKey="RewardPendingPointsTrackerID", OtherKey="RewardPendingPointsTrackerID", IsForeignKey=true)]
		public RewardPendingPointsTracker RewardPendingPointsTracker
		{
			get
			{
				return this._RewardPendingPointsTracker.Entity;
			}
			set
			{
				RewardPendingPointsTracker previousValue = this._RewardPendingPointsTracker.Entity;
				if (((previousValue != value) 
							|| (this._RewardPendingPointsTracker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RewardPendingPointsTracker.Entity = null;
						previousValue.UserRatings.Remove(this);
					}
					this._RewardPendingPointsTracker.Entity = value;
					if ((value != null))
					{
						value.UserRatings.Add(this);
						this._RewardPendingPointsTrackerID = value.RewardPendingPointsTrackerID;
					}
					else
					{
						this._RewardPendingPointsTrackerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RewardPendingPointsTracker");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrustTrackerUnit_UserRating", Storage="_TrustTrackerUnit", ThisKey="TrustTrackerUnitID", OtherKey="TrustTrackerUnitID", IsForeignKey=true)]
		public TrustTrackerUnit TrustTrackerUnit
		{
			get
			{
				return this._TrustTrackerUnit.Entity;
			}
			set
			{
				TrustTrackerUnit previousValue = this._TrustTrackerUnit.Entity;
				if (((previousValue != value) 
							|| (this._TrustTrackerUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrustTrackerUnit.Entity = null;
						previousValue.UserRatings.Remove(this);
					}
					this._TrustTrackerUnit.Entity = value;
					if ((value != null))
					{
						value.UserRatings.Add(this);
						this._TrustTrackerUnitID = value.TrustTrackerUnitID;
					}
					else
					{
						this._TrustTrackerUnitID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrustTrackerUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRatingGroup_UserRating", Storage="_UserRatingGroup", ThisKey="UserRatingGroupID", OtherKey="UserRatingGroupID", IsForeignKey=true)]
		public UserRatingGroup UserRatingGroup
		{
			get
			{
				return this._UserRatingGroup.Entity;
			}
			set
			{
				UserRatingGroup previousValue = this._UserRatingGroup.Entity;
				if (((previousValue != value) 
							|| (this._UserRatingGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRatingGroup.Entity = null;
						previousValue.UserRatings.Remove(this);
					}
					this._UserRatingGroup.Entity = value;
					if ((value != null))
					{
						value.UserRatings.Add(this);
						this._UserRatingGroupID = value.UserRatingGroupID;
					}
					else
					{
						this._UserRatingGroupID = default(int);
					}
					this.SendPropertyChanged("UserRatingGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRating_UserRating", Storage="_UserRating1", ThisKey="MostRecentUserRatingID", OtherKey="UserRatingID", IsForeignKey=true)]
		public UserRating UserRating1
		{
			get
			{
				return this._UserRating1.Entity;
			}
			set
			{
				UserRating previousValue = this._UserRating1.Entity;
				if (((previousValue != value) 
							|| (this._UserRating1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRating1.Entity = null;
						previousValue.UserRatings.Remove(this);
					}
					this._UserRating1.Entity = value;
					if ((value != null))
					{
						value.UserRatings.Add(this);
						this._MostRecentUserRatingID = value.UserRatingID;
					}
					else
					{
						this._MostRecentUserRatingID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserRating1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRating", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserRatings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserRatings.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrustTrackerForChoiceInGroupsUserRatingLinks(TrustTrackerForChoiceInGroupsUserRatingLink entity)
		{
			this.SendPropertyChanging();
			entity.UserRating = this;
		}
		
		private void detach_TrustTrackerForChoiceInGroupsUserRatingLinks(TrustTrackerForChoiceInGroupsUserRatingLink entity)
		{
			this.SendPropertyChanging();
			entity.UserRating = null;
		}
		
		private void attach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.UserRating = this;
		}
		
		private void detach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.UserRating = null;
		}
		
		private void attach_UserRatings(UserRating entity)
		{
			this.SendPropertyChanging();
			entity.UserRating1 = this;
		}
		
		private void detach_UserRatings(UserRating entity)
		{
			this.SendPropertyChanging();
			entity.UserRating1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PointsTotals")]
	public partial class PointsTotal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PointsTotalID;
		
		private int _UserID;
		
		private int _PointsManagerID;
		
		private decimal _CurrentPoints;
		
		private decimal _TotalPoints;
		
		private decimal _PotentialMaxLossOnNotYetPending;
		
		private decimal _PendingPoints;
		
		private decimal _NotYetPendingPoints;
		
		private decimal _TrustPoints;
		
		private decimal _TrustPointsRatio;
		
		private int _NumPendingOrFinalizedRatings;
		
		private decimal _PointsPerRating;
		
		private System.Nullable<System.DateTime> _FirstUserRating;
		
		private System.Nullable<System.DateTime> _LastCheckIn;
		
		private System.Nullable<System.DateTime> _CurrentCheckInPeriodStart;
		
		private decimal _TotalTimeThisCheckInPeriod;
		
		private decimal _TotalTimeThisRewardPeriod;
		
		private decimal _TotalTimeEver;
		
		private System.Nullable<decimal> _PointsPerHour;
		
		private System.Nullable<decimal> _ProjectedPointsPerHour;
		
		private decimal _GuaranteedPaymentsEarnedThisRewardPeriod;
		
		private string _PendingConditionalGuaranteeApplication;
		
		private System.Nullable<decimal> _PendingConditionalGuaranteePayment;
		
		private System.Nullable<decimal> _PendingConditionalGuaranteeTotalHoursAtStart;
		
		private System.Nullable<decimal> _PendingConditionalGuaranteeTotalHoursNeeded;
		
		private System.Nullable<decimal> _PendingConditionalGuaranteePaymentAlreadyMade;
		
		private System.Nullable<System.DateTime> _RequestConditionalGuaranteeWhenAvailableTimeRequestMade;
		
		private decimal _TotalPointsOrPendingPointsLongTermUnweighted;
		
		private decimal _PointsPerRatingLongTerm;
		
		private float _PointsPumpingProportionAvg_Numer;
		
		private float _PointsPumpingProportionAvg_Denom;
		
		private float _PointsPumpingProportionAvg;
		
		private int _NumUserRatings;
		
		private EntityRef<PointsManager> _PointsManager;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPointsTotalIDChanging(int value);
    partial void OnPointsTotalIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnPointsManagerIDChanging(int value);
    partial void OnPointsManagerIDChanged();
    partial void OnCurrentPointsChanging(decimal value);
    partial void OnCurrentPointsChanged();
    partial void OnTotalPointsChanging(decimal value);
    partial void OnTotalPointsChanged();
    partial void OnPotentialMaxLossOnNotYetPendingChanging(decimal value);
    partial void OnPotentialMaxLossOnNotYetPendingChanged();
    partial void OnPendingPointsChanging(decimal value);
    partial void OnPendingPointsChanged();
    partial void OnNotYetPendingPointsChanging(decimal value);
    partial void OnNotYetPendingPointsChanged();
    partial void OnTrustPointsChanging(decimal value);
    partial void OnTrustPointsChanged();
    partial void OnTrustPointsRatioChanging(decimal value);
    partial void OnTrustPointsRatioChanged();
    partial void OnNumPendingOrFinalizedRatingsChanging(int value);
    partial void OnNumPendingOrFinalizedRatingsChanged();
    partial void OnPointsPerRatingChanging(decimal value);
    partial void OnPointsPerRatingChanged();
    partial void OnFirstUserRatingChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstUserRatingChanged();
    partial void OnLastCheckInChanging(System.Nullable<System.DateTime> value);
    partial void OnLastCheckInChanged();
    partial void OnCurrentCheckInPeriodStartChanging(System.Nullable<System.DateTime> value);
    partial void OnCurrentCheckInPeriodStartChanged();
    partial void OnTotalTimeThisCheckInPeriodChanging(decimal value);
    partial void OnTotalTimeThisCheckInPeriodChanged();
    partial void OnTotalTimeThisRewardPeriodChanging(decimal value);
    partial void OnTotalTimeThisRewardPeriodChanged();
    partial void OnTotalTimeEverChanging(decimal value);
    partial void OnTotalTimeEverChanged();
    partial void OnPointsPerHourChanging(System.Nullable<decimal> value);
    partial void OnPointsPerHourChanged();
    partial void OnProjectedPointsPerHourChanging(System.Nullable<decimal> value);
    partial void OnProjectedPointsPerHourChanged();
    partial void OnGuaranteedPaymentsEarnedThisRewardPeriodChanging(decimal value);
    partial void OnGuaranteedPaymentsEarnedThisRewardPeriodChanged();
    partial void OnPendingConditionalGuaranteeApplicationChanging(string value);
    partial void OnPendingConditionalGuaranteeApplicationChanged();
    partial void OnPendingConditionalGuaranteePaymentChanging(System.Nullable<decimal> value);
    partial void OnPendingConditionalGuaranteePaymentChanged();
    partial void OnPendingConditionalGuaranteeTotalHoursAtStartChanging(System.Nullable<decimal> value);
    partial void OnPendingConditionalGuaranteeTotalHoursAtStartChanged();
    partial void OnPendingConditionalGuaranteeTotalHoursNeededChanging(System.Nullable<decimal> value);
    partial void OnPendingConditionalGuaranteeTotalHoursNeededChanged();
    partial void OnPendingConditionalGuaranteePaymentAlreadyMadeChanging(System.Nullable<decimal> value);
    partial void OnPendingConditionalGuaranteePaymentAlreadyMadeChanged();
    partial void OnRequestConditionalGuaranteeWhenAvailableTimeRequestMadeChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestConditionalGuaranteeWhenAvailableTimeRequestMadeChanged();
    partial void OnTotalPointsOrPendingPointsLongTermUnweightedChanging(decimal value);
    partial void OnTotalPointsOrPendingPointsLongTermUnweightedChanged();
    partial void OnPointsPerRatingLongTermChanging(decimal value);
    partial void OnPointsPerRatingLongTermChanged();
    partial void OnPointsPumpingProportionAvg_NumerChanging(float value);
    partial void OnPointsPumpingProportionAvg_NumerChanged();
    partial void OnPointsPumpingProportionAvg_DenomChanging(float value);
    partial void OnPointsPumpingProportionAvg_DenomChanged();
    partial void OnPointsPumpingProportionAvgChanging(float value);
    partial void OnPointsPumpingProportionAvgChanged();
    partial void OnNumUserRatingsChanging(int value);
    partial void OnNumUserRatingsChanged();
    #endregion
		
		public PointsTotal()
		{
			this._PointsManager = default(EntityRef<PointsManager>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsTotalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PointsTotalID
		{
			get
			{
				return this._PointsTotalID;
			}
			set
			{
				if ((this._PointsTotalID != value))
				{
					this.OnPointsTotalIDChanging(value);
					this.SendPropertyChanging();
					this._PointsTotalID = value;
					this.SendPropertyChanged("PointsTotalID");
					this.OnPointsTotalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsManagerID", DbType="Int NOT NULL")]
		public int PointsManagerID
		{
			get
			{
				return this._PointsManagerID;
			}
			set
			{
				if ((this._PointsManagerID != value))
				{
					if (this._PointsManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPointsManagerIDChanging(value);
					this.SendPropertyChanging();
					this._PointsManagerID = value;
					this.SendPropertyChanged("PointsManagerID");
					this.OnPointsManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPoints", DbType="Decimal(18,4) NOT NULL")]
		public decimal CurrentPoints
		{
			get
			{
				return this._CurrentPoints;
			}
			set
			{
				if ((this._CurrentPoints != value))
				{
					this.OnCurrentPointsChanging(value);
					this.SendPropertyChanging();
					this._CurrentPoints = value;
					this.SendPropertyChanged("CurrentPoints");
					this.OnCurrentPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPoints", DbType="Decimal(18,4) NOT NULL")]
		public decimal TotalPoints
		{
			get
			{
				return this._TotalPoints;
			}
			set
			{
				if ((this._TotalPoints != value))
				{
					this.OnTotalPointsChanging(value);
					this.SendPropertyChanging();
					this._TotalPoints = value;
					this.SendPropertyChanged("TotalPoints");
					this.OnTotalPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PotentialMaxLossOnNotYetPending", DbType="Decimal(18,4) NOT NULL")]
		public decimal PotentialMaxLossOnNotYetPending
		{
			get
			{
				return this._PotentialMaxLossOnNotYetPending;
			}
			set
			{
				if ((this._PotentialMaxLossOnNotYetPending != value))
				{
					this.OnPotentialMaxLossOnNotYetPendingChanging(value);
					this.SendPropertyChanging();
					this._PotentialMaxLossOnNotYetPending = value;
					this.SendPropertyChanged("PotentialMaxLossOnNotYetPending");
					this.OnPotentialMaxLossOnNotYetPendingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingPoints", DbType="Decimal(18,4) NOT NULL")]
		public decimal PendingPoints
		{
			get
			{
				return this._PendingPoints;
			}
			set
			{
				if ((this._PendingPoints != value))
				{
					this.OnPendingPointsChanging(value);
					this.SendPropertyChanging();
					this._PendingPoints = value;
					this.SendPropertyChanged("PendingPoints");
					this.OnPendingPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotYetPendingPoints", DbType="Decimal(18,4) NOT NULL")]
		public decimal NotYetPendingPoints
		{
			get
			{
				return this._NotYetPendingPoints;
			}
			set
			{
				if ((this._NotYetPendingPoints != value))
				{
					this.OnNotYetPendingPointsChanging(value);
					this.SendPropertyChanging();
					this._NotYetPendingPoints = value;
					this.SendPropertyChanged("NotYetPendingPoints");
					this.OnNotYetPendingPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustPoints", DbType="Decimal(18,4) NOT NULL")]
		public decimal TrustPoints
		{
			get
			{
				return this._TrustPoints;
			}
			set
			{
				if ((this._TrustPoints != value))
				{
					this.OnTrustPointsChanging(value);
					this.SendPropertyChanging();
					this._TrustPoints = value;
					this.SendPropertyChanged("TrustPoints");
					this.OnTrustPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustPointsRatio", DbType="Decimal(18,4) NOT NULL")]
		public decimal TrustPointsRatio
		{
			get
			{
				return this._TrustPointsRatio;
			}
			set
			{
				if ((this._TrustPointsRatio != value))
				{
					this.OnTrustPointsRatioChanging(value);
					this.SendPropertyChanging();
					this._TrustPointsRatio = value;
					this.SendPropertyChanged("TrustPointsRatio");
					this.OnTrustPointsRatioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumPendingOrFinalizedRatings", DbType="Int NOT NULL")]
		public int NumPendingOrFinalizedRatings
		{
			get
			{
				return this._NumPendingOrFinalizedRatings;
			}
			set
			{
				if ((this._NumPendingOrFinalizedRatings != value))
				{
					this.OnNumPendingOrFinalizedRatingsChanging(value);
					this.SendPropertyChanging();
					this._NumPendingOrFinalizedRatings = value;
					this.SendPropertyChanged("NumPendingOrFinalizedRatings");
					this.OnNumPendingOrFinalizedRatingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPerRating", DbType="Decimal(18,4) NOT NULL")]
		public decimal PointsPerRating
		{
			get
			{
				return this._PointsPerRating;
			}
			set
			{
				if ((this._PointsPerRating != value))
				{
					this.OnPointsPerRatingChanging(value);
					this.SendPropertyChanging();
					this._PointsPerRating = value;
					this.SendPropertyChanged("PointsPerRating");
					this.OnPointsPerRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstUserRating", DbType="DateTime")]
		public System.Nullable<System.DateTime> FirstUserRating
		{
			get
			{
				return this._FirstUserRating;
			}
			set
			{
				if ((this._FirstUserRating != value))
				{
					this.OnFirstUserRatingChanging(value);
					this.SendPropertyChanging();
					this._FirstUserRating = value;
					this.SendPropertyChanged("FirstUserRating");
					this.OnFirstUserRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCheckIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCheckIn
		{
			get
			{
				return this._LastCheckIn;
			}
			set
			{
				if ((this._LastCheckIn != value))
				{
					this.OnLastCheckInChanging(value);
					this.SendPropertyChanging();
					this._LastCheckIn = value;
					this.SendPropertyChanged("LastCheckIn");
					this.OnLastCheckInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCheckInPeriodStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> CurrentCheckInPeriodStart
		{
			get
			{
				return this._CurrentCheckInPeriodStart;
			}
			set
			{
				if ((this._CurrentCheckInPeriodStart != value))
				{
					this.OnCurrentCheckInPeriodStartChanging(value);
					this.SendPropertyChanging();
					this._CurrentCheckInPeriodStart = value;
					this.SendPropertyChanged("CurrentCheckInPeriodStart");
					this.OnCurrentCheckInPeriodStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTimeThisCheckInPeriod", DbType="Decimal(18,4) NOT NULL")]
		public decimal TotalTimeThisCheckInPeriod
		{
			get
			{
				return this._TotalTimeThisCheckInPeriod;
			}
			set
			{
				if ((this._TotalTimeThisCheckInPeriod != value))
				{
					this.OnTotalTimeThisCheckInPeriodChanging(value);
					this.SendPropertyChanging();
					this._TotalTimeThisCheckInPeriod = value;
					this.SendPropertyChanged("TotalTimeThisCheckInPeriod");
					this.OnTotalTimeThisCheckInPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTimeThisRewardPeriod", DbType="Decimal(18,4) NOT NULL")]
		public decimal TotalTimeThisRewardPeriod
		{
			get
			{
				return this._TotalTimeThisRewardPeriod;
			}
			set
			{
				if ((this._TotalTimeThisRewardPeriod != value))
				{
					this.OnTotalTimeThisRewardPeriodChanging(value);
					this.SendPropertyChanging();
					this._TotalTimeThisRewardPeriod = value;
					this.SendPropertyChanged("TotalTimeThisRewardPeriod");
					this.OnTotalTimeThisRewardPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTimeEver", DbType="Decimal(18,4) NOT NULL")]
		public decimal TotalTimeEver
		{
			get
			{
				return this._TotalTimeEver;
			}
			set
			{
				if ((this._TotalTimeEver != value))
				{
					this.OnTotalTimeEverChanging(value);
					this.SendPropertyChanging();
					this._TotalTimeEver = value;
					this.SendPropertyChanged("TotalTimeEver");
					this.OnTotalTimeEverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPerHour", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> PointsPerHour
		{
			get
			{
				return this._PointsPerHour;
			}
			set
			{
				if ((this._PointsPerHour != value))
				{
					this.OnPointsPerHourChanging(value);
					this.SendPropertyChanging();
					this._PointsPerHour = value;
					this.SendPropertyChanged("PointsPerHour");
					this.OnPointsPerHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectedPointsPerHour", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ProjectedPointsPerHour
		{
			get
			{
				return this._ProjectedPointsPerHour;
			}
			set
			{
				if ((this._ProjectedPointsPerHour != value))
				{
					this.OnProjectedPointsPerHourChanging(value);
					this.SendPropertyChanging();
					this._ProjectedPointsPerHour = value;
					this.SendPropertyChanged("ProjectedPointsPerHour");
					this.OnProjectedPointsPerHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuaranteedPaymentsEarnedThisRewardPeriod", DbType="Decimal(18,2) NOT NULL")]
		public decimal GuaranteedPaymentsEarnedThisRewardPeriod
		{
			get
			{
				return this._GuaranteedPaymentsEarnedThisRewardPeriod;
			}
			set
			{
				if ((this._GuaranteedPaymentsEarnedThisRewardPeriod != value))
				{
					this.OnGuaranteedPaymentsEarnedThisRewardPeriodChanging(value);
					this.SendPropertyChanging();
					this._GuaranteedPaymentsEarnedThisRewardPeriod = value;
					this.SendPropertyChanged("GuaranteedPaymentsEarnedThisRewardPeriod");
					this.OnGuaranteedPaymentsEarnedThisRewardPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingConditionalGuaranteeApplication", DbType="NVarChar(50)")]
		public string PendingConditionalGuaranteeApplication
		{
			get
			{
				return this._PendingConditionalGuaranteeApplication;
			}
			set
			{
				if ((this._PendingConditionalGuaranteeApplication != value))
				{
					this.OnPendingConditionalGuaranteeApplicationChanging(value);
					this.SendPropertyChanging();
					this._PendingConditionalGuaranteeApplication = value;
					this.SendPropertyChanged("PendingConditionalGuaranteeApplication");
					this.OnPendingConditionalGuaranteeApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingConditionalGuaranteePayment", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PendingConditionalGuaranteePayment
		{
			get
			{
				return this._PendingConditionalGuaranteePayment;
			}
			set
			{
				if ((this._PendingConditionalGuaranteePayment != value))
				{
					this.OnPendingConditionalGuaranteePaymentChanging(value);
					this.SendPropertyChanging();
					this._PendingConditionalGuaranteePayment = value;
					this.SendPropertyChanged("PendingConditionalGuaranteePayment");
					this.OnPendingConditionalGuaranteePaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingConditionalGuaranteeTotalHoursAtStart", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> PendingConditionalGuaranteeTotalHoursAtStart
		{
			get
			{
				return this._PendingConditionalGuaranteeTotalHoursAtStart;
			}
			set
			{
				if ((this._PendingConditionalGuaranteeTotalHoursAtStart != value))
				{
					this.OnPendingConditionalGuaranteeTotalHoursAtStartChanging(value);
					this.SendPropertyChanging();
					this._PendingConditionalGuaranteeTotalHoursAtStart = value;
					this.SendPropertyChanged("PendingConditionalGuaranteeTotalHoursAtStart");
					this.OnPendingConditionalGuaranteeTotalHoursAtStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingConditionalGuaranteeTotalHoursNeeded", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> PendingConditionalGuaranteeTotalHoursNeeded
		{
			get
			{
				return this._PendingConditionalGuaranteeTotalHoursNeeded;
			}
			set
			{
				if ((this._PendingConditionalGuaranteeTotalHoursNeeded != value))
				{
					this.OnPendingConditionalGuaranteeTotalHoursNeededChanging(value);
					this.SendPropertyChanging();
					this._PendingConditionalGuaranteeTotalHoursNeeded = value;
					this.SendPropertyChanged("PendingConditionalGuaranteeTotalHoursNeeded");
					this.OnPendingConditionalGuaranteeTotalHoursNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingConditionalGuaranteePaymentAlreadyMade", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PendingConditionalGuaranteePaymentAlreadyMade
		{
			get
			{
				return this._PendingConditionalGuaranteePaymentAlreadyMade;
			}
			set
			{
				if ((this._PendingConditionalGuaranteePaymentAlreadyMade != value))
				{
					this.OnPendingConditionalGuaranteePaymentAlreadyMadeChanging(value);
					this.SendPropertyChanging();
					this._PendingConditionalGuaranteePaymentAlreadyMade = value;
					this.SendPropertyChanged("PendingConditionalGuaranteePaymentAlreadyMade");
					this.OnPendingConditionalGuaranteePaymentAlreadyMadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestConditionalGuaranteeWhenAvailableTimeRequestMade", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestConditionalGuaranteeWhenAvailableTimeRequestMade
		{
			get
			{
				return this._RequestConditionalGuaranteeWhenAvailableTimeRequestMade;
			}
			set
			{
				if ((this._RequestConditionalGuaranteeWhenAvailableTimeRequestMade != value))
				{
					this.OnRequestConditionalGuaranteeWhenAvailableTimeRequestMadeChanging(value);
					this.SendPropertyChanging();
					this._RequestConditionalGuaranteeWhenAvailableTimeRequestMade = value;
					this.SendPropertyChanged("RequestConditionalGuaranteeWhenAvailableTimeRequestMade");
					this.OnRequestConditionalGuaranteeWhenAvailableTimeRequestMadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPointsOrPendingPointsLongTermUnweighted", DbType="Decimal(18,4) NOT NULL")]
		public decimal TotalPointsOrPendingPointsLongTermUnweighted
		{
			get
			{
				return this._TotalPointsOrPendingPointsLongTermUnweighted;
			}
			set
			{
				if ((this._TotalPointsOrPendingPointsLongTermUnweighted != value))
				{
					this.OnTotalPointsOrPendingPointsLongTermUnweightedChanging(value);
					this.SendPropertyChanging();
					this._TotalPointsOrPendingPointsLongTermUnweighted = value;
					this.SendPropertyChanged("TotalPointsOrPendingPointsLongTermUnweighted");
					this.OnTotalPointsOrPendingPointsLongTermUnweightedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPerRatingLongTerm", DbType="Decimal(18,4) NOT NULL")]
		public decimal PointsPerRatingLongTerm
		{
			get
			{
				return this._PointsPerRatingLongTerm;
			}
			set
			{
				if ((this._PointsPerRatingLongTerm != value))
				{
					this.OnPointsPerRatingLongTermChanging(value);
					this.SendPropertyChanging();
					this._PointsPerRatingLongTerm = value;
					this.SendPropertyChanged("PointsPerRatingLongTerm");
					this.OnPointsPerRatingLongTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPumpingProportionAvg_Numer", DbType="Real NOT NULL")]
		public float PointsPumpingProportionAvg_Numer
		{
			get
			{
				return this._PointsPumpingProportionAvg_Numer;
			}
			set
			{
				if ((this._PointsPumpingProportionAvg_Numer != value))
				{
					this.OnPointsPumpingProportionAvg_NumerChanging(value);
					this.SendPropertyChanging();
					this._PointsPumpingProportionAvg_Numer = value;
					this.SendPropertyChanged("PointsPumpingProportionAvg_Numer");
					this.OnPointsPumpingProportionAvg_NumerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPumpingProportionAvg_Denom", DbType="Real NOT NULL")]
		public float PointsPumpingProportionAvg_Denom
		{
			get
			{
				return this._PointsPumpingProportionAvg_Denom;
			}
			set
			{
				if ((this._PointsPumpingProportionAvg_Denom != value))
				{
					this.OnPointsPumpingProportionAvg_DenomChanging(value);
					this.SendPropertyChanging();
					this._PointsPumpingProportionAvg_Denom = value;
					this.SendPropertyChanged("PointsPumpingProportionAvg_Denom");
					this.OnPointsPumpingProportionAvg_DenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPumpingProportionAvg", DbType="Real NOT NULL")]
		public float PointsPumpingProportionAvg
		{
			get
			{
				return this._PointsPumpingProportionAvg;
			}
			set
			{
				if ((this._PointsPumpingProportionAvg != value))
				{
					this.OnPointsPumpingProportionAvgChanging(value);
					this.SendPropertyChanging();
					this._PointsPumpingProportionAvg = value;
					this.SendPropertyChanged("PointsPumpingProportionAvg");
					this.OnPointsPumpingProportionAvgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumUserRatings", DbType="Int NOT NULL")]
		public int NumUserRatings
		{
			get
			{
				return this._NumUserRatings;
			}
			set
			{
				if ((this._NumUserRatings != value))
				{
					this.OnNumUserRatingsChanging(value);
					this.SendPropertyChanging();
					this._NumUserRatings = value;
					this.SendPropertyChanged("NumUserRatings");
					this.OnNumUserRatingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_PointsTotal", Storage="_PointsManager", ThisKey="PointsManagerID", OtherKey="PointsManagerID", IsForeignKey=true)]
		public PointsManager PointsManager
		{
			get
			{
				return this._PointsManager.Entity;
			}
			set
			{
				PointsManager previousValue = this._PointsManager.Entity;
				if (((previousValue != value) 
							|| (this._PointsManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PointsManager.Entity = null;
						previousValue.PointsTotals.Remove(this);
					}
					this._PointsManager.Entity = value;
					if ((value != null))
					{
						value.PointsTotals.Add(this);
						this._PointsManagerID = value.PointsManagerID;
					}
					else
					{
						this._PointsManagerID = default(int);
					}
					this.SendPropertyChanged("PointsManager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PointsTotal", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PointsTotals.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PointsTotals.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrustTrackers")]
	public partial class TrustTracker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TrustTrackerID;
		
		private int _TrustTrackerUnitID;
		
		private int _UserID;
		
		private double _OverallTrustLevel;
		
		private double _OverallTrustLevelAtLastReview;
		
		private double _DeltaOverallTrustLevel;
		
		private double _SkepticalTrustLevel;
		
		private double _SumUserInteractionWeights;
		
		private double _EgalitarianTrustLevel;
		
		private double _Egalitarian_Num;
		
		private double _Egalitarian_Denom;
		
		private System.Nullable<double> _EgalitarianTrustLevelOverride;
		
		private bool _MustUpdateUserInteractionEgalitarianTrustLevel;
		
		private EntitySet<TrustTrackerStat> _TrustTrackerStats;
		
		private EntityRef<TrustTrackerUnit> _TrustTrackerUnit;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrustTrackerIDChanging(int value);
    partial void OnTrustTrackerIDChanged();
    partial void OnTrustTrackerUnitIDChanging(int value);
    partial void OnTrustTrackerUnitIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnOverallTrustLevelChanging(double value);
    partial void OnOverallTrustLevelChanged();
    partial void OnOverallTrustLevelAtLastReviewChanging(double value);
    partial void OnOverallTrustLevelAtLastReviewChanged();
    partial void OnDeltaOverallTrustLevelChanging(double value);
    partial void OnDeltaOverallTrustLevelChanged();
    partial void OnSkepticalTrustLevelChanging(double value);
    partial void OnSkepticalTrustLevelChanged();
    partial void OnSumUserInteractionWeightsChanging(double value);
    partial void OnSumUserInteractionWeightsChanged();
    partial void OnEgalitarianTrustLevelChanging(double value);
    partial void OnEgalitarianTrustLevelChanged();
    partial void OnEgalitarian_NumChanging(double value);
    partial void OnEgalitarian_NumChanged();
    partial void OnEgalitarian_DenomChanging(double value);
    partial void OnEgalitarian_DenomChanged();
    partial void OnEgalitarianTrustLevelOverrideChanging(System.Nullable<double> value);
    partial void OnEgalitarianTrustLevelOverrideChanged();
    partial void OnMustUpdateUserInteractionEgalitarianTrustLevelChanging(bool value);
    partial void OnMustUpdateUserInteractionEgalitarianTrustLevelChanged();
    #endregion
		
		public TrustTracker()
		{
			this._TrustTrackerStats = new EntitySet<TrustTrackerStat>(new Action<TrustTrackerStat>(this.attach_TrustTrackerStats), new Action<TrustTrackerStat>(this.detach_TrustTrackerStats));
			this._TrustTrackerUnit = default(EntityRef<TrustTrackerUnit>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustTrackerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TrustTrackerID
		{
			get
			{
				return this._TrustTrackerID;
			}
			set
			{
				if ((this._TrustTrackerID != value))
				{
					this.OnTrustTrackerIDChanging(value);
					this.SendPropertyChanging();
					this._TrustTrackerID = value;
					this.SendPropertyChanged("TrustTrackerID");
					this.OnTrustTrackerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustTrackerUnitID", DbType="Int NOT NULL")]
		public int TrustTrackerUnitID
		{
			get
			{
				return this._TrustTrackerUnitID;
			}
			set
			{
				if ((this._TrustTrackerUnitID != value))
				{
					if (this._TrustTrackerUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrustTrackerUnitIDChanging(value);
					this.SendPropertyChanging();
					this._TrustTrackerUnitID = value;
					this.SendPropertyChanged("TrustTrackerUnitID");
					this.OnTrustTrackerUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverallTrustLevel", DbType="Float NOT NULL")]
		public double OverallTrustLevel
		{
			get
			{
				return this._OverallTrustLevel;
			}
			set
			{
				if ((this._OverallTrustLevel != value))
				{
					this.OnOverallTrustLevelChanging(value);
					this.SendPropertyChanging();
					this._OverallTrustLevel = value;
					this.SendPropertyChanged("OverallTrustLevel");
					this.OnOverallTrustLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverallTrustLevelAtLastReview", DbType="Float NOT NULL")]
		public double OverallTrustLevelAtLastReview
		{
			get
			{
				return this._OverallTrustLevelAtLastReview;
			}
			set
			{
				if ((this._OverallTrustLevelAtLastReview != value))
				{
					this.OnOverallTrustLevelAtLastReviewChanging(value);
					this.SendPropertyChanging();
					this._OverallTrustLevelAtLastReview = value;
					this.SendPropertyChanged("OverallTrustLevelAtLastReview");
					this.OnOverallTrustLevelAtLastReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeltaOverallTrustLevel", DbType="Float NOT NULL")]
		public double DeltaOverallTrustLevel
		{
			get
			{
				return this._DeltaOverallTrustLevel;
			}
			set
			{
				if ((this._DeltaOverallTrustLevel != value))
				{
					this.OnDeltaOverallTrustLevelChanging(value);
					this.SendPropertyChanging();
					this._DeltaOverallTrustLevel = value;
					this.SendPropertyChanged("DeltaOverallTrustLevel");
					this.OnDeltaOverallTrustLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkepticalTrustLevel", DbType="Float NOT NULL")]
		public double SkepticalTrustLevel
		{
			get
			{
				return this._SkepticalTrustLevel;
			}
			set
			{
				if ((this._SkepticalTrustLevel != value))
				{
					this.OnSkepticalTrustLevelChanging(value);
					this.SendPropertyChanging();
					this._SkepticalTrustLevel = value;
					this.SendPropertyChanged("SkepticalTrustLevel");
					this.OnSkepticalTrustLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumUserInteractionWeights", DbType="Float NOT NULL")]
		public double SumUserInteractionWeights
		{
			get
			{
				return this._SumUserInteractionWeights;
			}
			set
			{
				if ((this._SumUserInteractionWeights != value))
				{
					this.OnSumUserInteractionWeightsChanging(value);
					this.SendPropertyChanging();
					this._SumUserInteractionWeights = value;
					this.SendPropertyChanged("SumUserInteractionWeights");
					this.OnSumUserInteractionWeightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgalitarianTrustLevel", DbType="Float NOT NULL")]
		public double EgalitarianTrustLevel
		{
			get
			{
				return this._EgalitarianTrustLevel;
			}
			set
			{
				if ((this._EgalitarianTrustLevel != value))
				{
					this.OnEgalitarianTrustLevelChanging(value);
					this.SendPropertyChanging();
					this._EgalitarianTrustLevel = value;
					this.SendPropertyChanged("EgalitarianTrustLevel");
					this.OnEgalitarianTrustLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Egalitarian_Num", DbType="Float NOT NULL")]
		public double Egalitarian_Num
		{
			get
			{
				return this._Egalitarian_Num;
			}
			set
			{
				if ((this._Egalitarian_Num != value))
				{
					this.OnEgalitarian_NumChanging(value);
					this.SendPropertyChanging();
					this._Egalitarian_Num = value;
					this.SendPropertyChanged("Egalitarian_Num");
					this.OnEgalitarian_NumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Egalitarian_Denom", DbType="Float NOT NULL")]
		public double Egalitarian_Denom
		{
			get
			{
				return this._Egalitarian_Denom;
			}
			set
			{
				if ((this._Egalitarian_Denom != value))
				{
					this.OnEgalitarian_DenomChanging(value);
					this.SendPropertyChanging();
					this._Egalitarian_Denom = value;
					this.SendPropertyChanged("Egalitarian_Denom");
					this.OnEgalitarian_DenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgalitarianTrustLevelOverride", DbType="Float")]
		public System.Nullable<double> EgalitarianTrustLevelOverride
		{
			get
			{
				return this._EgalitarianTrustLevelOverride;
			}
			set
			{
				if ((this._EgalitarianTrustLevelOverride != value))
				{
					this.OnEgalitarianTrustLevelOverrideChanging(value);
					this.SendPropertyChanging();
					this._EgalitarianTrustLevelOverride = value;
					this.SendPropertyChanged("EgalitarianTrustLevelOverride");
					this.OnEgalitarianTrustLevelOverrideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MustUpdateUserInteractionEgalitarianTrustLevel", DbType="Bit NOT NULL")]
		public bool MustUpdateUserInteractionEgalitarianTrustLevel
		{
			get
			{
				return this._MustUpdateUserInteractionEgalitarianTrustLevel;
			}
			set
			{
				if ((this._MustUpdateUserInteractionEgalitarianTrustLevel != value))
				{
					this.OnMustUpdateUserInteractionEgalitarianTrustLevelChanging(value);
					this.SendPropertyChanging();
					this._MustUpdateUserInteractionEgalitarianTrustLevel = value;
					this.SendPropertyChanged("MustUpdateUserInteractionEgalitarianTrustLevel");
					this.OnMustUpdateUserInteractionEgalitarianTrustLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrustTracker_TrustTrackerStat", Storage="_TrustTrackerStats", ThisKey="TrustTrackerID", OtherKey="TrustTrackerID")]
		public EntitySet<TrustTrackerStat> TrustTrackerStats
		{
			get
			{
				return this._TrustTrackerStats;
			}
			set
			{
				this._TrustTrackerStats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrustTrackerUnit_TrustTracker", Storage="_TrustTrackerUnit", ThisKey="TrustTrackerUnitID", OtherKey="TrustTrackerUnitID", IsForeignKey=true)]
		public TrustTrackerUnit TrustTrackerUnit
		{
			get
			{
				return this._TrustTrackerUnit.Entity;
			}
			set
			{
				TrustTrackerUnit previousValue = this._TrustTrackerUnit.Entity;
				if (((previousValue != value) 
							|| (this._TrustTrackerUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrustTrackerUnit.Entity = null;
						previousValue.TrustTrackers.Remove(this);
					}
					this._TrustTrackerUnit.Entity = value;
					if ((value != null))
					{
						value.TrustTrackers.Add(this);
						this._TrustTrackerUnitID = value.TrustTrackerUnitID;
					}
					else
					{
						this._TrustTrackerUnitID = default(int);
					}
					this.SendPropertyChanged("TrustTrackerUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TrustTracker", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TrustTrackers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TrustTrackers.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrustTrackerStats(TrustTrackerStat entity)
		{
			this.SendPropertyChanging();
			entity.TrustTracker = this;
		}
		
		private void detach_TrustTrackerStats(TrustTrackerStat entity)
		{
			this.SendPropertyChanging();
			entity.TrustTracker = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserInteractionStats")]
	public partial class UserInteractionStat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserInteractionStatID;
		
		private int _UserInteractionID;
		
		private int _TrustTrackerStatID;
		
		private short _StatNum;
		
		private double _SumAdjustPctTimesWeight;
		
		private double _SumWeights;
		
		private double _AvgAdjustmentPctWeighted;
		
		private EntityRef<TrustTrackerStat> _TrustTrackerStat;
		
		private EntityRef<UserInteraction> _UserInteraction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserInteractionStatIDChanging(int value);
    partial void OnUserInteractionStatIDChanged();
    partial void OnUserInteractionIDChanging(int value);
    partial void OnUserInteractionIDChanged();
    partial void OnTrustTrackerStatIDChanging(int value);
    partial void OnTrustTrackerStatIDChanged();
    partial void OnStatNumChanging(short value);
    partial void OnStatNumChanged();
    partial void OnSumAdjustPctTimesWeightChanging(double value);
    partial void OnSumAdjustPctTimesWeightChanged();
    partial void OnSumWeightsChanging(double value);
    partial void OnSumWeightsChanged();
    partial void OnAvgAdjustmentPctWeightedChanging(double value);
    partial void OnAvgAdjustmentPctWeightedChanged();
    #endregion
		
		public UserInteractionStat()
		{
			this._TrustTrackerStat = default(EntityRef<TrustTrackerStat>);
			this._UserInteraction = default(EntityRef<UserInteraction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserInteractionStatID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserInteractionStatID
		{
			get
			{
				return this._UserInteractionStatID;
			}
			set
			{
				if ((this._UserInteractionStatID != value))
				{
					this.OnUserInteractionStatIDChanging(value);
					this.SendPropertyChanging();
					this._UserInteractionStatID = value;
					this.SendPropertyChanged("UserInteractionStatID");
					this.OnUserInteractionStatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserInteractionID", DbType="Int NOT NULL")]
		public int UserInteractionID
		{
			get
			{
				return this._UserInteractionID;
			}
			set
			{
				if ((this._UserInteractionID != value))
				{
					if (this._UserInteraction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserInteractionIDChanging(value);
					this.SendPropertyChanging();
					this._UserInteractionID = value;
					this.SendPropertyChanged("UserInteractionID");
					this.OnUserInteractionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustTrackerStatID", DbType="Int NOT NULL")]
		public int TrustTrackerStatID
		{
			get
			{
				return this._TrustTrackerStatID;
			}
			set
			{
				if ((this._TrustTrackerStatID != value))
				{
					if (this._TrustTrackerStat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrustTrackerStatIDChanging(value);
					this.SendPropertyChanging();
					this._TrustTrackerStatID = value;
					this.SendPropertyChanged("TrustTrackerStatID");
					this.OnTrustTrackerStatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatNum", DbType="SmallInt NOT NULL")]
		public short StatNum
		{
			get
			{
				return this._StatNum;
			}
			set
			{
				if ((this._StatNum != value))
				{
					this.OnStatNumChanging(value);
					this.SendPropertyChanging();
					this._StatNum = value;
					this.SendPropertyChanged("StatNum");
					this.OnStatNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumAdjustPctTimesWeight", DbType="Float NOT NULL")]
		public double SumAdjustPctTimesWeight
		{
			get
			{
				return this._SumAdjustPctTimesWeight;
			}
			set
			{
				if ((this._SumAdjustPctTimesWeight != value))
				{
					this.OnSumAdjustPctTimesWeightChanging(value);
					this.SendPropertyChanging();
					this._SumAdjustPctTimesWeight = value;
					this.SendPropertyChanged("SumAdjustPctTimesWeight");
					this.OnSumAdjustPctTimesWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumWeights", DbType="Float NOT NULL")]
		public double SumWeights
		{
			get
			{
				return this._SumWeights;
			}
			set
			{
				if ((this._SumWeights != value))
				{
					this.OnSumWeightsChanging(value);
					this.SendPropertyChanging();
					this._SumWeights = value;
					this.SendPropertyChanged("SumWeights");
					this.OnSumWeightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgAdjustmentPctWeighted", DbType="Float NOT NULL")]
		public double AvgAdjustmentPctWeighted
		{
			get
			{
				return this._AvgAdjustmentPctWeighted;
			}
			set
			{
				if ((this._AvgAdjustmentPctWeighted != value))
				{
					this.OnAvgAdjustmentPctWeightedChanging(value);
					this.SendPropertyChanging();
					this._AvgAdjustmentPctWeighted = value;
					this.SendPropertyChanged("AvgAdjustmentPctWeighted");
					this.OnAvgAdjustmentPctWeightedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrustTrackerStat_UserInteractionStat", Storage="_TrustTrackerStat", ThisKey="TrustTrackerStatID", OtherKey="TrustTrackerStatID", IsForeignKey=true)]
		public TrustTrackerStat TrustTrackerStat
		{
			get
			{
				return this._TrustTrackerStat.Entity;
			}
			set
			{
				TrustTrackerStat previousValue = this._TrustTrackerStat.Entity;
				if (((previousValue != value) 
							|| (this._TrustTrackerStat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrustTrackerStat.Entity = null;
						previousValue.UserInteractionStats.Remove(this);
					}
					this._TrustTrackerStat.Entity = value;
					if ((value != null))
					{
						value.UserInteractionStats.Add(this);
						this._TrustTrackerStatID = value.TrustTrackerStatID;
					}
					else
					{
						this._TrustTrackerStatID = default(int);
					}
					this.SendPropertyChanged("TrustTrackerStat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInteraction_UserInteractionStat", Storage="_UserInteraction", ThisKey="UserInteractionID", OtherKey="UserInteractionID", IsForeignKey=true)]
		public UserInteraction UserInteraction
		{
			get
			{
				return this._UserInteraction.Entity;
			}
			set
			{
				UserInteraction previousValue = this._UserInteraction.Entity;
				if (((previousValue != value) 
							|| (this._UserInteraction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserInteraction.Entity = null;
						previousValue.UserInteractionStats.Remove(this);
					}
					this._UserInteraction.Entity = value;
					if ((value != null))
					{
						value.UserInteractionStats.Add(this);
						this._UserInteractionID = value.UserInteractionID;
					}
					else
					{
						this._UserInteractionID = default(int);
					}
					this.SendPropertyChanged("UserInteraction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrustTrackerStats")]
	public partial class TrustTrackerStat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TrustTrackerStatID;
		
		private int _TrustTrackerID;
		
		private short _StatNum;
		
		private double _TrustValue;
		
		private double _Trust_Numer;
		
		private double _Trust_Denom;
		
		private double _SumUserInteractionStatWeights;
		
		private EntitySet<UserInteractionStat> _UserInteractionStats;
		
		private EntityRef<TrustTracker> _TrustTracker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrustTrackerStatIDChanging(int value);
    partial void OnTrustTrackerStatIDChanged();
    partial void OnTrustTrackerIDChanging(int value);
    partial void OnTrustTrackerIDChanged();
    partial void OnStatNumChanging(short value);
    partial void OnStatNumChanged();
    partial void OnTrustValueChanging(double value);
    partial void OnTrustValueChanged();
    partial void OnTrust_NumerChanging(double value);
    partial void OnTrust_NumerChanged();
    partial void OnTrust_DenomChanging(double value);
    partial void OnTrust_DenomChanged();
    partial void OnSumUserInteractionStatWeightsChanging(double value);
    partial void OnSumUserInteractionStatWeightsChanged();
    #endregion
		
		public TrustTrackerStat()
		{
			this._UserInteractionStats = new EntitySet<UserInteractionStat>(new Action<UserInteractionStat>(this.attach_UserInteractionStats), new Action<UserInteractionStat>(this.detach_UserInteractionStats));
			this._TrustTracker = default(EntityRef<TrustTracker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustTrackerStatID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TrustTrackerStatID
		{
			get
			{
				return this._TrustTrackerStatID;
			}
			set
			{
				if ((this._TrustTrackerStatID != value))
				{
					this.OnTrustTrackerStatIDChanging(value);
					this.SendPropertyChanging();
					this._TrustTrackerStatID = value;
					this.SendPropertyChanged("TrustTrackerStatID");
					this.OnTrustTrackerStatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustTrackerID", DbType="Int NOT NULL")]
		public int TrustTrackerID
		{
			get
			{
				return this._TrustTrackerID;
			}
			set
			{
				if ((this._TrustTrackerID != value))
				{
					if (this._TrustTracker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrustTrackerIDChanging(value);
					this.SendPropertyChanging();
					this._TrustTrackerID = value;
					this.SendPropertyChanged("TrustTrackerID");
					this.OnTrustTrackerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatNum", DbType="SmallInt NOT NULL")]
		public short StatNum
		{
			get
			{
				return this._StatNum;
			}
			set
			{
				if ((this._StatNum != value))
				{
					this.OnStatNumChanging(value);
					this.SendPropertyChanging();
					this._StatNum = value;
					this.SendPropertyChanged("StatNum");
					this.OnStatNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustValue", DbType="Float NOT NULL")]
		public double TrustValue
		{
			get
			{
				return this._TrustValue;
			}
			set
			{
				if ((this._TrustValue != value))
				{
					this.OnTrustValueChanging(value);
					this.SendPropertyChanging();
					this._TrustValue = value;
					this.SendPropertyChanged("TrustValue");
					this.OnTrustValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trust_Numer", DbType="Float NOT NULL")]
		public double Trust_Numer
		{
			get
			{
				return this._Trust_Numer;
			}
			set
			{
				if ((this._Trust_Numer != value))
				{
					this.OnTrust_NumerChanging(value);
					this.SendPropertyChanging();
					this._Trust_Numer = value;
					this.SendPropertyChanged("Trust_Numer");
					this.OnTrust_NumerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trust_Denom", DbType="Float NOT NULL")]
		public double Trust_Denom
		{
			get
			{
				return this._Trust_Denom;
			}
			set
			{
				if ((this._Trust_Denom != value))
				{
					this.OnTrust_DenomChanging(value);
					this.SendPropertyChanging();
					this._Trust_Denom = value;
					this.SendPropertyChanged("Trust_Denom");
					this.OnTrust_DenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumUserInteractionStatWeights", DbType="Float NOT NULL")]
		public double SumUserInteractionStatWeights
		{
			get
			{
				return this._SumUserInteractionStatWeights;
			}
			set
			{
				if ((this._SumUserInteractionStatWeights != value))
				{
					this.OnSumUserInteractionStatWeightsChanging(value);
					this.SendPropertyChanging();
					this._SumUserInteractionStatWeights = value;
					this.SendPropertyChanged("SumUserInteractionStatWeights");
					this.OnSumUserInteractionStatWeightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrustTrackerStat_UserInteractionStat", Storage="_UserInteractionStats", ThisKey="TrustTrackerStatID", OtherKey="TrustTrackerStatID")]
		public EntitySet<UserInteractionStat> UserInteractionStats
		{
			get
			{
				return this._UserInteractionStats;
			}
			set
			{
				this._UserInteractionStats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrustTracker_TrustTrackerStat", Storage="_TrustTracker", ThisKey="TrustTrackerID", OtherKey="TrustTrackerID", IsForeignKey=true)]
		public TrustTracker TrustTracker
		{
			get
			{
				return this._TrustTracker.Entity;
			}
			set
			{
				TrustTracker previousValue = this._TrustTracker.Entity;
				if (((previousValue != value) 
							|| (this._TrustTracker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrustTracker.Entity = null;
						previousValue.TrustTrackerStats.Remove(this);
					}
					this._TrustTracker.Entity = value;
					if ((value != null))
					{
						value.TrustTrackerStats.Add(this);
						this._TrustTrackerID = value.TrustTrackerID;
					}
					else
					{
						this._TrustTrackerID = default(int);
					}
					this.SendPropertyChanged("TrustTracker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserInteractionStats(UserInteractionStat entity)
		{
			this.SendPropertyChanging();
			entity.TrustTrackerStat = this;
		}
		
		private void detach_UserInteractionStats(UserInteractionStat entity)
		{
			this.SendPropertyChanging();
			entity.TrustTrackerStat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserInteractions")]
	public partial class UserInteraction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserInteractionID;
		
		private int _TrustTrackerUnitID;
		
		private int _OrigRatingUserID;
		
		private int _LatestRatingUserID;
		
		private int _NumTransactions;
		
		private double _LatestUserEgalitarianTrust;
		
		private double _WeightInCalculatingTrustTotal;
		
		private System.Nullable<double> _LatestUserEgalitarianTrustAtLastWeightUpdate;
		
		private EntitySet<UserInteractionStat> _UserInteractionStats;
		
		private EntityRef<TrustTrackerUnit> _TrustTrackerUnit;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserInteractionIDChanging(int value);
    partial void OnUserInteractionIDChanged();
    partial void OnTrustTrackerUnitIDChanging(int value);
    partial void OnTrustTrackerUnitIDChanged();
    partial void OnOrigRatingUserIDChanging(int value);
    partial void OnOrigRatingUserIDChanged();
    partial void OnLatestRatingUserIDChanging(int value);
    partial void OnLatestRatingUserIDChanged();
    partial void OnNumTransactionsChanging(int value);
    partial void OnNumTransactionsChanged();
    partial void OnLatestUserEgalitarianTrustChanging(double value);
    partial void OnLatestUserEgalitarianTrustChanged();
    partial void OnWeightInCalculatingTrustTotalChanging(double value);
    partial void OnWeightInCalculatingTrustTotalChanged();
    partial void OnLatestUserEgalitarianTrustAtLastWeightUpdateChanging(System.Nullable<double> value);
    partial void OnLatestUserEgalitarianTrustAtLastWeightUpdateChanged();
    #endregion
		
		public UserInteraction()
		{
			this._UserInteractionStats = new EntitySet<UserInteractionStat>(new Action<UserInteractionStat>(this.attach_UserInteractionStats), new Action<UserInteractionStat>(this.detach_UserInteractionStats));
			this._TrustTrackerUnit = default(EntityRef<TrustTrackerUnit>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserInteractionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserInteractionID
		{
			get
			{
				return this._UserInteractionID;
			}
			set
			{
				if ((this._UserInteractionID != value))
				{
					this.OnUserInteractionIDChanging(value);
					this.SendPropertyChanging();
					this._UserInteractionID = value;
					this.SendPropertyChanged("UserInteractionID");
					this.OnUserInteractionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustTrackerUnitID", DbType="Int NOT NULL")]
		public int TrustTrackerUnitID
		{
			get
			{
				return this._TrustTrackerUnitID;
			}
			set
			{
				if ((this._TrustTrackerUnitID != value))
				{
					if (this._TrustTrackerUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrustTrackerUnitIDChanging(value);
					this.SendPropertyChanging();
					this._TrustTrackerUnitID = value;
					this.SendPropertyChanged("TrustTrackerUnitID");
					this.OnTrustTrackerUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrigRatingUserID", DbType="Int NOT NULL")]
		public int OrigRatingUserID
		{
			get
			{
				return this._OrigRatingUserID;
			}
			set
			{
				if ((this._OrigRatingUserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrigRatingUserIDChanging(value);
					this.SendPropertyChanging();
					this._OrigRatingUserID = value;
					this.SendPropertyChanged("OrigRatingUserID");
					this.OnOrigRatingUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatestRatingUserID", DbType="Int NOT NULL")]
		public int LatestRatingUserID
		{
			get
			{
				return this._LatestRatingUserID;
			}
			set
			{
				if ((this._LatestRatingUserID != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLatestRatingUserIDChanging(value);
					this.SendPropertyChanging();
					this._LatestRatingUserID = value;
					this.SendPropertyChanged("LatestRatingUserID");
					this.OnLatestRatingUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumTransactions", DbType="Int NOT NULL")]
		public int NumTransactions
		{
			get
			{
				return this._NumTransactions;
			}
			set
			{
				if ((this._NumTransactions != value))
				{
					this.OnNumTransactionsChanging(value);
					this.SendPropertyChanging();
					this._NumTransactions = value;
					this.SendPropertyChanged("NumTransactions");
					this.OnNumTransactionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatestUserEgalitarianTrust", DbType="Float NOT NULL")]
		public double LatestUserEgalitarianTrust
		{
			get
			{
				return this._LatestUserEgalitarianTrust;
			}
			set
			{
				if ((this._LatestUserEgalitarianTrust != value))
				{
					this.OnLatestUserEgalitarianTrustChanging(value);
					this.SendPropertyChanging();
					this._LatestUserEgalitarianTrust = value;
					this.SendPropertyChanged("LatestUserEgalitarianTrust");
					this.OnLatestUserEgalitarianTrustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightInCalculatingTrustTotal", DbType="Float NOT NULL")]
		public double WeightInCalculatingTrustTotal
		{
			get
			{
				return this._WeightInCalculatingTrustTotal;
			}
			set
			{
				if ((this._WeightInCalculatingTrustTotal != value))
				{
					this.OnWeightInCalculatingTrustTotalChanging(value);
					this.SendPropertyChanging();
					this._WeightInCalculatingTrustTotal = value;
					this.SendPropertyChanged("WeightInCalculatingTrustTotal");
					this.OnWeightInCalculatingTrustTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatestUserEgalitarianTrustAtLastWeightUpdate", DbType="Float")]
		public System.Nullable<double> LatestUserEgalitarianTrustAtLastWeightUpdate
		{
			get
			{
				return this._LatestUserEgalitarianTrustAtLastWeightUpdate;
			}
			set
			{
				if ((this._LatestUserEgalitarianTrustAtLastWeightUpdate != value))
				{
					this.OnLatestUserEgalitarianTrustAtLastWeightUpdateChanging(value);
					this.SendPropertyChanging();
					this._LatestUserEgalitarianTrustAtLastWeightUpdate = value;
					this.SendPropertyChanged("LatestUserEgalitarianTrustAtLastWeightUpdate");
					this.OnLatestUserEgalitarianTrustAtLastWeightUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInteraction_UserInteractionStat", Storage="_UserInteractionStats", ThisKey="UserInteractionID", OtherKey="UserInteractionID")]
		public EntitySet<UserInteractionStat> UserInteractionStats
		{
			get
			{
				return this._UserInteractionStats;
			}
			set
			{
				this._UserInteractionStats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrustTrackerUnit_UserInteraction", Storage="_TrustTrackerUnit", ThisKey="TrustTrackerUnitID", OtherKey="TrustTrackerUnitID", IsForeignKey=true)]
		public TrustTrackerUnit TrustTrackerUnit
		{
			get
			{
				return this._TrustTrackerUnit.Entity;
			}
			set
			{
				TrustTrackerUnit previousValue = this._TrustTrackerUnit.Entity;
				if (((previousValue != value) 
							|| (this._TrustTrackerUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrustTrackerUnit.Entity = null;
						previousValue.UserInteractions.Remove(this);
					}
					this._TrustTrackerUnit.Entity = value;
					if ((value != null))
					{
						value.UserInteractions.Add(this);
						this._TrustTrackerUnitID = value.TrustTrackerUnitID;
					}
					else
					{
						this._TrustTrackerUnitID = default(int);
					}
					this.SendPropertyChanged("TrustTrackerUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserInteraction", Storage="_User", ThisKey="OrigRatingUserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserInteractions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserInteractions.Add(this);
						this._OrigRatingUserID = value.UserID;
					}
					else
					{
						this._OrigRatingUserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserInteraction1", Storage="_User1", ThisKey="LatestRatingUserID", OtherKey="UserID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.UserInteractions1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.UserInteractions1.Add(this);
						this._LatestRatingUserID = value.UserID;
					}
					else
					{
						this._LatestRatingUserID = default(int);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserInteractionStats(UserInteractionStat entity)
		{
			this.SendPropertyChanging();
			entity.UserInteraction = this;
		}
		
		private void detach_UserInteractionStats(UserInteractionStat entity)
		{
			this.SendPropertyChanging();
			entity.UserInteraction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblRows")]
	public partial class TblRow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TblRowID;
		
		private int _TblID;
		
		private int _TblRowFieldDisplayID;
		
		private string _Name;
		
		private byte _Status;
		
		private bool _StatusRecentlyChanged;
		
		private int _CountHighStakesNow;
		
		private int _CountNonnullEntries;
		
		private decimal _CountUserPoints;
		
		private bool _ElevateOnMostNeedsRating;
		
		private bool _InitialFieldsDisplaySet;
		
		private bool _FastAccessInitialCopy;
		
		private bool _FastAccessDeleteThenRecopy;
		
		private bool _FastAccessUpdateFields;
		
		private bool _FastAccessUpdateRatings;
		
		private bool _FastAccessUpdateSpecified;
		
		private System.Data.Linq.Binary _FastAccessUpdated;
		
		private EntitySet<Field> _Fields;
		
		private EntitySet<OverrideCharacteristic> _OverrideCharacteristics;
		
		private EntitySet<RewardPendingPointsTracker> _RewardPendingPointsTrackers;
		
		private EntitySet<SearchWordTblRowName> _SearchWordTblRowNames;
		
		private EntitySet<TblRowStatusRecord> _TblRowStatusRecords;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<RatingGroup> _RatingGroups;
		
		private EntitySet<VolatilityTblRowTracker> _VolatilityTblRowTrackers;
		
		private EntityRef<TblRowFieldDisplay> _TblRowFieldDisplay;
		
		private EntityRef<Tbl> _Tbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTblRowIDChanging(int value);
    partial void OnTblRowIDChanged();
    partial void OnTblIDChanging(int value);
    partial void OnTblIDChanged();
    partial void OnTblRowFieldDisplayIDChanging(int value);
    partial void OnTblRowFieldDisplayIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnStatusRecentlyChangedChanging(bool value);
    partial void OnStatusRecentlyChangedChanged();
    partial void OnCountHighStakesNowChanging(int value);
    partial void OnCountHighStakesNowChanged();
    partial void OnCountNonnullEntriesChanging(int value);
    partial void OnCountNonnullEntriesChanged();
    partial void OnCountUserPointsChanging(decimal value);
    partial void OnCountUserPointsChanged();
    partial void OnElevateOnMostNeedsRatingChanging(bool value);
    partial void OnElevateOnMostNeedsRatingChanged();
    partial void OnInitialFieldsDisplaySetChanging(bool value);
    partial void OnInitialFieldsDisplaySetChanged();
    partial void OnFastAccessInitialCopyChanging(bool value);
    partial void OnFastAccessInitialCopyChanged();
    partial void OnFastAccessDeleteThenRecopyChanging(bool value);
    partial void OnFastAccessDeleteThenRecopyChanged();
    partial void OnFastAccessUpdateFieldsChanging(bool value);
    partial void OnFastAccessUpdateFieldsChanged();
    partial void OnFastAccessUpdateRatingsChanging(bool value);
    partial void OnFastAccessUpdateRatingsChanged();
    partial void OnFastAccessUpdateSpecifiedChanging(bool value);
    partial void OnFastAccessUpdateSpecifiedChanged();
    partial void OnFastAccessUpdatedChanging(System.Data.Linq.Binary value);
    partial void OnFastAccessUpdatedChanged();
    #endregion
		
		public TblRow()
		{
			this._Fields = new EntitySet<Field>(new Action<Field>(this.attach_Fields), new Action<Field>(this.detach_Fields));
			this._OverrideCharacteristics = new EntitySet<OverrideCharacteristic>(new Action<OverrideCharacteristic>(this.attach_OverrideCharacteristics), new Action<OverrideCharacteristic>(this.detach_OverrideCharacteristics));
			this._RewardPendingPointsTrackers = new EntitySet<RewardPendingPointsTracker>(new Action<RewardPendingPointsTracker>(this.attach_RewardPendingPointsTrackers), new Action<RewardPendingPointsTracker>(this.detach_RewardPendingPointsTrackers));
			this._SearchWordTblRowNames = new EntitySet<SearchWordTblRowName>(new Action<SearchWordTblRowName>(this.attach_SearchWordTblRowNames), new Action<SearchWordTblRowName>(this.detach_SearchWordTblRowNames));
			this._TblRowStatusRecords = new EntitySet<TblRowStatusRecord>(new Action<TblRowStatusRecord>(this.attach_TblRowStatusRecords), new Action<TblRowStatusRecord>(this.detach_TblRowStatusRecords));
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._RatingGroups = new EntitySet<RatingGroup>(new Action<RatingGroup>(this.attach_RatingGroups), new Action<RatingGroup>(this.detach_RatingGroups));
			this._VolatilityTblRowTrackers = new EntitySet<VolatilityTblRowTracker>(new Action<VolatilityTblRowTracker>(this.attach_VolatilityTblRowTrackers), new Action<VolatilityTblRowTracker>(this.detach_VolatilityTblRowTrackers));
			this._TblRowFieldDisplay = default(EntityRef<TblRowFieldDisplay>);
			this._Tbl = default(EntityRef<Tbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblRowID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TblRowID
		{
			get
			{
				return this._TblRowID;
			}
			set
			{
				if ((this._TblRowID != value))
				{
					this.OnTblRowIDChanging(value);
					this.SendPropertyChanging();
					this._TblRowID = value;
					this.SendPropertyChanged("TblRowID");
					this.OnTblRowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblID", DbType="Int NOT NULL")]
		public int TblID
		{
			get
			{
				return this._TblID;
			}
			set
			{
				if ((this._TblID != value))
				{
					if (this._Tbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblIDChanging(value);
					this.SendPropertyChanging();
					this._TblID = value;
					this.SendPropertyChanged("TblID");
					this.OnTblIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblRowFieldDisplayID", DbType="Int NOT NULL")]
		public int TblRowFieldDisplayID
		{
			get
			{
				return this._TblRowFieldDisplayID;
			}
			set
			{
				if ((this._TblRowFieldDisplayID != value))
				{
					if (this._TblRowFieldDisplay.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblRowFieldDisplayIDChanging(value);
					this.SendPropertyChanging();
					this._TblRowFieldDisplayID = value;
					this.SendPropertyChanged("TblRowFieldDisplayID");
					this.OnTblRowFieldDisplayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusRecentlyChanged", DbType="Bit NOT NULL")]
		public bool StatusRecentlyChanged
		{
			get
			{
				return this._StatusRecentlyChanged;
			}
			set
			{
				if ((this._StatusRecentlyChanged != value))
				{
					this.OnStatusRecentlyChangedChanging(value);
					this.SendPropertyChanging();
					this._StatusRecentlyChanged = value;
					this.SendPropertyChanged("StatusRecentlyChanged");
					this.OnStatusRecentlyChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountHighStakesNow", DbType="Int NOT NULL")]
		public int CountHighStakesNow
		{
			get
			{
				return this._CountHighStakesNow;
			}
			set
			{
				if ((this._CountHighStakesNow != value))
				{
					this.OnCountHighStakesNowChanging(value);
					this.SendPropertyChanging();
					this._CountHighStakesNow = value;
					this.SendPropertyChanged("CountHighStakesNow");
					this.OnCountHighStakesNowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountNonnullEntries", DbType="Int NOT NULL")]
		public int CountNonnullEntries
		{
			get
			{
				return this._CountNonnullEntries;
			}
			set
			{
				if ((this._CountNonnullEntries != value))
				{
					this.OnCountNonnullEntriesChanging(value);
					this.SendPropertyChanging();
					this._CountNonnullEntries = value;
					this.SendPropertyChanged("CountNonnullEntries");
					this.OnCountNonnullEntriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountUserPoints", DbType="Decimal(18,4) NOT NULL")]
		public decimal CountUserPoints
		{
			get
			{
				return this._CountUserPoints;
			}
			set
			{
				if ((this._CountUserPoints != value))
				{
					this.OnCountUserPointsChanging(value);
					this.SendPropertyChanging();
					this._CountUserPoints = value;
					this.SendPropertyChanged("CountUserPoints");
					this.OnCountUserPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElevateOnMostNeedsRating", DbType="Bit NOT NULL")]
		public bool ElevateOnMostNeedsRating
		{
			get
			{
				return this._ElevateOnMostNeedsRating;
			}
			set
			{
				if ((this._ElevateOnMostNeedsRating != value))
				{
					this.OnElevateOnMostNeedsRatingChanging(value);
					this.SendPropertyChanging();
					this._ElevateOnMostNeedsRating = value;
					this.SendPropertyChanged("ElevateOnMostNeedsRating");
					this.OnElevateOnMostNeedsRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialFieldsDisplaySet", DbType="Bit NOT NULL")]
		public bool InitialFieldsDisplaySet
		{
			get
			{
				return this._InitialFieldsDisplaySet;
			}
			set
			{
				if ((this._InitialFieldsDisplaySet != value))
				{
					this.OnInitialFieldsDisplaySetChanging(value);
					this.SendPropertyChanging();
					this._InitialFieldsDisplaySet = value;
					this.SendPropertyChanged("InitialFieldsDisplaySet");
					this.OnInitialFieldsDisplaySetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FastAccessInitialCopy", DbType="Bit NOT NULL")]
		public bool FastAccessInitialCopy
		{
			get
			{
				return this._FastAccessInitialCopy;
			}
			set
			{
				if ((this._FastAccessInitialCopy != value))
				{
					this.OnFastAccessInitialCopyChanging(value);
					this.SendPropertyChanging();
					this._FastAccessInitialCopy = value;
					this.SendPropertyChanged("FastAccessInitialCopy");
					this.OnFastAccessInitialCopyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FastAccessDeleteThenRecopy", DbType="Bit NOT NULL")]
		public bool FastAccessDeleteThenRecopy
		{
			get
			{
				return this._FastAccessDeleteThenRecopy;
			}
			set
			{
				if ((this._FastAccessDeleteThenRecopy != value))
				{
					this.OnFastAccessDeleteThenRecopyChanging(value);
					this.SendPropertyChanging();
					this._FastAccessDeleteThenRecopy = value;
					this.SendPropertyChanged("FastAccessDeleteThenRecopy");
					this.OnFastAccessDeleteThenRecopyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FastAccessUpdateFields", DbType="Bit NOT NULL")]
		public bool FastAccessUpdateFields
		{
			get
			{
				return this._FastAccessUpdateFields;
			}
			set
			{
				if ((this._FastAccessUpdateFields != value))
				{
					this.OnFastAccessUpdateFieldsChanging(value);
					this.SendPropertyChanging();
					this._FastAccessUpdateFields = value;
					this.SendPropertyChanged("FastAccessUpdateFields");
					this.OnFastAccessUpdateFieldsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FastAccessUpdateRatings", DbType="Bit NOT NULL")]
		public bool FastAccessUpdateRatings
		{
			get
			{
				return this._FastAccessUpdateRatings;
			}
			set
			{
				if ((this._FastAccessUpdateRatings != value))
				{
					this.OnFastAccessUpdateRatingsChanging(value);
					this.SendPropertyChanging();
					this._FastAccessUpdateRatings = value;
					this.SendPropertyChanged("FastAccessUpdateRatings");
					this.OnFastAccessUpdateRatingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FastAccessUpdateSpecified", DbType="Bit NOT NULL")]
		public bool FastAccessUpdateSpecified
		{
			get
			{
				return this._FastAccessUpdateSpecified;
			}
			set
			{
				if ((this._FastAccessUpdateSpecified != value))
				{
					this.OnFastAccessUpdateSpecifiedChanging(value);
					this.SendPropertyChanging();
					this._FastAccessUpdateSpecified = value;
					this.SendPropertyChanged("FastAccessUpdateSpecified");
					this.OnFastAccessUpdateSpecifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FastAccessUpdated", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary FastAccessUpdated
		{
			get
			{
				return this._FastAccessUpdated;
			}
			set
			{
				if ((this._FastAccessUpdated != value))
				{
					this.OnFastAccessUpdatedChanging(value);
					this.SendPropertyChanging();
					this._FastAccessUpdated = value;
					this.SendPropertyChanged("FastAccessUpdated");
					this.OnFastAccessUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblRow_Field", Storage="_Fields", ThisKey="TblRowID", OtherKey="TblRowID")]
		public EntitySet<Field> Fields
		{
			get
			{
				return this._Fields;
			}
			set
			{
				this._Fields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblRow_OverrideCharacteristic", Storage="_OverrideCharacteristics", ThisKey="TblRowID", OtherKey="TblRowID")]
		public EntitySet<OverrideCharacteristic> OverrideCharacteristics
		{
			get
			{
				return this._OverrideCharacteristics;
			}
			set
			{
				this._OverrideCharacteristics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblRow_RewardPendingPointsTracker", Storage="_RewardPendingPointsTrackers", ThisKey="TblRowID", OtherKey="RewardTblRowID")]
		public EntitySet<RewardPendingPointsTracker> RewardPendingPointsTrackers
		{
			get
			{
				return this._RewardPendingPointsTrackers;
			}
			set
			{
				this._RewardPendingPointsTrackers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblRow_SearchWordTblRowName", Storage="_SearchWordTblRowNames", ThisKey="TblRowID", OtherKey="TblRowID")]
		public EntitySet<SearchWordTblRowName> SearchWordTblRowNames
		{
			get
			{
				return this._SearchWordTblRowNames;
			}
			set
			{
				this._SearchWordTblRowNames.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblRow_TblRowStatusRecord", Storage="_TblRowStatusRecords", ThisKey="TblRowID", OtherKey="TblRowId")]
		public EntitySet<TblRowStatusRecord> TblRowStatusRecords
		{
			get
			{
				return this._TblRowStatusRecords;
			}
			set
			{
				this._TblRowStatusRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblRow_Comment", Storage="_Comments", ThisKey="TblRowID", OtherKey="TblRowID")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblRow_RatingGroup", Storage="_RatingGroups", ThisKey="TblRowID", OtherKey="TblRowID")]
		public EntitySet<RatingGroup> RatingGroups
		{
			get
			{
				return this._RatingGroups;
			}
			set
			{
				this._RatingGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblRow_VolatilityTblRowTracker", Storage="_VolatilityTblRowTrackers", ThisKey="TblRowID", OtherKey="TblRowID")]
		public EntitySet<VolatilityTblRowTracker> VolatilityTblRowTrackers
		{
			get
			{
				return this._VolatilityTblRowTrackers;
			}
			set
			{
				this._VolatilityTblRowTrackers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblRowFieldDisplay_TblRow", Storage="_TblRowFieldDisplay", ThisKey="TblRowFieldDisplayID", OtherKey="TblRowFieldDisplayID", IsForeignKey=true)]
		public TblRowFieldDisplay TblRowFieldDisplay
		{
			get
			{
				return this._TblRowFieldDisplay.Entity;
			}
			set
			{
				TblRowFieldDisplay previousValue = this._TblRowFieldDisplay.Entity;
				if (((previousValue != value) 
							|| (this._TblRowFieldDisplay.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblRowFieldDisplay.Entity = null;
						previousValue.TblRows.Remove(this);
					}
					this._TblRowFieldDisplay.Entity = value;
					if ((value != null))
					{
						value.TblRows.Add(this);
						this._TblRowFieldDisplayID = value.TblRowFieldDisplayID;
					}
					else
					{
						this._TblRowFieldDisplayID = default(int);
					}
					this.SendPropertyChanged("TblRowFieldDisplay");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_TblRow", Storage="_Tbl", ThisKey="TblID", OtherKey="TblID", IsForeignKey=true)]
		public Tbl Tbl
		{
			get
			{
				return this._Tbl.Entity;
			}
			set
			{
				Tbl previousValue = this._Tbl.Entity;
				if (((previousValue != value) 
							|| (this._Tbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl.Entity = null;
						previousValue.TblRows.Remove(this);
					}
					this._Tbl.Entity = value;
					if ((value != null))
					{
						value.TblRows.Add(this);
						this._TblID = value.TblID;
					}
					else
					{
						this._TblID = default(int);
					}
					this.SendPropertyChanged("Tbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Fields(Field entity)
		{
			this.SendPropertyChanging();
			entity.TblRow = this;
		}
		
		private void detach_Fields(Field entity)
		{
			this.SendPropertyChanging();
			entity.TblRow = null;
		}
		
		private void attach_OverrideCharacteristics(OverrideCharacteristic entity)
		{
			this.SendPropertyChanging();
			entity.TblRow = this;
		}
		
		private void detach_OverrideCharacteristics(OverrideCharacteristic entity)
		{
			this.SendPropertyChanging();
			entity.TblRow = null;
		}
		
		private void attach_RewardPendingPointsTrackers(RewardPendingPointsTracker entity)
		{
			this.SendPropertyChanging();
			entity.TblRow = this;
		}
		
		private void detach_RewardPendingPointsTrackers(RewardPendingPointsTracker entity)
		{
			this.SendPropertyChanging();
			entity.TblRow = null;
		}
		
		private void attach_SearchWordTblRowNames(SearchWordTblRowName entity)
		{
			this.SendPropertyChanging();
			entity.TblRow = this;
		}
		
		private void detach_SearchWordTblRowNames(SearchWordTblRowName entity)
		{
			this.SendPropertyChanging();
			entity.TblRow = null;
		}
		
		private void attach_TblRowStatusRecords(TblRowStatusRecord entity)
		{
			this.SendPropertyChanging();
			entity.TblRow = this;
		}
		
		private void detach_TblRowStatusRecords(TblRowStatusRecord entity)
		{
			this.SendPropertyChanging();
			entity.TblRow = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.TblRow = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.TblRow = null;
		}
		
		private void attach_RatingGroups(RatingGroup entity)
		{
			this.SendPropertyChanging();
			entity.TblRow = this;
		}
		
		private void detach_RatingGroups(RatingGroup entity)
		{
			this.SendPropertyChanging();
			entity.TblRow = null;
		}
		
		private void attach_VolatilityTblRowTrackers(VolatilityTblRowTracker entity)
		{
			this.SendPropertyChanging();
			entity.TblRow = this;
		}
		
		private void detach_VolatilityTblRowTrackers(VolatilityTblRowTracker entity)
		{
			this.SendPropertyChanging();
			entity.TblRow = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UniquenessLocks")]
	public partial class UniquenessLock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.DateTime> _DeletionTime;
		
		private EntitySet<UniquenessLockReference> _UniquenessLockReferences;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnDeletionTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletionTimeChanged();
    #endregion
		
		public UniquenessLock()
		{
			this._UniquenessLockReferences = new EntitySet<UniquenessLockReference>(new Action<UniquenessLockReference>(this.attach_UniquenessLockReferences), new Action<UniquenessLockReference>(this.detach_UniquenessLockReferences));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletionTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletionTime
		{
			get
			{
				return this._DeletionTime;
			}
			set
			{
				if ((this._DeletionTime != value))
				{
					this.OnDeletionTimeChanging(value);
					this.SendPropertyChanging();
					this._DeletionTime = value;
					this.SendPropertyChanged("DeletionTime");
					this.OnDeletionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UniquenessLock_UniquenessLockReference", Storage="_UniquenessLockReferences", ThisKey="Id", OtherKey="UniquenessLockID")]
		public EntitySet<UniquenessLockReference> UniquenessLockReferences
		{
			get
			{
				return this._UniquenessLockReferences;
			}
			set
			{
				this._UniquenessLockReferences.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UniquenessLockReferences(UniquenessLockReference entity)
		{
			this.SendPropertyChanging();
			entity.UniquenessLock = this;
		}
		
		private void detach_UniquenessLockReferences(UniquenessLockReference entity)
		{
			this.SendPropertyChanging();
			entity.UniquenessLock = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbls")]
	public partial class Tbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TblID;
		
		private int _PointsManagerID;
		
		private System.Nullable<int> _DefaultRatingGroupAttributesID;
		
		private string _TblTabWord;
		
		private string _Name;
		
		private string _TypeOfTblRow;
		
		private System.Nullable<int> _TblDimensionsID;
		
		private System.Nullable<int> _Creator;
		
		private byte _Status;
		
		private bool _AllowOverrideOfRatingGroupCharacterstics;
		
		private bool _AllowUsersToAddComments;
		
		private bool _LimitCommentsToUsersWhoCanMakeUserRatings;
		
		private bool _OneRatingPerRatingGroup;
		
		private string _TblRowAdditionCriteria;
		
		private string _SuppStylesHeader;
		
		private string _SuppStylesMain;
		
		private string _WidthStyleEntityCol;
		
		private string _WidthStyleNumCol;
		
		private byte _FastTableSyncStatus;
		
		private int _NumTblRowsActive;
		
		private int _NumTblRowsDeleted;
		
		private EntitySet<ChangesGroup> _ChangesGroups;
		
		private EntitySet<HierarchyItem> _HierarchyItems;
		
		private EntitySet<InsertableContent> _InsertableContents;
		
		private EntitySet<TblTab> _TblTabs;
		
		private EntitySet<TrustTrackerForChoiceInGroup> _TrustTrackerForChoiceInGroups;
		
		private EntitySet<TblRow> _TblRows;
		
		private EntitySet<FieldDefinition> _FieldDefinitions;
		
		private EntitySet<ProposalSetting> _ProposalSettings;
		
		private EntityRef<PointsManager> _PointsManager;
		
		private EntityRef<User> _User;
		
		private EntityRef<TblDimension> _TblDimension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTblIDChanging(int value);
    partial void OnTblIDChanged();
    partial void OnPointsManagerIDChanging(int value);
    partial void OnPointsManagerIDChanged();
    partial void OnDefaultRatingGroupAttributesIDChanging(System.Nullable<int> value);
    partial void OnDefaultRatingGroupAttributesIDChanged();
    partial void OnTblTabWordChanging(string value);
    partial void OnTblTabWordChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeOfTblRowChanging(string value);
    partial void OnTypeOfTblRowChanged();
    partial void OnTblDimensionsIDChanging(System.Nullable<int> value);
    partial void OnTblDimensionsIDChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnAllowOverrideOfRatingGroupCharactersticsChanging(bool value);
    partial void OnAllowOverrideOfRatingGroupCharactersticsChanged();
    partial void OnAllowUsersToAddCommentsChanging(bool value);
    partial void OnAllowUsersToAddCommentsChanged();
    partial void OnLimitCommentsToUsersWhoCanMakeUserRatingsChanging(bool value);
    partial void OnLimitCommentsToUsersWhoCanMakeUserRatingsChanged();
    partial void OnOneRatingPerRatingGroupChanging(bool value);
    partial void OnOneRatingPerRatingGroupChanged();
    partial void OnTblRowAdditionCriteriaChanging(string value);
    partial void OnTblRowAdditionCriteriaChanged();
    partial void OnSuppStylesHeaderChanging(string value);
    partial void OnSuppStylesHeaderChanged();
    partial void OnSuppStylesMainChanging(string value);
    partial void OnSuppStylesMainChanged();
    partial void OnWidthStyleEntityColChanging(string value);
    partial void OnWidthStyleEntityColChanged();
    partial void OnWidthStyleNumColChanging(string value);
    partial void OnWidthStyleNumColChanged();
    partial void OnFastTableSyncStatusChanging(byte value);
    partial void OnFastTableSyncStatusChanged();
    partial void OnNumTblRowsActiveChanging(int value);
    partial void OnNumTblRowsActiveChanged();
    partial void OnNumTblRowsDeletedChanging(int value);
    partial void OnNumTblRowsDeletedChanged();
    #endregion
		
		public Tbl()
		{
			this._ChangesGroups = new EntitySet<ChangesGroup>(new Action<ChangesGroup>(this.attach_ChangesGroups), new Action<ChangesGroup>(this.detach_ChangesGroups));
			this._HierarchyItems = new EntitySet<HierarchyItem>(new Action<HierarchyItem>(this.attach_HierarchyItems), new Action<HierarchyItem>(this.detach_HierarchyItems));
			this._InsertableContents = new EntitySet<InsertableContent>(new Action<InsertableContent>(this.attach_InsertableContents), new Action<InsertableContent>(this.detach_InsertableContents));
			this._TblTabs = new EntitySet<TblTab>(new Action<TblTab>(this.attach_TblTabs), new Action<TblTab>(this.detach_TblTabs));
			this._TrustTrackerForChoiceInGroups = new EntitySet<TrustTrackerForChoiceInGroup>(new Action<TrustTrackerForChoiceInGroup>(this.attach_TrustTrackerForChoiceInGroups), new Action<TrustTrackerForChoiceInGroup>(this.detach_TrustTrackerForChoiceInGroups));
			this._TblRows = new EntitySet<TblRow>(new Action<TblRow>(this.attach_TblRows), new Action<TblRow>(this.detach_TblRows));
			this._FieldDefinitions = new EntitySet<FieldDefinition>(new Action<FieldDefinition>(this.attach_FieldDefinitions), new Action<FieldDefinition>(this.detach_FieldDefinitions));
			this._ProposalSettings = new EntitySet<ProposalSetting>(new Action<ProposalSetting>(this.attach_ProposalSettings), new Action<ProposalSetting>(this.detach_ProposalSettings));
			this._PointsManager = default(EntityRef<PointsManager>);
			this._User = default(EntityRef<User>);
			this._TblDimension = default(EntityRef<TblDimension>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TblID
		{
			get
			{
				return this._TblID;
			}
			set
			{
				if ((this._TblID != value))
				{
					this.OnTblIDChanging(value);
					this.SendPropertyChanging();
					this._TblID = value;
					this.SendPropertyChanged("TblID");
					this.OnTblIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsManagerID", DbType="Int NOT NULL")]
		public int PointsManagerID
		{
			get
			{
				return this._PointsManagerID;
			}
			set
			{
				if ((this._PointsManagerID != value))
				{
					if (this._PointsManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPointsManagerIDChanging(value);
					this.SendPropertyChanging();
					this._PointsManagerID = value;
					this.SendPropertyChanged("PointsManagerID");
					this.OnPointsManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultRatingGroupAttributesID", DbType="Int")]
		public System.Nullable<int> DefaultRatingGroupAttributesID
		{
			get
			{
				return this._DefaultRatingGroupAttributesID;
			}
			set
			{
				if ((this._DefaultRatingGroupAttributesID != value))
				{
					this.OnDefaultRatingGroupAttributesIDChanging(value);
					this.SendPropertyChanging();
					this._DefaultRatingGroupAttributesID = value;
					this.SendPropertyChanged("DefaultRatingGroupAttributesID");
					this.OnDefaultRatingGroupAttributesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblTabWord", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TblTabWord
		{
			get
			{
				return this._TblTabWord;
			}
			set
			{
				if ((this._TblTabWord != value))
				{
					this.OnTblTabWordChanging(value);
					this.SendPropertyChanging();
					this._TblTabWord = value;
					this.SendPropertyChanged("TblTabWord");
					this.OnTblTabWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfTblRow", DbType="VarChar(50)")]
		public string TypeOfTblRow
		{
			get
			{
				return this._TypeOfTblRow;
			}
			set
			{
				if ((this._TypeOfTblRow != value))
				{
					this.OnTypeOfTblRowChanging(value);
					this.SendPropertyChanging();
					this._TypeOfTblRow = value;
					this.SendPropertyChanged("TypeOfTblRow");
					this.OnTypeOfTblRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblDimensionsID", DbType="Int")]
		public System.Nullable<int> TblDimensionsID
		{
			get
			{
				return this._TblDimensionsID;
			}
			set
			{
				if ((this._TblDimensionsID != value))
				{
					if (this._TblDimension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblDimensionsIDChanging(value);
					this.SendPropertyChanging();
					this._TblDimensionsID = value;
					this.SendPropertyChanged("TblDimensionsID");
					this.OnTblDimensionsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowOverrideOfRatingGroupCharacterstics", DbType="Bit NOT NULL")]
		public bool AllowOverrideOfRatingGroupCharacterstics
		{
			get
			{
				return this._AllowOverrideOfRatingGroupCharacterstics;
			}
			set
			{
				if ((this._AllowOverrideOfRatingGroupCharacterstics != value))
				{
					this.OnAllowOverrideOfRatingGroupCharactersticsChanging(value);
					this.SendPropertyChanging();
					this._AllowOverrideOfRatingGroupCharacterstics = value;
					this.SendPropertyChanged("AllowOverrideOfRatingGroupCharacterstics");
					this.OnAllowOverrideOfRatingGroupCharactersticsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowUsersToAddComments", DbType="Bit NOT NULL")]
		public bool AllowUsersToAddComments
		{
			get
			{
				return this._AllowUsersToAddComments;
			}
			set
			{
				if ((this._AllowUsersToAddComments != value))
				{
					this.OnAllowUsersToAddCommentsChanging(value);
					this.SendPropertyChanging();
					this._AllowUsersToAddComments = value;
					this.SendPropertyChanged("AllowUsersToAddComments");
					this.OnAllowUsersToAddCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitCommentsToUsersWhoCanMakeUserRatings", DbType="Bit NOT NULL")]
		public bool LimitCommentsToUsersWhoCanMakeUserRatings
		{
			get
			{
				return this._LimitCommentsToUsersWhoCanMakeUserRatings;
			}
			set
			{
				if ((this._LimitCommentsToUsersWhoCanMakeUserRatings != value))
				{
					this.OnLimitCommentsToUsersWhoCanMakeUserRatingsChanging(value);
					this.SendPropertyChanging();
					this._LimitCommentsToUsersWhoCanMakeUserRatings = value;
					this.SendPropertyChanged("LimitCommentsToUsersWhoCanMakeUserRatings");
					this.OnLimitCommentsToUsersWhoCanMakeUserRatingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OneRatingPerRatingGroup", DbType="Bit NOT NULL")]
		public bool OneRatingPerRatingGroup
		{
			get
			{
				return this._OneRatingPerRatingGroup;
			}
			set
			{
				if ((this._OneRatingPerRatingGroup != value))
				{
					this.OnOneRatingPerRatingGroupChanging(value);
					this.SendPropertyChanging();
					this._OneRatingPerRatingGroup = value;
					this.SendPropertyChanged("OneRatingPerRatingGroup");
					this.OnOneRatingPerRatingGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblRowAdditionCriteria", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TblRowAdditionCriteria
		{
			get
			{
				return this._TblRowAdditionCriteria;
			}
			set
			{
				if ((this._TblRowAdditionCriteria != value))
				{
					this.OnTblRowAdditionCriteriaChanging(value);
					this.SendPropertyChanging();
					this._TblRowAdditionCriteria = value;
					this.SendPropertyChanged("TblRowAdditionCriteria");
					this.OnTblRowAdditionCriteriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuppStylesHeader", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SuppStylesHeader
		{
			get
			{
				return this._SuppStylesHeader;
			}
			set
			{
				if ((this._SuppStylesHeader != value))
				{
					this.OnSuppStylesHeaderChanging(value);
					this.SendPropertyChanging();
					this._SuppStylesHeader = value;
					this.SendPropertyChanged("SuppStylesHeader");
					this.OnSuppStylesHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuppStylesMain", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SuppStylesMain
		{
			get
			{
				return this._SuppStylesMain;
			}
			set
			{
				if ((this._SuppStylesMain != value))
				{
					this.OnSuppStylesMainChanging(value);
					this.SendPropertyChanging();
					this._SuppStylesMain = value;
					this.SendPropertyChanged("SuppStylesMain");
					this.OnSuppStylesMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WidthStyleEntityCol", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string WidthStyleEntityCol
		{
			get
			{
				return this._WidthStyleEntityCol;
			}
			set
			{
				if ((this._WidthStyleEntityCol != value))
				{
					this.OnWidthStyleEntityColChanging(value);
					this.SendPropertyChanging();
					this._WidthStyleEntityCol = value;
					this.SendPropertyChanged("WidthStyleEntityCol");
					this.OnWidthStyleEntityColChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WidthStyleNumCol", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string WidthStyleNumCol
		{
			get
			{
				return this._WidthStyleNumCol;
			}
			set
			{
				if ((this._WidthStyleNumCol != value))
				{
					this.OnWidthStyleNumColChanging(value);
					this.SendPropertyChanging();
					this._WidthStyleNumCol = value;
					this.SendPropertyChanged("WidthStyleNumCol");
					this.OnWidthStyleNumColChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FastTableSyncStatus", DbType="TinyInt NOT NULL")]
		public byte FastTableSyncStatus
		{
			get
			{
				return this._FastTableSyncStatus;
			}
			set
			{
				if ((this._FastTableSyncStatus != value))
				{
					this.OnFastTableSyncStatusChanging(value);
					this.SendPropertyChanging();
					this._FastTableSyncStatus = value;
					this.SendPropertyChanged("FastTableSyncStatus");
					this.OnFastTableSyncStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumTblRowsActive", DbType="Int NOT NULL")]
		public int NumTblRowsActive
		{
			get
			{
				return this._NumTblRowsActive;
			}
			set
			{
				if ((this._NumTblRowsActive != value))
				{
					this.OnNumTblRowsActiveChanging(value);
					this.SendPropertyChanging();
					this._NumTblRowsActive = value;
					this.SendPropertyChanged("NumTblRowsActive");
					this.OnNumTblRowsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumTblRowsDeleted", DbType="Int NOT NULL")]
		public int NumTblRowsDeleted
		{
			get
			{
				return this._NumTblRowsDeleted;
			}
			set
			{
				if ((this._NumTblRowsDeleted != value))
				{
					this.OnNumTblRowsDeletedChanging(value);
					this.SendPropertyChanging();
					this._NumTblRowsDeleted = value;
					this.SendPropertyChanged("NumTblRowsDeleted");
					this.OnNumTblRowsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_ChangesGroup", Storage="_ChangesGroups", ThisKey="TblID", OtherKey="TblID")]
		public EntitySet<ChangesGroup> ChangesGroups
		{
			get
			{
				return this._ChangesGroups;
			}
			set
			{
				this._ChangesGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_HierarchyItem", Storage="_HierarchyItems", ThisKey="TblID", OtherKey="TblID")]
		public EntitySet<HierarchyItem> HierarchyItems
		{
			get
			{
				return this._HierarchyItems;
			}
			set
			{
				this._HierarchyItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_InsertableContent", Storage="_InsertableContents", ThisKey="TblID", OtherKey="TblID")]
		public EntitySet<InsertableContent> InsertableContents
		{
			get
			{
				return this._InsertableContents;
			}
			set
			{
				this._InsertableContents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_TblTab", Storage="_TblTabs", ThisKey="TblID", OtherKey="TblID")]
		public EntitySet<TblTab> TblTabs
		{
			get
			{
				return this._TblTabs;
			}
			set
			{
				this._TblTabs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_TrustTrackerForChoiceInGroup", Storage="_TrustTrackerForChoiceInGroups", ThisKey="TblID", OtherKey="TblID")]
		public EntitySet<TrustTrackerForChoiceInGroup> TrustTrackerForChoiceInGroups
		{
			get
			{
				return this._TrustTrackerForChoiceInGroups;
			}
			set
			{
				this._TrustTrackerForChoiceInGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_TblRow", Storage="_TblRows", ThisKey="TblID", OtherKey="TblID")]
		public EntitySet<TblRow> TblRows
		{
			get
			{
				return this._TblRows;
			}
			set
			{
				this._TblRows.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_FieldDefinition", Storage="_FieldDefinitions", ThisKey="TblID", OtherKey="TblID")]
		public EntitySet<FieldDefinition> FieldDefinitions
		{
			get
			{
				return this._FieldDefinitions;
			}
			set
			{
				this._FieldDefinitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_ProposalSetting", Storage="_ProposalSettings", ThisKey="TblID", OtherKey="TblID")]
		public EntitySet<ProposalSetting> ProposalSettings
		{
			get
			{
				return this._ProposalSettings;
			}
			set
			{
				this._ProposalSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_Tbl", Storage="_PointsManager", ThisKey="PointsManagerID", OtherKey="PointsManagerID", IsForeignKey=true)]
		public PointsManager PointsManager
		{
			get
			{
				return this._PointsManager.Entity;
			}
			set
			{
				PointsManager previousValue = this._PointsManager.Entity;
				if (((previousValue != value) 
							|| (this._PointsManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PointsManager.Entity = null;
						previousValue.Tbls.Remove(this);
					}
					this._PointsManager.Entity = value;
					if ((value != null))
					{
						value.Tbls.Add(this);
						this._PointsManagerID = value.PointsManagerID;
					}
					else
					{
						this._PointsManagerID = default(int);
					}
					this.SendPropertyChanged("PointsManager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Tbl", Storage="_User", ThisKey="Creator", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Tbls.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Tbls.Add(this);
						this._Creator = value.UserID;
					}
					else
					{
						this._Creator = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblDimension_Tbl", Storage="_TblDimension", ThisKey="TblDimensionsID", OtherKey="TblDimensionsID", IsForeignKey=true)]
		public TblDimension TblDimension
		{
			get
			{
				return this._TblDimension.Entity;
			}
			set
			{
				TblDimension previousValue = this._TblDimension.Entity;
				if (((previousValue != value) 
							|| (this._TblDimension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblDimension.Entity = null;
						previousValue.Tbls.Remove(this);
					}
					this._TblDimension.Entity = value;
					if ((value != null))
					{
						value.Tbls.Add(this);
						this._TblDimensionsID = value.TblDimensionsID;
					}
					else
					{
						this._TblDimensionsID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblDimension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChangesGroups(ChangesGroup entity)
		{
			this.SendPropertyChanging();
			entity.Tbl = this;
		}
		
		private void detach_ChangesGroups(ChangesGroup entity)
		{
			this.SendPropertyChanging();
			entity.Tbl = null;
		}
		
		private void attach_HierarchyItems(HierarchyItem entity)
		{
			this.SendPropertyChanging();
			entity.Tbl = this;
		}
		
		private void detach_HierarchyItems(HierarchyItem entity)
		{
			this.SendPropertyChanging();
			entity.Tbl = null;
		}
		
		private void attach_InsertableContents(InsertableContent entity)
		{
			this.SendPropertyChanging();
			entity.Tbl = this;
		}
		
		private void detach_InsertableContents(InsertableContent entity)
		{
			this.SendPropertyChanging();
			entity.Tbl = null;
		}
		
		private void attach_TblTabs(TblTab entity)
		{
			this.SendPropertyChanging();
			entity.Tbl = this;
		}
		
		private void detach_TblTabs(TblTab entity)
		{
			this.SendPropertyChanging();
			entity.Tbl = null;
		}
		
		private void attach_TrustTrackerForChoiceInGroups(TrustTrackerForChoiceInGroup entity)
		{
			this.SendPropertyChanging();
			entity.Tbl = this;
		}
		
		private void detach_TrustTrackerForChoiceInGroups(TrustTrackerForChoiceInGroup entity)
		{
			this.SendPropertyChanging();
			entity.Tbl = null;
		}
		
		private void attach_TblRows(TblRow entity)
		{
			this.SendPropertyChanging();
			entity.Tbl = this;
		}
		
		private void detach_TblRows(TblRow entity)
		{
			this.SendPropertyChanging();
			entity.Tbl = null;
		}
		
		private void attach_FieldDefinitions(FieldDefinition entity)
		{
			this.SendPropertyChanging();
			entity.Tbl = this;
		}
		
		private void detach_FieldDefinitions(FieldDefinition entity)
		{
			this.SendPropertyChanging();
			entity.Tbl = null;
		}
		
		private void attach_ProposalSettings(ProposalSetting entity)
		{
			this.SendPropertyChanging();
			entity.Tbl = this;
		}
		
		private void detach_ProposalSettings(ProposalSetting entity)
		{
			this.SendPropertyChanging();
			entity.Tbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RatingGroupPhaseStatus")]
	public partial class RatingGroupPhaseStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RatingGroupPhaseStatusID;
		
		private int _RatingPhaseGroupID;
		
		private int _RatingPhaseID;
		
		private int _RatingGroupID;
		
		private int _RoundNum;
		
		private int _RoundNumThisPhase;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EarliestCompleteTime;
		
		private System.DateTime _ActualCompleteTime;
		
		private System.DateTime _ShortTermResolveTime;
		
		private bool _HighStakesSecret;
		
		private bool _HighStakesKnown;
		
		private bool _HighStakesReflected;
		
		private bool _HighStakesNoviceUser;
		
		private System.Nullable<System.DateTime> _HighStakesBecomeKnown;
		
		private System.Nullable<System.DateTime> _HighStakesNoviceUserAfter;
		
		private System.Nullable<System.DateTime> _DeletionTime;
		
		private EntitySet<SubsidyAdjustment> _SubsidyAdjustments;
		
		private EntitySet<UserRatingGroup> _UserRatingGroups;
		
		private EntitySet<RatingPhaseStatus> _RatingPhaseStatus;
		
		private EntityRef<RatingGroup> _RatingGroup;
		
		private EntityRef<RatingPhase> _RatingPhase;
		
		private EntityRef<RatingPhaseGroup> _RatingPhaseGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatingGroupPhaseStatusIDChanging(int value);
    partial void OnRatingGroupPhaseStatusIDChanged();
    partial void OnRatingPhaseGroupIDChanging(int value);
    partial void OnRatingPhaseGroupIDChanged();
    partial void OnRatingPhaseIDChanging(int value);
    partial void OnRatingPhaseIDChanged();
    partial void OnRatingGroupIDChanging(int value);
    partial void OnRatingGroupIDChanged();
    partial void OnRoundNumChanging(int value);
    partial void OnRoundNumChanged();
    partial void OnRoundNumThisPhaseChanging(int value);
    partial void OnRoundNumThisPhaseChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEarliestCompleteTimeChanging(System.DateTime value);
    partial void OnEarliestCompleteTimeChanged();
    partial void OnActualCompleteTimeChanging(System.DateTime value);
    partial void OnActualCompleteTimeChanged();
    partial void OnShortTermResolveTimeChanging(System.DateTime value);
    partial void OnShortTermResolveTimeChanged();
    partial void OnHighStakesSecretChanging(bool value);
    partial void OnHighStakesSecretChanged();
    partial void OnHighStakesKnownChanging(bool value);
    partial void OnHighStakesKnownChanged();
    partial void OnHighStakesReflectedChanging(bool value);
    partial void OnHighStakesReflectedChanged();
    partial void OnHighStakesNoviceUserChanging(bool value);
    partial void OnHighStakesNoviceUserChanged();
    partial void OnHighStakesBecomeKnownChanging(System.Nullable<System.DateTime> value);
    partial void OnHighStakesBecomeKnownChanged();
    partial void OnHighStakesNoviceUserAfterChanging(System.Nullable<System.DateTime> value);
    partial void OnHighStakesNoviceUserAfterChanged();
    partial void OnDeletionTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletionTimeChanged();
    #endregion
		
		public RatingGroupPhaseStatus()
		{
			this._SubsidyAdjustments = new EntitySet<SubsidyAdjustment>(new Action<SubsidyAdjustment>(this.attach_SubsidyAdjustments), new Action<SubsidyAdjustment>(this.detach_SubsidyAdjustments));
			this._UserRatingGroups = new EntitySet<UserRatingGroup>(new Action<UserRatingGroup>(this.attach_UserRatingGroups), new Action<UserRatingGroup>(this.detach_UserRatingGroups));
			this._RatingPhaseStatus = new EntitySet<RatingPhaseStatus>(new Action<RatingPhaseStatus>(this.attach_RatingPhaseStatus), new Action<RatingPhaseStatus>(this.detach_RatingPhaseStatus));
			this._RatingGroup = default(EntityRef<RatingGroup>);
			this._RatingPhase = default(EntityRef<RatingPhase>);
			this._RatingPhaseGroup = default(EntityRef<RatingPhaseGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingGroupPhaseStatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RatingGroupPhaseStatusID
		{
			get
			{
				return this._RatingGroupPhaseStatusID;
			}
			set
			{
				if ((this._RatingGroupPhaseStatusID != value))
				{
					this.OnRatingGroupPhaseStatusIDChanging(value);
					this.SendPropertyChanging();
					this._RatingGroupPhaseStatusID = value;
					this.SendPropertyChanged("RatingGroupPhaseStatusID");
					this.OnRatingGroupPhaseStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingPhaseGroupID", DbType="Int NOT NULL")]
		public int RatingPhaseGroupID
		{
			get
			{
				return this._RatingPhaseGroupID;
			}
			set
			{
				if ((this._RatingPhaseGroupID != value))
				{
					if (this._RatingPhaseGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingPhaseGroupIDChanging(value);
					this.SendPropertyChanging();
					this._RatingPhaseGroupID = value;
					this.SendPropertyChanged("RatingPhaseGroupID");
					this.OnRatingPhaseGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingPhaseID", DbType="Int NOT NULL")]
		public int RatingPhaseID
		{
			get
			{
				return this._RatingPhaseID;
			}
			set
			{
				if ((this._RatingPhaseID != value))
				{
					if (this._RatingPhase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingPhaseIDChanging(value);
					this.SendPropertyChanging();
					this._RatingPhaseID = value;
					this.SendPropertyChanged("RatingPhaseID");
					this.OnRatingPhaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingGroupID", DbType="Int NOT NULL")]
		public int RatingGroupID
		{
			get
			{
				return this._RatingGroupID;
			}
			set
			{
				if ((this._RatingGroupID != value))
				{
					if (this._RatingGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingGroupIDChanging(value);
					this.SendPropertyChanging();
					this._RatingGroupID = value;
					this.SendPropertyChanged("RatingGroupID");
					this.OnRatingGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundNum", DbType="Int NOT NULL")]
		public int RoundNum
		{
			get
			{
				return this._RoundNum;
			}
			set
			{
				if ((this._RoundNum != value))
				{
					this.OnRoundNumChanging(value);
					this.SendPropertyChanging();
					this._RoundNum = value;
					this.SendPropertyChanged("RoundNum");
					this.OnRoundNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundNumThisPhase", DbType="Int NOT NULL")]
		public int RoundNumThisPhase
		{
			get
			{
				return this._RoundNumThisPhase;
			}
			set
			{
				if ((this._RoundNumThisPhase != value))
				{
					this.OnRoundNumThisPhaseChanging(value);
					this.SendPropertyChanging();
					this._RoundNumThisPhase = value;
					this.SendPropertyChanged("RoundNumThisPhase");
					this.OnRoundNumThisPhaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarliestCompleteTime", DbType="DateTime NOT NULL")]
		public System.DateTime EarliestCompleteTime
		{
			get
			{
				return this._EarliestCompleteTime;
			}
			set
			{
				if ((this._EarliestCompleteTime != value))
				{
					this.OnEarliestCompleteTimeChanging(value);
					this.SendPropertyChanging();
					this._EarliestCompleteTime = value;
					this.SendPropertyChanged("EarliestCompleteTime");
					this.OnEarliestCompleteTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualCompleteTime", DbType="DateTime NOT NULL")]
		public System.DateTime ActualCompleteTime
		{
			get
			{
				return this._ActualCompleteTime;
			}
			set
			{
				if ((this._ActualCompleteTime != value))
				{
					this.OnActualCompleteTimeChanging(value);
					this.SendPropertyChanging();
					this._ActualCompleteTime = value;
					this.SendPropertyChanged("ActualCompleteTime");
					this.OnActualCompleteTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortTermResolveTime", DbType="DateTime NOT NULL")]
		public System.DateTime ShortTermResolveTime
		{
			get
			{
				return this._ShortTermResolveTime;
			}
			set
			{
				if ((this._ShortTermResolveTime != value))
				{
					this.OnShortTermResolveTimeChanging(value);
					this.SendPropertyChanging();
					this._ShortTermResolveTime = value;
					this.SendPropertyChanged("ShortTermResolveTime");
					this.OnShortTermResolveTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighStakesSecret", DbType="Bit NOT NULL")]
		public bool HighStakesSecret
		{
			get
			{
				return this._HighStakesSecret;
			}
			set
			{
				if ((this._HighStakesSecret != value))
				{
					this.OnHighStakesSecretChanging(value);
					this.SendPropertyChanging();
					this._HighStakesSecret = value;
					this.SendPropertyChanged("HighStakesSecret");
					this.OnHighStakesSecretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighStakesKnown", DbType="Bit NOT NULL")]
		public bool HighStakesKnown
		{
			get
			{
				return this._HighStakesKnown;
			}
			set
			{
				if ((this._HighStakesKnown != value))
				{
					this.OnHighStakesKnownChanging(value);
					this.SendPropertyChanging();
					this._HighStakesKnown = value;
					this.SendPropertyChanged("HighStakesKnown");
					this.OnHighStakesKnownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighStakesReflected", DbType="Bit NOT NULL")]
		public bool HighStakesReflected
		{
			get
			{
				return this._HighStakesReflected;
			}
			set
			{
				if ((this._HighStakesReflected != value))
				{
					this.OnHighStakesReflectedChanging(value);
					this.SendPropertyChanging();
					this._HighStakesReflected = value;
					this.SendPropertyChanged("HighStakesReflected");
					this.OnHighStakesReflectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighStakesNoviceUser", DbType="Bit NOT NULL")]
		public bool HighStakesNoviceUser
		{
			get
			{
				return this._HighStakesNoviceUser;
			}
			set
			{
				if ((this._HighStakesNoviceUser != value))
				{
					this.OnHighStakesNoviceUserChanging(value);
					this.SendPropertyChanging();
					this._HighStakesNoviceUser = value;
					this.SendPropertyChanged("HighStakesNoviceUser");
					this.OnHighStakesNoviceUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighStakesBecomeKnown", DbType="DateTime")]
		public System.Nullable<System.DateTime> HighStakesBecomeKnown
		{
			get
			{
				return this._HighStakesBecomeKnown;
			}
			set
			{
				if ((this._HighStakesBecomeKnown != value))
				{
					this.OnHighStakesBecomeKnownChanging(value);
					this.SendPropertyChanging();
					this._HighStakesBecomeKnown = value;
					this.SendPropertyChanged("HighStakesBecomeKnown");
					this.OnHighStakesBecomeKnownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighStakesNoviceUserAfter", DbType="DateTime")]
		public System.Nullable<System.DateTime> HighStakesNoviceUserAfter
		{
			get
			{
				return this._HighStakesNoviceUserAfter;
			}
			set
			{
				if ((this._HighStakesNoviceUserAfter != value))
				{
					this.OnHighStakesNoviceUserAfterChanging(value);
					this.SendPropertyChanging();
					this._HighStakesNoviceUserAfter = value;
					this.SendPropertyChanged("HighStakesNoviceUserAfter");
					this.OnHighStakesNoviceUserAfterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletionTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletionTime
		{
			get
			{
				return this._DeletionTime;
			}
			set
			{
				if ((this._DeletionTime != value))
				{
					this.OnDeletionTimeChanging(value);
					this.SendPropertyChanging();
					this._DeletionTime = value;
					this.SendPropertyChanged("DeletionTime");
					this.OnDeletionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroupPhaseStatus_SubsidyAdjustment", Storage="_SubsidyAdjustments", ThisKey="RatingGroupPhaseStatusID", OtherKey="RatingGroupPhaseStatusID")]
		public EntitySet<SubsidyAdjustment> SubsidyAdjustments
		{
			get
			{
				return this._SubsidyAdjustments;
			}
			set
			{
				this._SubsidyAdjustments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroupPhaseStatus_UserRatingGroup", Storage="_UserRatingGroups", ThisKey="RatingGroupPhaseStatusID", OtherKey="RatingGroupPhaseStatusID")]
		public EntitySet<UserRatingGroup> UserRatingGroups
		{
			get
			{
				return this._UserRatingGroups;
			}
			set
			{
				this._UserRatingGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroupPhaseStatus_RatingPhaseStatus", Storage="_RatingPhaseStatus", ThisKey="RatingGroupPhaseStatusID", OtherKey="RatingGroupPhaseStatusID")]
		public EntitySet<RatingPhaseStatus> RatingPhaseStatus
		{
			get
			{
				return this._RatingPhaseStatus;
			}
			set
			{
				this._RatingPhaseStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroup_RatingGroupPhaseStatus", Storage="_RatingGroup", ThisKey="RatingGroupID", OtherKey="RatingGroupID", IsForeignKey=true)]
		public RatingGroup RatingGroup
		{
			get
			{
				return this._RatingGroup.Entity;
			}
			set
			{
				RatingGroup previousValue = this._RatingGroup.Entity;
				if (((previousValue != value) 
							|| (this._RatingGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingGroup.Entity = null;
						previousValue.RatingGroupPhaseStatus.Remove(this);
					}
					this._RatingGroup.Entity = value;
					if ((value != null))
					{
						value.RatingGroupPhaseStatus.Add(this);
						this._RatingGroupID = value.RatingGroupID;
					}
					else
					{
						this._RatingGroupID = default(int);
					}
					this.SendPropertyChanged("RatingGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingPhase_RatingGroupPhaseStatus", Storage="_RatingPhase", ThisKey="RatingPhaseID", OtherKey="RatingPhaseID", IsForeignKey=true)]
		public RatingPhase RatingPhase
		{
			get
			{
				return this._RatingPhase.Entity;
			}
			set
			{
				RatingPhase previousValue = this._RatingPhase.Entity;
				if (((previousValue != value) 
							|| (this._RatingPhase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingPhase.Entity = null;
						previousValue.RatingGroupPhaseStatus.Remove(this);
					}
					this._RatingPhase.Entity = value;
					if ((value != null))
					{
						value.RatingGroupPhaseStatus.Add(this);
						this._RatingPhaseID = value.RatingPhaseID;
					}
					else
					{
						this._RatingPhaseID = default(int);
					}
					this.SendPropertyChanged("RatingPhase");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingPhaseGroup_RatingGroupPhaseStatus", Storage="_RatingPhaseGroup", ThisKey="RatingPhaseGroupID", OtherKey="RatingPhaseGroupID", IsForeignKey=true)]
		public RatingPhaseGroup RatingPhaseGroup
		{
			get
			{
				return this._RatingPhaseGroup.Entity;
			}
			set
			{
				RatingPhaseGroup previousValue = this._RatingPhaseGroup.Entity;
				if (((previousValue != value) 
							|| (this._RatingPhaseGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingPhaseGroup.Entity = null;
						previousValue.RatingGroupPhaseStatus.Remove(this);
					}
					this._RatingPhaseGroup.Entity = value;
					if ((value != null))
					{
						value.RatingGroupPhaseStatus.Add(this);
						this._RatingPhaseGroupID = value.RatingPhaseGroupID;
					}
					else
					{
						this._RatingPhaseGroupID = default(int);
					}
					this.SendPropertyChanged("RatingPhaseGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SubsidyAdjustments(SubsidyAdjustment entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroupPhaseStatus = this;
		}
		
		private void detach_SubsidyAdjustments(SubsidyAdjustment entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroupPhaseStatus = null;
		}
		
		private void attach_UserRatingGroups(UserRatingGroup entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroupPhaseStatus = this;
		}
		
		private void detach_UserRatingGroups(UserRatingGroup entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroupPhaseStatus = null;
		}
		
		private void attach_RatingPhaseStatus(RatingPhaseStatus entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroupPhaseStatus = this;
		}
		
		private void detach_RatingPhaseStatus(RatingPhaseStatus entity)
		{
			this.SendPropertyChanging();
			entity.RatingGroupPhaseStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblDimensions")]
	public partial class TblDimension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TblDimensionsID;
		
		private int _MaxWidthOfImageInRowHeaderCell;
		
		private int _MaxHeightOfImageInRowHeaderCell;
		
		private int _MaxWidthOfImageInTblRowPopUpWindow;
		
		private int _MaxHeightOfImageInTblRowPopUpWindow;
		
		private int _WidthOfTblRowPopUpWindow;
		
		private System.Nullable<int> _Creator;
		
		private System.Nullable<byte> _Status;
		
		private EntitySet<Domain> _Domains;
		
		private EntitySet<Tbl> _Tbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTblDimensionsIDChanging(int value);
    partial void OnTblDimensionsIDChanged();
    partial void OnMaxWidthOfImageInRowHeaderCellChanging(int value);
    partial void OnMaxWidthOfImageInRowHeaderCellChanged();
    partial void OnMaxHeightOfImageInRowHeaderCellChanging(int value);
    partial void OnMaxHeightOfImageInRowHeaderCellChanged();
    partial void OnMaxWidthOfImageInTblRowPopUpWindowChanging(int value);
    partial void OnMaxWidthOfImageInTblRowPopUpWindowChanged();
    partial void OnMaxHeightOfImageInTblRowPopUpWindowChanging(int value);
    partial void OnMaxHeightOfImageInTblRowPopUpWindowChanged();
    partial void OnWidthOfTblRowPopUpWindowChanging(int value);
    partial void OnWidthOfTblRowPopUpWindowChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    #endregion
		
		public TblDimension()
		{
			this._Domains = new EntitySet<Domain>(new Action<Domain>(this.attach_Domains), new Action<Domain>(this.detach_Domains));
			this._Tbls = new EntitySet<Tbl>(new Action<Tbl>(this.attach_Tbls), new Action<Tbl>(this.detach_Tbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblDimensionsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TblDimensionsID
		{
			get
			{
				return this._TblDimensionsID;
			}
			set
			{
				if ((this._TblDimensionsID != value))
				{
					this.OnTblDimensionsIDChanging(value);
					this.SendPropertyChanging();
					this._TblDimensionsID = value;
					this.SendPropertyChanged("TblDimensionsID");
					this.OnTblDimensionsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxWidthOfImageInRowHeaderCell", DbType="Int NOT NULL")]
		public int MaxWidthOfImageInRowHeaderCell
		{
			get
			{
				return this._MaxWidthOfImageInRowHeaderCell;
			}
			set
			{
				if ((this._MaxWidthOfImageInRowHeaderCell != value))
				{
					this.OnMaxWidthOfImageInRowHeaderCellChanging(value);
					this.SendPropertyChanging();
					this._MaxWidthOfImageInRowHeaderCell = value;
					this.SendPropertyChanged("MaxWidthOfImageInRowHeaderCell");
					this.OnMaxWidthOfImageInRowHeaderCellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxHeightOfImageInRowHeaderCell", DbType="Int NOT NULL")]
		public int MaxHeightOfImageInRowHeaderCell
		{
			get
			{
				return this._MaxHeightOfImageInRowHeaderCell;
			}
			set
			{
				if ((this._MaxHeightOfImageInRowHeaderCell != value))
				{
					this.OnMaxHeightOfImageInRowHeaderCellChanging(value);
					this.SendPropertyChanging();
					this._MaxHeightOfImageInRowHeaderCell = value;
					this.SendPropertyChanged("MaxHeightOfImageInRowHeaderCell");
					this.OnMaxHeightOfImageInRowHeaderCellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxWidthOfImageInTblRowPopUpWindow", DbType="Int NOT NULL")]
		public int MaxWidthOfImageInTblRowPopUpWindow
		{
			get
			{
				return this._MaxWidthOfImageInTblRowPopUpWindow;
			}
			set
			{
				if ((this._MaxWidthOfImageInTblRowPopUpWindow != value))
				{
					this.OnMaxWidthOfImageInTblRowPopUpWindowChanging(value);
					this.SendPropertyChanging();
					this._MaxWidthOfImageInTblRowPopUpWindow = value;
					this.SendPropertyChanged("MaxWidthOfImageInTblRowPopUpWindow");
					this.OnMaxWidthOfImageInTblRowPopUpWindowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxHeightOfImageInTblRowPopUpWindow", DbType="Int NOT NULL")]
		public int MaxHeightOfImageInTblRowPopUpWindow
		{
			get
			{
				return this._MaxHeightOfImageInTblRowPopUpWindow;
			}
			set
			{
				if ((this._MaxHeightOfImageInTblRowPopUpWindow != value))
				{
					this.OnMaxHeightOfImageInTblRowPopUpWindowChanging(value);
					this.SendPropertyChanging();
					this._MaxHeightOfImageInTblRowPopUpWindow = value;
					this.SendPropertyChanged("MaxHeightOfImageInTblRowPopUpWindow");
					this.OnMaxHeightOfImageInTblRowPopUpWindowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WidthOfTblRowPopUpWindow", DbType="Int NOT NULL")]
		public int WidthOfTblRowPopUpWindow
		{
			get
			{
				return this._WidthOfTblRowPopUpWindow;
			}
			set
			{
				if ((this._WidthOfTblRowPopUpWindow != value))
				{
					this.OnWidthOfTblRowPopUpWindowChanging(value);
					this.SendPropertyChanging();
					this._WidthOfTblRowPopUpWindow = value;
					this.SendPropertyChanged("WidthOfTblRowPopUpWindow");
					this.OnWidthOfTblRowPopUpWindowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblDimension_Domain", Storage="_Domains", ThisKey="TblDimensionsID", OtherKey="TblDimensionsID")]
		public EntitySet<Domain> Domains
		{
			get
			{
				return this._Domains;
			}
			set
			{
				this._Domains.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblDimension_Tbl", Storage="_Tbls", ThisKey="TblDimensionsID", OtherKey="TblDimensionsID")]
		public EntitySet<Tbl> Tbls
		{
			get
			{
				return this._Tbls;
			}
			set
			{
				this._Tbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Domains(Domain entity)
		{
			this.SendPropertyChanging();
			entity.TblDimension = this;
		}
		
		private void detach_Domains(Domain entity)
		{
			this.SendPropertyChanging();
			entity.TblDimension = null;
		}
		
		private void attach_Tbls(Tbl entity)
		{
			this.SendPropertyChanging();
			entity.TblDimension = this;
		}
		
		private void detach_Tbls(Tbl entity)
		{
			this.SendPropertyChanging();
			entity.TblDimension = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblColumns")]
	public partial class TblColumn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TblColumnID;
		
		private int _TblTabID;
		
		private int _DefaultRatingGroupAttributesID;
		
		private System.Nullable<int> _ConditionTblColumnID;
		
		private System.Nullable<int> _TrustTrackerUnitID;
		
		private System.Nullable<decimal> _ConditionGreaterThan;
		
		private System.Nullable<decimal> _ConditionLessThan;
		
		private int _CategoryNum;
		
		private string _Abbreviation;
		
		private string _Name;
		
		private string _Explanation;
		
		private string _WidthStyle;
		
		private int _NumNonNull;
		
		private double _ProportionNonNull;
		
		private bool _UsingNonSparseColumn;
		
		private bool _ShouldUseNonSparseColumn;
		
		private bool _UseAsFilter;
		
		private bool _Sortable;
		
		private bool _DefaultSortOrderAscending;
		
		private bool _AutomaticallyCreateMissingRatings;
		
		private byte _Status;
		
		private EntitySet<OverrideCharacteristic> _OverrideCharacteristics;
		
		private EntitySet<TblColumnFormatting> _TblColumnFormattings;
		
		private EntitySet<RatingGroup> _RatingGroups;
		
		private EntityRef<TblColumn> _TblColumn2;
		
		private EntityRef<TblColumn> _TblColumn1;
		
		private EntityRef<TrustTrackerUnit> _TrustTrackerUnit;
		
		private EntityRef<RatingGroupAttribute> _RatingGroupAttribute;
		
		private EntityRef<TblTab> _TblTab;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTblColumnIDChanging(int value);
    partial void OnTblColumnIDChanged();
    partial void OnTblTabIDChanging(int value);
    partial void OnTblTabIDChanged();
    partial void OnDefaultRatingGroupAttributesIDChanging(int value);
    partial void OnDefaultRatingGroupAttributesIDChanged();
    partial void OnConditionTblColumnIDChanging(System.Nullable<int> value);
    partial void OnConditionTblColumnIDChanged();
    partial void OnTrustTrackerUnitIDChanging(System.Nullable<int> value);
    partial void OnTrustTrackerUnitIDChanged();
    partial void OnConditionGreaterThanChanging(System.Nullable<decimal> value);
    partial void OnConditionGreaterThanChanged();
    partial void OnConditionLessThanChanging(System.Nullable<decimal> value);
    partial void OnConditionLessThanChanged();
    partial void OnCategoryNumChanging(int value);
    partial void OnCategoryNumChanged();
    partial void OnAbbreviationChanging(string value);
    partial void OnAbbreviationChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExplanationChanging(string value);
    partial void OnExplanationChanged();
    partial void OnWidthStyleChanging(string value);
    partial void OnWidthStyleChanged();
    partial void OnNumNonNullChanging(int value);
    partial void OnNumNonNullChanged();
    partial void OnProportionNonNullChanging(double value);
    partial void OnProportionNonNullChanged();
    partial void OnUsingNonSparseColumnChanging(bool value);
    partial void OnUsingNonSparseColumnChanged();
    partial void OnShouldUseNonSparseColumnChanging(bool value);
    partial void OnShouldUseNonSparseColumnChanged();
    partial void OnUseAsFilterChanging(bool value);
    partial void OnUseAsFilterChanged();
    partial void OnSortableChanging(bool value);
    partial void OnSortableChanged();
    partial void OnDefaultSortOrderAscendingChanging(bool value);
    partial void OnDefaultSortOrderAscendingChanged();
    partial void OnAutomaticallyCreateMissingRatingsChanging(bool value);
    partial void OnAutomaticallyCreateMissingRatingsChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public TblColumn()
		{
			this._OverrideCharacteristics = new EntitySet<OverrideCharacteristic>(new Action<OverrideCharacteristic>(this.attach_OverrideCharacteristics), new Action<OverrideCharacteristic>(this.detach_OverrideCharacteristics));
			this._TblColumnFormattings = new EntitySet<TblColumnFormatting>(new Action<TblColumnFormatting>(this.attach_TblColumnFormattings), new Action<TblColumnFormatting>(this.detach_TblColumnFormattings));
			this._RatingGroups = new EntitySet<RatingGroup>(new Action<RatingGroup>(this.attach_RatingGroups), new Action<RatingGroup>(this.detach_RatingGroups));
			this._TblColumn2 = default(EntityRef<TblColumn>);
			this._TblColumn1 = default(EntityRef<TblColumn>);
			this._TrustTrackerUnit = default(EntityRef<TrustTrackerUnit>);
			this._RatingGroupAttribute = default(EntityRef<RatingGroupAttribute>);
			this._TblTab = default(EntityRef<TblTab>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblColumnID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TblColumnID
		{
			get
			{
				return this._TblColumnID;
			}
			set
			{
				if ((this._TblColumnID != value))
				{
					if (this._TblColumn1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblColumnIDChanging(value);
					this.SendPropertyChanging();
					this._TblColumnID = value;
					this.SendPropertyChanged("TblColumnID");
					this.OnTblColumnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblTabID", DbType="Int NOT NULL")]
		public int TblTabID
		{
			get
			{
				return this._TblTabID;
			}
			set
			{
				if ((this._TblTabID != value))
				{
					if (this._TblTab.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblTabIDChanging(value);
					this.SendPropertyChanging();
					this._TblTabID = value;
					this.SendPropertyChanged("TblTabID");
					this.OnTblTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultRatingGroupAttributesID", DbType="Int NOT NULL")]
		public int DefaultRatingGroupAttributesID
		{
			get
			{
				return this._DefaultRatingGroupAttributesID;
			}
			set
			{
				if ((this._DefaultRatingGroupAttributesID != value))
				{
					if (this._RatingGroupAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDefaultRatingGroupAttributesIDChanging(value);
					this.SendPropertyChanging();
					this._DefaultRatingGroupAttributesID = value;
					this.SendPropertyChanged("DefaultRatingGroupAttributesID");
					this.OnDefaultRatingGroupAttributesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionTblColumnID", DbType="Int")]
		public System.Nullable<int> ConditionTblColumnID
		{
			get
			{
				return this._ConditionTblColumnID;
			}
			set
			{
				if ((this._ConditionTblColumnID != value))
				{
					this.OnConditionTblColumnIDChanging(value);
					this.SendPropertyChanging();
					this._ConditionTblColumnID = value;
					this.SendPropertyChanged("ConditionTblColumnID");
					this.OnConditionTblColumnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustTrackerUnitID", DbType="Int")]
		public System.Nullable<int> TrustTrackerUnitID
		{
			get
			{
				return this._TrustTrackerUnitID;
			}
			set
			{
				if ((this._TrustTrackerUnitID != value))
				{
					if (this._TrustTrackerUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrustTrackerUnitIDChanging(value);
					this.SendPropertyChanging();
					this._TrustTrackerUnitID = value;
					this.SendPropertyChanged("TrustTrackerUnitID");
					this.OnTrustTrackerUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionGreaterThan", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ConditionGreaterThan
		{
			get
			{
				return this._ConditionGreaterThan;
			}
			set
			{
				if ((this._ConditionGreaterThan != value))
				{
					this.OnConditionGreaterThanChanging(value);
					this.SendPropertyChanging();
					this._ConditionGreaterThan = value;
					this.SendPropertyChanged("ConditionGreaterThan");
					this.OnConditionGreaterThanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionLessThan", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ConditionLessThan
		{
			get
			{
				return this._ConditionLessThan;
			}
			set
			{
				if ((this._ConditionLessThan != value))
				{
					this.OnConditionLessThanChanging(value);
					this.SendPropertyChanging();
					this._ConditionLessThan = value;
					this.SendPropertyChanged("ConditionLessThan");
					this.OnConditionLessThanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryNum", DbType="Int NOT NULL")]
		public int CategoryNum
		{
			get
			{
				return this._CategoryNum;
			}
			set
			{
				if ((this._CategoryNum != value))
				{
					this.OnCategoryNumChanging(value);
					this.SendPropertyChanging();
					this._CategoryNum = value;
					this.SendPropertyChanged("CategoryNum");
					this.OnCategoryNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbreviation", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string Abbreviation
		{
			get
			{
				return this._Abbreviation;
			}
			set
			{
				if ((this._Abbreviation != value))
				{
					this.OnAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._Abbreviation = value;
					this.SendPropertyChanged("Abbreviation");
					this.OnAbbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Explanation", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Explanation
		{
			get
			{
				return this._Explanation;
			}
			set
			{
				if ((this._Explanation != value))
				{
					this.OnExplanationChanging(value);
					this.SendPropertyChanging();
					this._Explanation = value;
					this.SendPropertyChanged("Explanation");
					this.OnExplanationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WidthStyle", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string WidthStyle
		{
			get
			{
				return this._WidthStyle;
			}
			set
			{
				if ((this._WidthStyle != value))
				{
					this.OnWidthStyleChanging(value);
					this.SendPropertyChanging();
					this._WidthStyle = value;
					this.SendPropertyChanged("WidthStyle");
					this.OnWidthStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumNonNull", DbType="Int NOT NULL")]
		public int NumNonNull
		{
			get
			{
				return this._NumNonNull;
			}
			set
			{
				if ((this._NumNonNull != value))
				{
					this.OnNumNonNullChanging(value);
					this.SendPropertyChanging();
					this._NumNonNull = value;
					this.SendPropertyChanged("NumNonNull");
					this.OnNumNonNullChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProportionNonNull", DbType="Float NOT NULL")]
		public double ProportionNonNull
		{
			get
			{
				return this._ProportionNonNull;
			}
			set
			{
				if ((this._ProportionNonNull != value))
				{
					this.OnProportionNonNullChanging(value);
					this.SendPropertyChanging();
					this._ProportionNonNull = value;
					this.SendPropertyChanged("ProportionNonNull");
					this.OnProportionNonNullChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsingNonSparseColumn", DbType="Bit NOT NULL")]
		public bool UsingNonSparseColumn
		{
			get
			{
				return this._UsingNonSparseColumn;
			}
			set
			{
				if ((this._UsingNonSparseColumn != value))
				{
					this.OnUsingNonSparseColumnChanging(value);
					this.SendPropertyChanging();
					this._UsingNonSparseColumn = value;
					this.SendPropertyChanged("UsingNonSparseColumn");
					this.OnUsingNonSparseColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShouldUseNonSparseColumn", DbType="Bit NOT NULL")]
		public bool ShouldUseNonSparseColumn
		{
			get
			{
				return this._ShouldUseNonSparseColumn;
			}
			set
			{
				if ((this._ShouldUseNonSparseColumn != value))
				{
					this.OnShouldUseNonSparseColumnChanging(value);
					this.SendPropertyChanging();
					this._ShouldUseNonSparseColumn = value;
					this.SendPropertyChanged("ShouldUseNonSparseColumn");
					this.OnShouldUseNonSparseColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseAsFilter", DbType="Bit NOT NULL")]
		public bool UseAsFilter
		{
			get
			{
				return this._UseAsFilter;
			}
			set
			{
				if ((this._UseAsFilter != value))
				{
					this.OnUseAsFilterChanging(value);
					this.SendPropertyChanging();
					this._UseAsFilter = value;
					this.SendPropertyChanged("UseAsFilter");
					this.OnUseAsFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sortable", DbType="Bit NOT NULL")]
		public bool Sortable
		{
			get
			{
				return this._Sortable;
			}
			set
			{
				if ((this._Sortable != value))
				{
					this.OnSortableChanging(value);
					this.SendPropertyChanging();
					this._Sortable = value;
					this.SendPropertyChanged("Sortable");
					this.OnSortableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultSortOrderAscending", DbType="Bit NOT NULL")]
		public bool DefaultSortOrderAscending
		{
			get
			{
				return this._DefaultSortOrderAscending;
			}
			set
			{
				if ((this._DefaultSortOrderAscending != value))
				{
					this.OnDefaultSortOrderAscendingChanging(value);
					this.SendPropertyChanging();
					this._DefaultSortOrderAscending = value;
					this.SendPropertyChanged("DefaultSortOrderAscending");
					this.OnDefaultSortOrderAscendingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomaticallyCreateMissingRatings", DbType="Bit NOT NULL")]
		public bool AutomaticallyCreateMissingRatings
		{
			get
			{
				return this._AutomaticallyCreateMissingRatings;
			}
			set
			{
				if ((this._AutomaticallyCreateMissingRatings != value))
				{
					this.OnAutomaticallyCreateMissingRatingsChanging(value);
					this.SendPropertyChanging();
					this._AutomaticallyCreateMissingRatings = value;
					this.SendPropertyChanged("AutomaticallyCreateMissingRatings");
					this.OnAutomaticallyCreateMissingRatingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblColumn_OverrideCharacteristic", Storage="_OverrideCharacteristics", ThisKey="TblColumnID", OtherKey="TblColumnID")]
		public EntitySet<OverrideCharacteristic> OverrideCharacteristics
		{
			get
			{
				return this._OverrideCharacteristics;
			}
			set
			{
				this._OverrideCharacteristics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblColumn_TblColumnFormatting", Storage="_TblColumnFormattings", ThisKey="TblColumnID", OtherKey="TblColumnID")]
		public EntitySet<TblColumnFormatting> TblColumnFormattings
		{
			get
			{
				return this._TblColumnFormattings;
			}
			set
			{
				this._TblColumnFormattings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblColumn_RatingGroup", Storage="_RatingGroups", ThisKey="TblColumnID", OtherKey="TblColumnID")]
		public EntitySet<RatingGroup> RatingGroups
		{
			get
			{
				return this._RatingGroups;
			}
			set
			{
				this._RatingGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblColumn_TblColumn", Storage="_TblColumn2", ThisKey="TblColumnID", OtherKey="TblColumnID", IsUnique=true, IsForeignKey=false)]
		public TblColumn TblColumn2
		{
			get
			{
				return this._TblColumn2.Entity;
			}
			set
			{
				TblColumn previousValue = this._TblColumn2.Entity;
				if (((previousValue != value) 
							|| (this._TblColumn2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblColumn2.Entity = null;
						previousValue.TblColumn1 = null;
					}
					this._TblColumn2.Entity = value;
					if ((value != null))
					{
						value.TblColumn1 = this;
					}
					this.SendPropertyChanged("TblColumn2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblColumn_TblColumn", Storage="_TblColumn1", ThisKey="TblColumnID", OtherKey="TblColumnID", IsForeignKey=true)]
		public TblColumn TblColumn1
		{
			get
			{
				return this._TblColumn1.Entity;
			}
			set
			{
				TblColumn previousValue = this._TblColumn1.Entity;
				if (((previousValue != value) 
							|| (this._TblColumn1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblColumn1.Entity = null;
						previousValue.TblColumn2 = null;
					}
					this._TblColumn1.Entity = value;
					if ((value != null))
					{
						value.TblColumn2 = this;
						this._TblColumnID = value.TblColumnID;
					}
					else
					{
						this._TblColumnID = default(int);
					}
					this.SendPropertyChanged("TblColumn1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrustTrackerUnit_TblColumn", Storage="_TrustTrackerUnit", ThisKey="TrustTrackerUnitID", OtherKey="TrustTrackerUnitID", IsForeignKey=true)]
		public TrustTrackerUnit TrustTrackerUnit
		{
			get
			{
				return this._TrustTrackerUnit.Entity;
			}
			set
			{
				TrustTrackerUnit previousValue = this._TrustTrackerUnit.Entity;
				if (((previousValue != value) 
							|| (this._TrustTrackerUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrustTrackerUnit.Entity = null;
						previousValue.TblColumns.Remove(this);
					}
					this._TrustTrackerUnit.Entity = value;
					if ((value != null))
					{
						value.TblColumns.Add(this);
						this._TrustTrackerUnitID = value.TrustTrackerUnitID;
					}
					else
					{
						this._TrustTrackerUnitID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrustTrackerUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingGroupAttribute_TblColumn", Storage="_RatingGroupAttribute", ThisKey="DefaultRatingGroupAttributesID", OtherKey="RatingGroupAttributesID", IsForeignKey=true)]
		public RatingGroupAttribute RatingGroupAttribute
		{
			get
			{
				return this._RatingGroupAttribute.Entity;
			}
			set
			{
				RatingGroupAttribute previousValue = this._RatingGroupAttribute.Entity;
				if (((previousValue != value) 
							|| (this._RatingGroupAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingGroupAttribute.Entity = null;
						previousValue.TblColumns.Remove(this);
					}
					this._RatingGroupAttribute.Entity = value;
					if ((value != null))
					{
						value.TblColumns.Add(this);
						this._DefaultRatingGroupAttributesID = value.RatingGroupAttributesID;
					}
					else
					{
						this._DefaultRatingGroupAttributesID = default(int);
					}
					this.SendPropertyChanged("RatingGroupAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblTab_TblColumn", Storage="_TblTab", ThisKey="TblTabID", OtherKey="TblTabID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TblTab TblTab
		{
			get
			{
				return this._TblTab.Entity;
			}
			set
			{
				TblTab previousValue = this._TblTab.Entity;
				if (((previousValue != value) 
							|| (this._TblTab.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblTab.Entity = null;
						previousValue.TblColumns.Remove(this);
					}
					this._TblTab.Entity = value;
					if ((value != null))
					{
						value.TblColumns.Add(this);
						this._TblTabID = value.TblTabID;
					}
					else
					{
						this._TblTabID = default(int);
					}
					this.SendPropertyChanged("TblTab");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OverrideCharacteristics(OverrideCharacteristic entity)
		{
			this.SendPropertyChanging();
			entity.TblColumn = this;
		}
		
		private void detach_OverrideCharacteristics(OverrideCharacteristic entity)
		{
			this.SendPropertyChanging();
			entity.TblColumn = null;
		}
		
		private void attach_TblColumnFormattings(TblColumnFormatting entity)
		{
			this.SendPropertyChanging();
			entity.TblColumn = this;
		}
		
		private void detach_TblColumnFormattings(TblColumnFormatting entity)
		{
			this.SendPropertyChanging();
			entity.TblColumn = null;
		}
		
		private void attach_RatingGroups(RatingGroup entity)
		{
			this.SendPropertyChanging();
			entity.TblColumn = this;
		}
		
		private void detach_RatingGroups(RatingGroup entity)
		{
			this.SendPropertyChanging();
			entity.TblColumn = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FieldDefinitions")]
	public partial class FieldDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FieldDefinitionID;
		
		private int _TblID;
		
		private int _FieldNum;
		
		private string _FieldName;
		
		private int _FieldType;
		
		private bool _UseAsFilter;
		
		private bool _AddToSearchWords;
		
		private int _DisplayInTableSettings;
		
		private int _DisplayInPopupSettings;
		
		private int _DisplayInTblRowPageSettings;
		
		private byte _Status;
		
		private int _NumNonNull;
		
		private double _ProportionNonNull;
		
		private bool _UsingNonSparseColumn;
		
		private bool _ShouldUseNonSparseColumn;
		
		private EntitySet<DateTimeFieldDefinition> _DateTimeFieldDefinitions;
		
		private EntitySet<Field> _Fields;
		
		private EntitySet<NumberFieldDefinition> _NumberFieldDefinitions;
		
		private EntitySet<TextFieldDefinition> _TextFieldDefinitions;
		
		private EntitySet<ChoiceGroupFieldDefinition> _ChoiceGroupFieldDefinitions;
		
		private EntityRef<Tbl> _Tbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFieldDefinitionIDChanging(int value);
    partial void OnFieldDefinitionIDChanged();
    partial void OnTblIDChanging(int value);
    partial void OnTblIDChanged();
    partial void OnFieldNumChanging(int value);
    partial void OnFieldNumChanged();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnFieldTypeChanging(int value);
    partial void OnFieldTypeChanged();
    partial void OnUseAsFilterChanging(bool value);
    partial void OnUseAsFilterChanged();
    partial void OnAddToSearchWordsChanging(bool value);
    partial void OnAddToSearchWordsChanged();
    partial void OnDisplayInTableSettingsChanging(int value);
    partial void OnDisplayInTableSettingsChanged();
    partial void OnDisplayInPopupSettingsChanging(int value);
    partial void OnDisplayInPopupSettingsChanged();
    partial void OnDisplayInTblRowPageSettingsChanging(int value);
    partial void OnDisplayInTblRowPageSettingsChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnNumNonNullChanging(int value);
    partial void OnNumNonNullChanged();
    partial void OnProportionNonNullChanging(double value);
    partial void OnProportionNonNullChanged();
    partial void OnUsingNonSparseColumnChanging(bool value);
    partial void OnUsingNonSparseColumnChanged();
    partial void OnShouldUseNonSparseColumnChanging(bool value);
    partial void OnShouldUseNonSparseColumnChanged();
    #endregion
		
		public FieldDefinition()
		{
			this._DateTimeFieldDefinitions = new EntitySet<DateTimeFieldDefinition>(new Action<DateTimeFieldDefinition>(this.attach_DateTimeFieldDefinitions), new Action<DateTimeFieldDefinition>(this.detach_DateTimeFieldDefinitions));
			this._Fields = new EntitySet<Field>(new Action<Field>(this.attach_Fields), new Action<Field>(this.detach_Fields));
			this._NumberFieldDefinitions = new EntitySet<NumberFieldDefinition>(new Action<NumberFieldDefinition>(this.attach_NumberFieldDefinitions), new Action<NumberFieldDefinition>(this.detach_NumberFieldDefinitions));
			this._TextFieldDefinitions = new EntitySet<TextFieldDefinition>(new Action<TextFieldDefinition>(this.attach_TextFieldDefinitions), new Action<TextFieldDefinition>(this.detach_TextFieldDefinitions));
			this._ChoiceGroupFieldDefinitions = new EntitySet<ChoiceGroupFieldDefinition>(new Action<ChoiceGroupFieldDefinition>(this.attach_ChoiceGroupFieldDefinitions), new Action<ChoiceGroupFieldDefinition>(this.detach_ChoiceGroupFieldDefinitions));
			this._Tbl = default(EntityRef<Tbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldDefinitionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FieldDefinitionID
		{
			get
			{
				return this._FieldDefinitionID;
			}
			set
			{
				if ((this._FieldDefinitionID != value))
				{
					this.OnFieldDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._FieldDefinitionID = value;
					this.SendPropertyChanged("FieldDefinitionID");
					this.OnFieldDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblID", DbType="Int NOT NULL")]
		public int TblID
		{
			get
			{
				return this._TblID;
			}
			set
			{
				if ((this._TblID != value))
				{
					if (this._Tbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblIDChanging(value);
					this.SendPropertyChanging();
					this._TblID = value;
					this.SendPropertyChanged("TblID");
					this.OnTblIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldNum", DbType="Int NOT NULL")]
		public int FieldNum
		{
			get
			{
				return this._FieldNum;
			}
			set
			{
				if ((this._FieldNum != value))
				{
					this.OnFieldNumChanging(value);
					this.SendPropertyChanging();
					this._FieldNum = value;
					this.SendPropertyChanged("FieldNum");
					this.OnFieldNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldType", DbType="Int NOT NULL")]
		public int FieldType
		{
			get
			{
				return this._FieldType;
			}
			set
			{
				if ((this._FieldType != value))
				{
					this.OnFieldTypeChanging(value);
					this.SendPropertyChanging();
					this._FieldType = value;
					this.SendPropertyChanged("FieldType");
					this.OnFieldTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseAsFilter", DbType="Bit NOT NULL")]
		public bool UseAsFilter
		{
			get
			{
				return this._UseAsFilter;
			}
			set
			{
				if ((this._UseAsFilter != value))
				{
					this.OnUseAsFilterChanging(value);
					this.SendPropertyChanging();
					this._UseAsFilter = value;
					this.SendPropertyChanged("UseAsFilter");
					this.OnUseAsFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddToSearchWords", DbType="Bit NOT NULL")]
		public bool AddToSearchWords
		{
			get
			{
				return this._AddToSearchWords;
			}
			set
			{
				if ((this._AddToSearchWords != value))
				{
					this.OnAddToSearchWordsChanging(value);
					this.SendPropertyChanging();
					this._AddToSearchWords = value;
					this.SendPropertyChanged("AddToSearchWords");
					this.OnAddToSearchWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayInTableSettings", DbType="Int NOT NULL")]
		public int DisplayInTableSettings
		{
			get
			{
				return this._DisplayInTableSettings;
			}
			set
			{
				if ((this._DisplayInTableSettings != value))
				{
					this.OnDisplayInTableSettingsChanging(value);
					this.SendPropertyChanging();
					this._DisplayInTableSettings = value;
					this.SendPropertyChanged("DisplayInTableSettings");
					this.OnDisplayInTableSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayInPopupSettings", DbType="Int NOT NULL")]
		public int DisplayInPopupSettings
		{
			get
			{
				return this._DisplayInPopupSettings;
			}
			set
			{
				if ((this._DisplayInPopupSettings != value))
				{
					this.OnDisplayInPopupSettingsChanging(value);
					this.SendPropertyChanging();
					this._DisplayInPopupSettings = value;
					this.SendPropertyChanged("DisplayInPopupSettings");
					this.OnDisplayInPopupSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayInTblRowPageSettings", DbType="Int NOT NULL")]
		public int DisplayInTblRowPageSettings
		{
			get
			{
				return this._DisplayInTblRowPageSettings;
			}
			set
			{
				if ((this._DisplayInTblRowPageSettings != value))
				{
					this.OnDisplayInTblRowPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._DisplayInTblRowPageSettings = value;
					this.SendPropertyChanged("DisplayInTblRowPageSettings");
					this.OnDisplayInTblRowPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumNonNull", DbType="Int NOT NULL")]
		public int NumNonNull
		{
			get
			{
				return this._NumNonNull;
			}
			set
			{
				if ((this._NumNonNull != value))
				{
					this.OnNumNonNullChanging(value);
					this.SendPropertyChanging();
					this._NumNonNull = value;
					this.SendPropertyChanged("NumNonNull");
					this.OnNumNonNullChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProportionNonNull", DbType="Float NOT NULL")]
		public double ProportionNonNull
		{
			get
			{
				return this._ProportionNonNull;
			}
			set
			{
				if ((this._ProportionNonNull != value))
				{
					this.OnProportionNonNullChanging(value);
					this.SendPropertyChanging();
					this._ProportionNonNull = value;
					this.SendPropertyChanged("ProportionNonNull");
					this.OnProportionNonNullChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsingNonSparseColumn", DbType="Bit NOT NULL")]
		public bool UsingNonSparseColumn
		{
			get
			{
				return this._UsingNonSparseColumn;
			}
			set
			{
				if ((this._UsingNonSparseColumn != value))
				{
					this.OnUsingNonSparseColumnChanging(value);
					this.SendPropertyChanging();
					this._UsingNonSparseColumn = value;
					this.SendPropertyChanged("UsingNonSparseColumn");
					this.OnUsingNonSparseColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShouldUseNonSparseColumn", DbType="Bit NOT NULL")]
		public bool ShouldUseNonSparseColumn
		{
			get
			{
				return this._ShouldUseNonSparseColumn;
			}
			set
			{
				if ((this._ShouldUseNonSparseColumn != value))
				{
					this.OnShouldUseNonSparseColumnChanging(value);
					this.SendPropertyChanging();
					this._ShouldUseNonSparseColumn = value;
					this.SendPropertyChanged("ShouldUseNonSparseColumn");
					this.OnShouldUseNonSparseColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FieldDefinition_DateTimeFieldDefinition", Storage="_DateTimeFieldDefinitions", ThisKey="FieldDefinitionID", OtherKey="FieldDefinitionID")]
		public EntitySet<DateTimeFieldDefinition> DateTimeFieldDefinitions
		{
			get
			{
				return this._DateTimeFieldDefinitions;
			}
			set
			{
				this._DateTimeFieldDefinitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FieldDefinition_Field", Storage="_Fields", ThisKey="FieldDefinitionID", OtherKey="FieldDefinitionID")]
		public EntitySet<Field> Fields
		{
			get
			{
				return this._Fields;
			}
			set
			{
				this._Fields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FieldDefinition_NumberFieldDefinition", Storage="_NumberFieldDefinitions", ThisKey="FieldDefinitionID", OtherKey="FieldDefinitionID")]
		public EntitySet<NumberFieldDefinition> NumberFieldDefinitions
		{
			get
			{
				return this._NumberFieldDefinitions;
			}
			set
			{
				this._NumberFieldDefinitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FieldDefinition_TextFieldDefinition", Storage="_TextFieldDefinitions", ThisKey="FieldDefinitionID", OtherKey="FieldDefinitionID")]
		public EntitySet<TextFieldDefinition> TextFieldDefinitions
		{
			get
			{
				return this._TextFieldDefinitions;
			}
			set
			{
				this._TextFieldDefinitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FieldDefinition_ChoiceGroupFieldDefinition", Storage="_ChoiceGroupFieldDefinitions", ThisKey="FieldDefinitionID", OtherKey="FieldDefinitionID")]
		public EntitySet<ChoiceGroupFieldDefinition> ChoiceGroupFieldDefinitions
		{
			get
			{
				return this._ChoiceGroupFieldDefinitions;
			}
			set
			{
				this._ChoiceGroupFieldDefinitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_FieldDefinition", Storage="_Tbl", ThisKey="TblID", OtherKey="TblID", IsForeignKey=true)]
		public Tbl Tbl
		{
			get
			{
				return this._Tbl.Entity;
			}
			set
			{
				Tbl previousValue = this._Tbl.Entity;
				if (((previousValue != value) 
							|| (this._Tbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl.Entity = null;
						previousValue.FieldDefinitions.Remove(this);
					}
					this._Tbl.Entity = value;
					if ((value != null))
					{
						value.FieldDefinitions.Add(this);
						this._TblID = value.TblID;
					}
					else
					{
						this._TblID = default(int);
					}
					this.SendPropertyChanged("Tbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DateTimeFieldDefinitions(DateTimeFieldDefinition entity)
		{
			this.SendPropertyChanging();
			entity.FieldDefinition = this;
		}
		
		private void detach_DateTimeFieldDefinitions(DateTimeFieldDefinition entity)
		{
			this.SendPropertyChanging();
			entity.FieldDefinition = null;
		}
		
		private void attach_Fields(Field entity)
		{
			this.SendPropertyChanging();
			entity.FieldDefinition = this;
		}
		
		private void detach_Fields(Field entity)
		{
			this.SendPropertyChanging();
			entity.FieldDefinition = null;
		}
		
		private void attach_NumberFieldDefinitions(NumberFieldDefinition entity)
		{
			this.SendPropertyChanging();
			entity.FieldDefinition = this;
		}
		
		private void detach_NumberFieldDefinitions(NumberFieldDefinition entity)
		{
			this.SendPropertyChanging();
			entity.FieldDefinition = null;
		}
		
		private void attach_TextFieldDefinitions(TextFieldDefinition entity)
		{
			this.SendPropertyChanging();
			entity.FieldDefinition = this;
		}
		
		private void detach_TextFieldDefinitions(TextFieldDefinition entity)
		{
			this.SendPropertyChanging();
			entity.FieldDefinition = null;
		}
		
		private void attach_ChoiceGroupFieldDefinitions(ChoiceGroupFieldDefinition entity)
		{
			this.SendPropertyChanging();
			entity.FieldDefinition = this;
		}
		
		private void detach_ChoiceGroupFieldDefinitions(ChoiceGroupFieldDefinition entity)
		{
			this.SendPropertyChanging();
			entity.FieldDefinition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UniquenessLockReferences")]
	public partial class UniquenessLockReference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _UniquenessLockID;
		
		private EntityRef<UniquenessLock> _UniquenessLock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnUniquenessLockIDChanging(System.Nullable<System.Guid> value);
    partial void OnUniquenessLockIDChanged();
    #endregion
		
		public UniquenessLockReference()
		{
			this._UniquenessLock = default(EntityRef<UniquenessLock>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniquenessLockID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UniquenessLockID
		{
			get
			{
				return this._UniquenessLockID;
			}
			set
			{
				if ((this._UniquenessLockID != value))
				{
					if (this._UniquenessLock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniquenessLockIDChanging(value);
					this.SendPropertyChanging();
					this._UniquenessLockID = value;
					this.SendPropertyChanged("UniquenessLockID");
					this.OnUniquenessLockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UniquenessLock_UniquenessLockReference", Storage="_UniquenessLock", ThisKey="UniquenessLockID", OtherKey="Id", IsForeignKey=true)]
		public UniquenessLock UniquenessLock
		{
			get
			{
				return this._UniquenessLock.Entity;
			}
			set
			{
				UniquenessLock previousValue = this._UniquenessLock.Entity;
				if (((previousValue != value) 
							|| (this._UniquenessLock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UniquenessLock.Entity = null;
						previousValue.UniquenessLockReferences.Remove(this);
					}
					this._UniquenessLock.Entity = value;
					if ((value != null))
					{
						value.UniquenessLockReferences.Add(this);
						this._UniquenessLockID = value.Id;
					}
					else
					{
						this._UniquenessLockID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("UniquenessLock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvitedUser")]
	public partial class InvitedUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActivationNumber;
		
		private string _EmailId;
		
		private bool _MayView;
		
		private bool _MayPredict;
		
		private bool _MayAddTbls;
		
		private bool _MayResolveRatings;
		
		private bool _MayChangeTblRows;
		
		private bool _MayChangeChoiceGroups;
		
		private bool _MayChangeCharacteristics;
		
		private bool _MayChangeColumns;
		
		private bool _MayChangeUsersRights;
		
		private bool _MayAdjustPoints;
		
		private bool _MayChangeProposalSettings;
		
		private bool _IsRegistered;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivationNumberChanging(int value);
    partial void OnActivationNumberChanged();
    partial void OnEmailIdChanging(string value);
    partial void OnEmailIdChanged();
    partial void OnMayViewChanging(bool value);
    partial void OnMayViewChanged();
    partial void OnMayPredictChanging(bool value);
    partial void OnMayPredictChanged();
    partial void OnMayAddTblsChanging(bool value);
    partial void OnMayAddTblsChanged();
    partial void OnMayResolveRatingsChanging(bool value);
    partial void OnMayResolveRatingsChanged();
    partial void OnMayChangeTblRowsChanging(bool value);
    partial void OnMayChangeTblRowsChanged();
    partial void OnMayChangeChoiceGroupsChanging(bool value);
    partial void OnMayChangeChoiceGroupsChanged();
    partial void OnMayChangeCharacteristicsChanging(bool value);
    partial void OnMayChangeCharacteristicsChanged();
    partial void OnMayChangeColumnsChanging(bool value);
    partial void OnMayChangeColumnsChanged();
    partial void OnMayChangeUsersRightsChanging(bool value);
    partial void OnMayChangeUsersRightsChanged();
    partial void OnMayAdjustPointsChanging(bool value);
    partial void OnMayAdjustPointsChanged();
    partial void OnMayChangeProposalSettingsChanging(bool value);
    partial void OnMayChangeProposalSettingsChanged();
    partial void OnIsRegisteredChanging(bool value);
    partial void OnIsRegisteredChanged();
    #endregion
		
		public InvitedUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationNumber", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ActivationNumber
		{
			get
			{
				return this._ActivationNumber;
			}
			set
			{
				if ((this._ActivationNumber != value))
				{
					this.OnActivationNumberChanging(value);
					this.SendPropertyChanging();
					this._ActivationNumber = value;
					this.SendPropertyChanged("ActivationNumber");
					this.OnActivationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmailId
		{
			get
			{
				return this._EmailId;
			}
			set
			{
				if ((this._EmailId != value))
				{
					this.OnEmailIdChanging(value);
					this.SendPropertyChanging();
					this._EmailId = value;
					this.SendPropertyChanged("EmailId");
					this.OnEmailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayView", DbType="Bit NOT NULL")]
		public bool MayView
		{
			get
			{
				return this._MayView;
			}
			set
			{
				if ((this._MayView != value))
				{
					this.OnMayViewChanging(value);
					this.SendPropertyChanging();
					this._MayView = value;
					this.SendPropertyChanged("MayView");
					this.OnMayViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayPredict", DbType="Bit NOT NULL")]
		public bool MayPredict
		{
			get
			{
				return this._MayPredict;
			}
			set
			{
				if ((this._MayPredict != value))
				{
					this.OnMayPredictChanging(value);
					this.SendPropertyChanging();
					this._MayPredict = value;
					this.SendPropertyChanged("MayPredict");
					this.OnMayPredictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayAddTbls", DbType="Bit NOT NULL")]
		public bool MayAddTbls
		{
			get
			{
				return this._MayAddTbls;
			}
			set
			{
				if ((this._MayAddTbls != value))
				{
					this.OnMayAddTblsChanging(value);
					this.SendPropertyChanging();
					this._MayAddTbls = value;
					this.SendPropertyChanged("MayAddTbls");
					this.OnMayAddTblsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayResolveRatings", DbType="Bit NOT NULL")]
		public bool MayResolveRatings
		{
			get
			{
				return this._MayResolveRatings;
			}
			set
			{
				if ((this._MayResolveRatings != value))
				{
					this.OnMayResolveRatingsChanging(value);
					this.SendPropertyChanging();
					this._MayResolveRatings = value;
					this.SendPropertyChanged("MayResolveRatings");
					this.OnMayResolveRatingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayChangeTblRows", DbType="Bit NOT NULL")]
		public bool MayChangeTblRows
		{
			get
			{
				return this._MayChangeTblRows;
			}
			set
			{
				if ((this._MayChangeTblRows != value))
				{
					this.OnMayChangeTblRowsChanging(value);
					this.SendPropertyChanging();
					this._MayChangeTblRows = value;
					this.SendPropertyChanged("MayChangeTblRows");
					this.OnMayChangeTblRowsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayChangeChoiceGroups", DbType="Bit NOT NULL")]
		public bool MayChangeChoiceGroups
		{
			get
			{
				return this._MayChangeChoiceGroups;
			}
			set
			{
				if ((this._MayChangeChoiceGroups != value))
				{
					this.OnMayChangeChoiceGroupsChanging(value);
					this.SendPropertyChanging();
					this._MayChangeChoiceGroups = value;
					this.SendPropertyChanged("MayChangeChoiceGroups");
					this.OnMayChangeChoiceGroupsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayChangeCharacteristics", DbType="Bit NOT NULL")]
		public bool MayChangeCharacteristics
		{
			get
			{
				return this._MayChangeCharacteristics;
			}
			set
			{
				if ((this._MayChangeCharacteristics != value))
				{
					this.OnMayChangeCharacteristicsChanging(value);
					this.SendPropertyChanging();
					this._MayChangeCharacteristics = value;
					this.SendPropertyChanged("MayChangeCharacteristics");
					this.OnMayChangeCharacteristicsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayChangeColumns", DbType="Bit NOT NULL")]
		public bool MayChangeColumns
		{
			get
			{
				return this._MayChangeColumns;
			}
			set
			{
				if ((this._MayChangeColumns != value))
				{
					this.OnMayChangeColumnsChanging(value);
					this.SendPropertyChanging();
					this._MayChangeColumns = value;
					this.SendPropertyChanged("MayChangeColumns");
					this.OnMayChangeColumnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayChangeUsersRights", DbType="Bit NOT NULL")]
		public bool MayChangeUsersRights
		{
			get
			{
				return this._MayChangeUsersRights;
			}
			set
			{
				if ((this._MayChangeUsersRights != value))
				{
					this.OnMayChangeUsersRightsChanging(value);
					this.SendPropertyChanging();
					this._MayChangeUsersRights = value;
					this.SendPropertyChanged("MayChangeUsersRights");
					this.OnMayChangeUsersRightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayAdjustPoints", DbType="Bit NOT NULL")]
		public bool MayAdjustPoints
		{
			get
			{
				return this._MayAdjustPoints;
			}
			set
			{
				if ((this._MayAdjustPoints != value))
				{
					this.OnMayAdjustPointsChanging(value);
					this.SendPropertyChanging();
					this._MayAdjustPoints = value;
					this.SendPropertyChanged("MayAdjustPoints");
					this.OnMayAdjustPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayChangeProposalSettings", DbType="Bit NOT NULL")]
		public bool MayChangeProposalSettings
		{
			get
			{
				return this._MayChangeProposalSettings;
			}
			set
			{
				if ((this._MayChangeProposalSettings != value))
				{
					this.OnMayChangeProposalSettingsChanging(value);
					this.SendPropertyChanging();
					this._MayChangeProposalSettings = value;
					this.SendPropertyChanged("MayChangeProposalSettings");
					this.OnMayChangeProposalSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRegistered", DbType="Bit NOT NULL")]
		public bool IsRegistered
		{
			get
			{
				return this._IsRegistered;
			}
			set
			{
				if ((this._IsRegistered != value))
				{
					this.OnIsRegisteredChanging(value);
					this.SendPropertyChanging();
					this._IsRegistered = value;
					this.SendPropertyChanged("IsRegistered");
					this.OnIsRegisteredChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProposalSettings")]
	public partial class ProposalSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProposalSettingsID;
		
		private System.Nullable<int> _PointsManagerID;
		
		private System.Nullable<int> _TblID;
		
		private bool _UsersMayProposeAddingTbls;
		
		private bool _UsersMayProposeResolvingRatings;
		
		private bool _UsersMayProposeChangingTblRows;
		
		private bool _UsersMayProposeChangingChoiceGroups;
		
		private bool _UsersMayProposeChangingCharacteristics;
		
		private bool _UsersMayProposeChangingColumns;
		
		private bool _UsersMayProposeChangingUsersRights;
		
		private bool _UsersMayProposeAdjustingPoints;
		
		private bool _UsersMayProposeChangingProposalSettings;
		
		private decimal _MinValueToApprove;
		
		private decimal _MaxValueToReject;
		
		private int _MinTimePastThreshold;
		
		private decimal _MinProportionOfThisTime;
		
		private int _MinAdditionalTimeForRewardRating;
		
		private int _HalfLifeForRewardRating;
		
		private decimal _MaxBonusForProposal;
		
		private decimal _MaxPenaltyForRejection;
		
		private decimal _SubsidyForApprovalRating;
		
		private decimal _SubsidyForRewardRating;
		
		private int _HalfLifeForResolvingAtFinalValue;
		
		private decimal _RequiredPointsToMakeProposal;
		
		private string _Name;
		
		private System.Nullable<int> _Creator;
		
		private byte _Status;
		
		private EntityRef<PointsManager> _PointsManager;
		
		private EntityRef<Tbl> _Tbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProposalSettingsIDChanging(int value);
    partial void OnProposalSettingsIDChanged();
    partial void OnPointsManagerIDChanging(System.Nullable<int> value);
    partial void OnPointsManagerIDChanged();
    partial void OnTblIDChanging(System.Nullable<int> value);
    partial void OnTblIDChanged();
    partial void OnUsersMayProposeAddingTblsChanging(bool value);
    partial void OnUsersMayProposeAddingTblsChanged();
    partial void OnUsersMayProposeResolvingRatingsChanging(bool value);
    partial void OnUsersMayProposeResolvingRatingsChanged();
    partial void OnUsersMayProposeChangingTblRowsChanging(bool value);
    partial void OnUsersMayProposeChangingTblRowsChanged();
    partial void OnUsersMayProposeChangingChoiceGroupsChanging(bool value);
    partial void OnUsersMayProposeChangingChoiceGroupsChanged();
    partial void OnUsersMayProposeChangingCharacteristicsChanging(bool value);
    partial void OnUsersMayProposeChangingCharacteristicsChanged();
    partial void OnUsersMayProposeChangingColumnsChanging(bool value);
    partial void OnUsersMayProposeChangingColumnsChanged();
    partial void OnUsersMayProposeChangingUsersRightsChanging(bool value);
    partial void OnUsersMayProposeChangingUsersRightsChanged();
    partial void OnUsersMayProposeAdjustingPointsChanging(bool value);
    partial void OnUsersMayProposeAdjustingPointsChanged();
    partial void OnUsersMayProposeChangingProposalSettingsChanging(bool value);
    partial void OnUsersMayProposeChangingProposalSettingsChanged();
    partial void OnMinValueToApproveChanging(decimal value);
    partial void OnMinValueToApproveChanged();
    partial void OnMaxValueToRejectChanging(decimal value);
    partial void OnMaxValueToRejectChanged();
    partial void OnMinTimePastThresholdChanging(int value);
    partial void OnMinTimePastThresholdChanged();
    partial void OnMinProportionOfThisTimeChanging(decimal value);
    partial void OnMinProportionOfThisTimeChanged();
    partial void OnMinAdditionalTimeForRewardRatingChanging(int value);
    partial void OnMinAdditionalTimeForRewardRatingChanged();
    partial void OnHalfLifeForRewardRatingChanging(int value);
    partial void OnHalfLifeForRewardRatingChanged();
    partial void OnMaxBonusForProposalChanging(decimal value);
    partial void OnMaxBonusForProposalChanged();
    partial void OnMaxPenaltyForRejectionChanging(decimal value);
    partial void OnMaxPenaltyForRejectionChanged();
    partial void OnSubsidyForApprovalRatingChanging(decimal value);
    partial void OnSubsidyForApprovalRatingChanged();
    partial void OnSubsidyForRewardRatingChanging(decimal value);
    partial void OnSubsidyForRewardRatingChanged();
    partial void OnHalfLifeForResolvingAtFinalValueChanging(int value);
    partial void OnHalfLifeForResolvingAtFinalValueChanged();
    partial void OnRequiredPointsToMakeProposalChanging(decimal value);
    partial void OnRequiredPointsToMakeProposalChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public ProposalSetting()
		{
			this._PointsManager = default(EntityRef<PointsManager>);
			this._Tbl = default(EntityRef<Tbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposalSettingsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProposalSettingsID
		{
			get
			{
				return this._ProposalSettingsID;
			}
			set
			{
				if ((this._ProposalSettingsID != value))
				{
					this.OnProposalSettingsIDChanging(value);
					this.SendPropertyChanging();
					this._ProposalSettingsID = value;
					this.SendPropertyChanged("ProposalSettingsID");
					this.OnProposalSettingsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsManagerID", DbType="Int")]
		public System.Nullable<int> PointsManagerID
		{
			get
			{
				return this._PointsManagerID;
			}
			set
			{
				if ((this._PointsManagerID != value))
				{
					if (this._PointsManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPointsManagerIDChanging(value);
					this.SendPropertyChanging();
					this._PointsManagerID = value;
					this.SendPropertyChanged("PointsManagerID");
					this.OnPointsManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblID", DbType="Int")]
		public System.Nullable<int> TblID
		{
			get
			{
				return this._TblID;
			}
			set
			{
				if ((this._TblID != value))
				{
					if (this._Tbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTblIDChanging(value);
					this.SendPropertyChanging();
					this._TblID = value;
					this.SendPropertyChanged("TblID");
					this.OnTblIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsersMayProposeAddingTbls", DbType="Bit NOT NULL")]
		public bool UsersMayProposeAddingTbls
		{
			get
			{
				return this._UsersMayProposeAddingTbls;
			}
			set
			{
				if ((this._UsersMayProposeAddingTbls != value))
				{
					this.OnUsersMayProposeAddingTblsChanging(value);
					this.SendPropertyChanging();
					this._UsersMayProposeAddingTbls = value;
					this.SendPropertyChanged("UsersMayProposeAddingTbls");
					this.OnUsersMayProposeAddingTblsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsersMayProposeResolvingRatings", DbType="Bit NOT NULL")]
		public bool UsersMayProposeResolvingRatings
		{
			get
			{
				return this._UsersMayProposeResolvingRatings;
			}
			set
			{
				if ((this._UsersMayProposeResolvingRatings != value))
				{
					this.OnUsersMayProposeResolvingRatingsChanging(value);
					this.SendPropertyChanging();
					this._UsersMayProposeResolvingRatings = value;
					this.SendPropertyChanged("UsersMayProposeResolvingRatings");
					this.OnUsersMayProposeResolvingRatingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsersMayProposeChangingTblRows", DbType="Bit NOT NULL")]
		public bool UsersMayProposeChangingTblRows
		{
			get
			{
				return this._UsersMayProposeChangingTblRows;
			}
			set
			{
				if ((this._UsersMayProposeChangingTblRows != value))
				{
					this.OnUsersMayProposeChangingTblRowsChanging(value);
					this.SendPropertyChanging();
					this._UsersMayProposeChangingTblRows = value;
					this.SendPropertyChanged("UsersMayProposeChangingTblRows");
					this.OnUsersMayProposeChangingTblRowsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsersMayProposeChangingChoiceGroups", DbType="Bit NOT NULL")]
		public bool UsersMayProposeChangingChoiceGroups
		{
			get
			{
				return this._UsersMayProposeChangingChoiceGroups;
			}
			set
			{
				if ((this._UsersMayProposeChangingChoiceGroups != value))
				{
					this.OnUsersMayProposeChangingChoiceGroupsChanging(value);
					this.SendPropertyChanging();
					this._UsersMayProposeChangingChoiceGroups = value;
					this.SendPropertyChanged("UsersMayProposeChangingChoiceGroups");
					this.OnUsersMayProposeChangingChoiceGroupsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsersMayProposeChangingCharacteristics", DbType="Bit NOT NULL")]
		public bool UsersMayProposeChangingCharacteristics
		{
			get
			{
				return this._UsersMayProposeChangingCharacteristics;
			}
			set
			{
				if ((this._UsersMayProposeChangingCharacteristics != value))
				{
					this.OnUsersMayProposeChangingCharacteristicsChanging(value);
					this.SendPropertyChanging();
					this._UsersMayProposeChangingCharacteristics = value;
					this.SendPropertyChanged("UsersMayProposeChangingCharacteristics");
					this.OnUsersMayProposeChangingCharacteristicsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsersMayProposeChangingColumns", DbType="Bit NOT NULL")]
		public bool UsersMayProposeChangingColumns
		{
			get
			{
				return this._UsersMayProposeChangingColumns;
			}
			set
			{
				if ((this._UsersMayProposeChangingColumns != value))
				{
					this.OnUsersMayProposeChangingColumnsChanging(value);
					this.SendPropertyChanging();
					this._UsersMayProposeChangingColumns = value;
					this.SendPropertyChanged("UsersMayProposeChangingColumns");
					this.OnUsersMayProposeChangingColumnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsersMayProposeChangingUsersRights", DbType="Bit NOT NULL")]
		public bool UsersMayProposeChangingUsersRights
		{
			get
			{
				return this._UsersMayProposeChangingUsersRights;
			}
			set
			{
				if ((this._UsersMayProposeChangingUsersRights != value))
				{
					this.OnUsersMayProposeChangingUsersRightsChanging(value);
					this.SendPropertyChanging();
					this._UsersMayProposeChangingUsersRights = value;
					this.SendPropertyChanged("UsersMayProposeChangingUsersRights");
					this.OnUsersMayProposeChangingUsersRightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsersMayProposeAdjustingPoints", DbType="Bit NOT NULL")]
		public bool UsersMayProposeAdjustingPoints
		{
			get
			{
				return this._UsersMayProposeAdjustingPoints;
			}
			set
			{
				if ((this._UsersMayProposeAdjustingPoints != value))
				{
					this.OnUsersMayProposeAdjustingPointsChanging(value);
					this.SendPropertyChanging();
					this._UsersMayProposeAdjustingPoints = value;
					this.SendPropertyChanged("UsersMayProposeAdjustingPoints");
					this.OnUsersMayProposeAdjustingPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsersMayProposeChangingProposalSettings", DbType="Bit NOT NULL")]
		public bool UsersMayProposeChangingProposalSettings
		{
			get
			{
				return this._UsersMayProposeChangingProposalSettings;
			}
			set
			{
				if ((this._UsersMayProposeChangingProposalSettings != value))
				{
					this.OnUsersMayProposeChangingProposalSettingsChanging(value);
					this.SendPropertyChanging();
					this._UsersMayProposeChangingProposalSettings = value;
					this.SendPropertyChanged("UsersMayProposeChangingProposalSettings");
					this.OnUsersMayProposeChangingProposalSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinValueToApprove", DbType="Decimal(18,4) NOT NULL")]
		public decimal MinValueToApprove
		{
			get
			{
				return this._MinValueToApprove;
			}
			set
			{
				if ((this._MinValueToApprove != value))
				{
					this.OnMinValueToApproveChanging(value);
					this.SendPropertyChanging();
					this._MinValueToApprove = value;
					this.SendPropertyChanged("MinValueToApprove");
					this.OnMinValueToApproveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxValueToReject", DbType="Decimal(18,4) NOT NULL")]
		public decimal MaxValueToReject
		{
			get
			{
				return this._MaxValueToReject;
			}
			set
			{
				if ((this._MaxValueToReject != value))
				{
					this.OnMaxValueToRejectChanging(value);
					this.SendPropertyChanging();
					this._MaxValueToReject = value;
					this.SendPropertyChanged("MaxValueToReject");
					this.OnMaxValueToRejectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinTimePastThreshold", DbType="Int NOT NULL")]
		public int MinTimePastThreshold
		{
			get
			{
				return this._MinTimePastThreshold;
			}
			set
			{
				if ((this._MinTimePastThreshold != value))
				{
					this.OnMinTimePastThresholdChanging(value);
					this.SendPropertyChanging();
					this._MinTimePastThreshold = value;
					this.SendPropertyChanged("MinTimePastThreshold");
					this.OnMinTimePastThresholdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinProportionOfThisTime", DbType="Decimal(18,4) NOT NULL")]
		public decimal MinProportionOfThisTime
		{
			get
			{
				return this._MinProportionOfThisTime;
			}
			set
			{
				if ((this._MinProportionOfThisTime != value))
				{
					this.OnMinProportionOfThisTimeChanging(value);
					this.SendPropertyChanging();
					this._MinProportionOfThisTime = value;
					this.SendPropertyChanged("MinProportionOfThisTime");
					this.OnMinProportionOfThisTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinAdditionalTimeForRewardRating", DbType="Int NOT NULL")]
		public int MinAdditionalTimeForRewardRating
		{
			get
			{
				return this._MinAdditionalTimeForRewardRating;
			}
			set
			{
				if ((this._MinAdditionalTimeForRewardRating != value))
				{
					this.OnMinAdditionalTimeForRewardRatingChanging(value);
					this.SendPropertyChanging();
					this._MinAdditionalTimeForRewardRating = value;
					this.SendPropertyChanged("MinAdditionalTimeForRewardRating");
					this.OnMinAdditionalTimeForRewardRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HalfLifeForRewardRating", DbType="Int NOT NULL")]
		public int HalfLifeForRewardRating
		{
			get
			{
				return this._HalfLifeForRewardRating;
			}
			set
			{
				if ((this._HalfLifeForRewardRating != value))
				{
					this.OnHalfLifeForRewardRatingChanging(value);
					this.SendPropertyChanging();
					this._HalfLifeForRewardRating = value;
					this.SendPropertyChanged("HalfLifeForRewardRating");
					this.OnHalfLifeForRewardRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxBonusForProposal", DbType="Decimal(18,4) NOT NULL")]
		public decimal MaxBonusForProposal
		{
			get
			{
				return this._MaxBonusForProposal;
			}
			set
			{
				if ((this._MaxBonusForProposal != value))
				{
					this.OnMaxBonusForProposalChanging(value);
					this.SendPropertyChanging();
					this._MaxBonusForProposal = value;
					this.SendPropertyChanged("MaxBonusForProposal");
					this.OnMaxBonusForProposalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPenaltyForRejection", DbType="Decimal(18,4) NOT NULL")]
		public decimal MaxPenaltyForRejection
		{
			get
			{
				return this._MaxPenaltyForRejection;
			}
			set
			{
				if ((this._MaxPenaltyForRejection != value))
				{
					this.OnMaxPenaltyForRejectionChanging(value);
					this.SendPropertyChanging();
					this._MaxPenaltyForRejection = value;
					this.SendPropertyChanged("MaxPenaltyForRejection");
					this.OnMaxPenaltyForRejectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubsidyForApprovalRating", DbType="Decimal(18,4) NOT NULL")]
		public decimal SubsidyForApprovalRating
		{
			get
			{
				return this._SubsidyForApprovalRating;
			}
			set
			{
				if ((this._SubsidyForApprovalRating != value))
				{
					this.OnSubsidyForApprovalRatingChanging(value);
					this.SendPropertyChanging();
					this._SubsidyForApprovalRating = value;
					this.SendPropertyChanged("SubsidyForApprovalRating");
					this.OnSubsidyForApprovalRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubsidyForRewardRating", DbType="Decimal(18,4) NOT NULL")]
		public decimal SubsidyForRewardRating
		{
			get
			{
				return this._SubsidyForRewardRating;
			}
			set
			{
				if ((this._SubsidyForRewardRating != value))
				{
					this.OnSubsidyForRewardRatingChanging(value);
					this.SendPropertyChanging();
					this._SubsidyForRewardRating = value;
					this.SendPropertyChanged("SubsidyForRewardRating");
					this.OnSubsidyForRewardRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HalfLifeForResolvingAtFinalValue", DbType="Int NOT NULL")]
		public int HalfLifeForResolvingAtFinalValue
		{
			get
			{
				return this._HalfLifeForResolvingAtFinalValue;
			}
			set
			{
				if ((this._HalfLifeForResolvingAtFinalValue != value))
				{
					this.OnHalfLifeForResolvingAtFinalValueChanging(value);
					this.SendPropertyChanging();
					this._HalfLifeForResolvingAtFinalValue = value;
					this.SendPropertyChanged("HalfLifeForResolvingAtFinalValue");
					this.OnHalfLifeForResolvingAtFinalValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredPointsToMakeProposal", DbType="Decimal(18,4) NOT NULL")]
		public decimal RequiredPointsToMakeProposal
		{
			get
			{
				return this._RequiredPointsToMakeProposal;
			}
			set
			{
				if ((this._RequiredPointsToMakeProposal != value))
				{
					this.OnRequiredPointsToMakeProposalChanging(value);
					this.SendPropertyChanging();
					this._RequiredPointsToMakeProposal = value;
					this.SendPropertyChanged("RequiredPointsToMakeProposal");
					this.OnRequiredPointsToMakeProposalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PointsManager_ProposalSetting", Storage="_PointsManager", ThisKey="PointsManagerID", OtherKey="PointsManagerID", IsForeignKey=true)]
		public PointsManager PointsManager
		{
			get
			{
				return this._PointsManager.Entity;
			}
			set
			{
				PointsManager previousValue = this._PointsManager.Entity;
				if (((previousValue != value) 
							|| (this._PointsManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PointsManager.Entity = null;
						previousValue.ProposalSettings.Remove(this);
					}
					this._PointsManager.Entity = value;
					if ((value != null))
					{
						value.ProposalSettings.Add(this);
						this._PointsManagerID = value.PointsManagerID;
					}
					else
					{
						this._PointsManagerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PointsManager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_ProposalSetting", Storage="_Tbl", ThisKey="TblID", OtherKey="TblID", IsForeignKey=true)]
		public Tbl Tbl
		{
			get
			{
				return this._Tbl.Entity;
			}
			set
			{
				Tbl previousValue = this._Tbl.Entity;
				if (((previousValue != value) 
							|| (this._Tbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl.Entity = null;
						previousValue.ProposalSettings.Remove(this);
					}
					this._Tbl.Entity = value;
					if ((value != null))
					{
						value.ProposalSettings.Add(this);
						this._TblID = value.TblID;
					}
					else
					{
						this._TblID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class UDFDistanceWithinResult
	{
		
		private System.Nullable<int> _AddressFieldID;
		
		private System.Nullable<int> _FieldID;
		
		public UDFDistanceWithinResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressFieldID", DbType="Int")]
		public System.Nullable<int> AddressFieldID
		{
			get
			{
				return this._AddressFieldID;
			}
			set
			{
				if ((this._AddressFieldID != value))
				{
					this._AddressFieldID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldID", DbType="Int")]
		public System.Nullable<int> FieldID
		{
			get
			{
				return this._FieldID;
			}
			set
			{
				if ((this._FieldID != value))
				{
					this._FieldID = value;
				}
			}
		}
	}
	
	public partial class UDFNearestNeighborsResult
	{
		
		private System.Nullable<int> _AddressFieldID;
		
		private System.Nullable<int> _FieldID;
		
		public UDFNearestNeighborsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressFieldID", DbType="Int")]
		public System.Nullable<int> AddressFieldID
		{
			get
			{
				return this._AddressFieldID;
			}
			set
			{
				if ((this._AddressFieldID != value))
				{
					this._AddressFieldID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldID", DbType="Int")]
		public System.Nullable<int> FieldID
		{
			get
			{
				return this._FieldID;
			}
			set
			{
				if ((this._FieldID != value))
				{
					this._FieldID = value;
				}
			}
		}
	}
	
	public partial class UDFNearestNeighborsForTblResult
	{
		
		private System.Nullable<int> _TblRowID;
		
		public UDFNearestNeighborsForTblResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TblRowID", DbType="Int")]
		public System.Nullable<int> TblRowID
		{
			get
			{
				return this._TblRowID;
			}
			set
			{
				if ((this._TblRowID != value))
				{
					this._TblRowID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
